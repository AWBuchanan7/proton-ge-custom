From: "Rémi Bernon" <rbernon@codeweavers.com>
Subject: [PATCH 1/3] makedep: Align PE sections so they can be mmapped.
Message-Id: <20200525143240.1498648-1-rbernon@codeweavers.com>
Date: Mon, 25 May 2020 16:32:38 +0200

This should help linux perf tool match the binary files on disk with the
code regions in memory.

Signed-off-by: Rémi Bernon <rbernon@codeweavers.com>
---

This is my old perf patch series rebased and using the recent CROSSDEBUG
variable to get split debug info. I'm assuming that the only use cases
are PDB split debug info or DWARF split debug info into ELF files for
perf, as I don't know any other, but if having DWARF debug in PE files
is actually useful for something then these patches are incorrect.

I could also see that some CROSSDEBUG checks look for "split" prefix in
makedep, and some other set the variable to dwarf. It's not clear to me
what this variable is supposed to be set to (other than "pdb"). Does
"dwarf" mean separate file as well?

 tools/makedep.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/tools/makedep.c b/tools/makedep.c
index 536d2263e35f..250250382fa8 100644
--- a/tools/makedep.c
+++ b/tools/makedep.c
@@ -3317,6 +3317,7 @@ static void output_module( struct makefile *make )
     if (debug_file) output_filename( strmake( "-Wl,--debug-file,%s", debug_file ));
     output_filenames( all_libs );
     output_filename( make->is_cross ? "$(CROSSLDFLAGS)" : "$(LDFLAGS)" );
+    output_filename( make->is_cross ? "-Wl,--file-alignment,4096" : "" );
     output( "\n" );
 
     if (make->unixobj_files.count)

-- 
2.26.1

From: "Rémi Bernon" <rbernon@codeweavers.com>
Subject: [PATCH 2/3] makedep: Output ELF debug file to .debug/ directory.
Message-Id: <20200525143240.1498648-2-rbernon@codeweavers.com>
Date: Mon, 25 May 2020 16:32:39 +0200
In-Reply-To: <20200525143240.1498648-1-rbernon@codeweavers.com>
References: <20200525143240.1498648-1-rbernon@codeweavers.com>

Linux perf isn't able to parse debug link from PE files either, but it
looks for similarly named files in relative a .debug directory.

Signed-off-by: Rémi Bernon <rbernon@codeweavers.com>
---
 tools/makedep.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/tools/makedep.c b/tools/makedep.c
index 250250382fa8..b550534fd789 100644
--- a/tools/makedep.c
+++ b/tools/makedep.c
@@ -2356,7 +2356,7 @@ static const char *get_debug_file( struct makefile *make, const char *name )
     const char *debug_file = NULL;
     if (!make->is_cross || !crossdebug) return NULL;
     if (!strcmp( crossdebug, "pdb" )) debug_file = strmake( "%s.pdb", get_base_name( name ));
-    else if(!strncmp( crossdebug, "split", 5 )) debug_file = strmake( "%s.debug", name );
+    else if(!strncmp( crossdebug, "split", 5 )) debug_file = strmake( ".debug/%s", name );
     if (debug_file) strarray_add( &make->debug_files, debug_file );
     return debug_file;
 }

-- 
2.26.1

From: "Rémi Bernon" <rbernon@codeweavers.com>
Subject: [PATCH 3/3] winegcc: Use ELF format for split debug file.
Message-Id: <20200525143240.1498648-3-rbernon@codeweavers.com>
Date: Mon, 25 May 2020 16:32:40 +0200
In-Reply-To: <20200525143240.1498648-1-rbernon@codeweavers.com>
References: <20200525143240.1498648-1-rbernon@codeweavers.com>

When not using PDB, as Linux perf is only able to read debug info from
ELF files.

Signed-off-by: Rémi Bernon <rbernon@codeweavers.com>
---
 tools/winegcc/winegcc.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/tools/winegcc/winegcc.c b/tools/winegcc/winegcc.c
index b59d9c2c81b7..22e902073595 100644
--- a/tools/winegcc/winegcc.c
+++ b/tools/winegcc/winegcc.c
@@ -1412,9 +1412,13 @@ static void build(struct options* opts)
 
     if (opts->debug_file && !strendswith(opts->debug_file, ".pdb"))
     {
+        char const *bfd_format = (opts->target_cpu == CPU_x86_64) ? "-Oelf64-x86-64" :
+                                 (opts->target_cpu == CPU_x86) ? "-Oelf32-i386" :
+                                 NULL;
         strarray *tool, *objcopy = build_tool_name(opts, TOOL_OBJCOPY);
 
         tool = strarray_dup(objcopy);
+        if (bfd_format) strarray_add(tool, bfd_format);
         strarray_add(tool, "--only-keep-debug");
         strarray_add(tool, output_path);
         strarray_add(tool, opts->debug_file);

-- 
2.26.1

