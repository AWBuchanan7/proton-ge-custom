./wine-hotfixes/GUY/0013-winegstreamer-Add-video-mpeg-recognition.patch:8: dlls/winegstreamer/mfplat.c | 15 +++++++++++++++
./wine-hotfixes/GUY/0013-winegstreamer-Add-video-mpeg-recognition.patch:11:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0013-winegstreamer-Add-video-mpeg-recognition.patch:13:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0013-winegstreamer-Add-video-mpeg-recognition.patch:14:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0013-winegstreamer-Add-video-mpeg-recognition.patch:15:@@ -645,6 +645,21 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/GUY/0013-winegstreamer-Add-video-mpeg-recognition.patch:26:+                    case 1: IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_MPG1); break;
./wine-hotfixes/GUY/0013-winegstreamer-Add-video-mpeg-recognition.patch:27:+                    case 2: IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_MPEG2); break;
./wine-hotfixes/GUY/0013-winegstreamer-Add-video-mpeg-recognition.patch:28:+                    case 4: IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_M4S2); break;
./wine-hotfixes/GUY/0013-winegstreamer-Add-video-mpeg-recognition.patch:32:+            IMFMediaType_SetUINT32(media_type, &MF_MT_COMPRESSED, TRUE);
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:5:Subject: [PATCH 01/40] mf/tests: Sink objects are stream sinks, not media
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:13: dlls/mf/tests/mf.c | 7 +++++--
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:16:diff --git a/dlls/mf/tests/mf.c b/dlls/mf/tests/mf.c
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:18:--- a/dlls/mf/tests/mf.c
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:19:+++ b/dlls/mf/tests/mf.c
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:21:     IMFPresentationDescriptor *pd;
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:22:     IMFSourceResolver *resolver;
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:23:     IMFActivate *sink_activate;
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:24:+    IMFStreamSink *stream_sink;
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:26:     IMFMediaType *media_type;
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:27:     IMFStreamDescriptor *sd;
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:29:     hr = IMFActivate_ActivateObject(sink_activate, &IID_IMFMediaSink, (void **)&sink);
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:32:-    hr = IMFTopologyNode_SetObject(sink_node, (IUnknown *)sink);
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:33:+    hr = IMFMediaSink_GetStreamSinkByIndex(sink, 0, &stream_sink);
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:36:+    hr = IMFTopologyNode_SetObject(sink_node, (IUnknown *)stream_sink);
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:39:     hr = IMFTopology_GetCount(topology, &count);
./wine-hotfixes/GUY/0001-mf-tests-Sink-objects-are-stream-sinks-not-media-sin.patch:43:     hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:5: IMFMediaStreams.
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:122:+    IMFMediaStream IMFMediaStream_iface;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:125:+    IMFMediaEventQueue *event_queue;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:126:+    IMFStreamDescriptor *descriptor;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:142:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:150:+static inline struct media_stream *impl_from_IMFMediaStream(IMFMediaStream *iface)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:152:+    return CONTAINING_RECORD(iface, struct media_stream, IMFMediaStream_iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:155: static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *iface)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:157:     return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:200:+        IMFStreamDescriptor *descriptor = source->streams[i]->descriptor;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:202:+        if (FAILED(IMFStreamDescriptor_GetStreamIdentifier(descriptor, &existing_stream_id)))
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:278:+static HRESULT WINAPI media_stream_QueryInterface(IMFMediaStream *iface, REFIID riid, void **out)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:280:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:284:+    if (IsEqualIID(riid, &IID_IMFMediaStream) ||
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:285:+        IsEqualIID(riid, &IID_IMFMediaEventGenerator) ||
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:288:+        *out = &stream->IMFMediaStream_iface;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:301:+static ULONG WINAPI media_stream_AddRef(IMFMediaStream *iface)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:303:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:311:+static ULONG WINAPI media_stream_Release(IMFMediaStream *iface)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:313:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:327:+            IMFStreamDescriptor_Release(stream->descriptor);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:329:+            IMFMediaEventQueue_Release(stream->event_queue);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:331:+            IMFMediaSource_Release(&stream->parent_source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:339:+static HRESULT WINAPI media_stream_GetEvent(IMFMediaStream *iface, DWORD flags, IMFMediaEvent **event)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:341:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:346:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:348:+    return IMFMediaEventQueue_GetEvent(stream->event_queue, flags, event);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:351:+static HRESULT WINAPI media_stream_BeginGetEvent(IMFMediaStream *iface, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:353:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:358:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:360:+    return IMFMediaEventQueue_BeginGetEvent(stream->event_queue, callback, state);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:363:+static HRESULT WINAPI media_stream_EndGetEvent(IMFMediaStream *iface, IMFAsyncResult *result, IMFMediaEvent **event)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:365:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:370:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:372:+    return IMFMediaEventQueue_EndGetEvent(stream->event_queue, result, event);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:375:+static HRESULT WINAPI media_stream_QueueEvent(IMFMediaStream *iface, MediaEventType event_type, REFGUID ext_type,
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:378:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:383:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:385:+    return IMFMediaEventQueue_QueueEventParamVar(stream->event_queue, event_type, ext_type, hr, value);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:388:+static HRESULT WINAPI media_stream_GetMediaSource(IMFMediaStream *iface, IMFMediaSource **source)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:390:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:395:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:400:+static HRESULT WINAPI media_stream_GetStreamDescriptor(IMFMediaStream* iface, IMFStreamDescriptor **descriptor)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:402:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:407:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:412:+static HRESULT WINAPI media_stream_RequestSample(IMFMediaStream *iface, IUnknown *token)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:414:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:419:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:424:+static const IMFMediaStreamVtbl media_stream_vtbl =
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:445:+    object->IMFMediaStream_iface.lpVtbl = &media_stream_vtbl;
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:448:+    IMFMediaSource_AddRef(&source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:454:+    if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:484:+    IMFMediaStream_Release(&object->IMFMediaStream_iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:488: static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:490:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:493:         IMFByteStream_Release(source->byte_stream);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:498:+        IMFMediaStream_Release(&source->streams[i]->IMFMediaStream_iface);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:510:@@ -464,6 +824,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:513:     IMFByteStream_AddRef(bytestream);
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:516:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:518:@@ -509,6 +870,10 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0008-winegstreamer-Use-the-demuxer-to-establish-IMFMediaS.patch:529:@@ -518,6 +883,21 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0028-mfreadwrite-Select-all-streams-when-creating-a-sourc.patch:4:Subject: [PATCH 28/40] mfreadwrite: Select all streams when creating a source
./wine-hotfixes/GUY/0028-mfreadwrite-Select-all-streams-when-creating-a-sourc.patch:8: dlls/mfreadwrite/reader.c | 4 ++++
./wine-hotfixes/GUY/0028-mfreadwrite-Select-all-streams-when-creating-a-sourc.patch:11:diff --git a/dlls/mfreadwrite/reader.c b/dlls/mfreadwrite/reader.c
./wine-hotfixes/GUY/0028-mfreadwrite-Select-all-streams-when-creating-a-sourc.patch:13:--- a/dlls/mfreadwrite/reader.c
./wine-hotfixes/GUY/0028-mfreadwrite-Select-all-streams-when-creating-a-sourc.patch:14:+++ b/dlls/mfreadwrite/reader.c
./wine-hotfixes/GUY/0028-mfreadwrite-Select-all-streams-when-creating-a-sourc.patch:15:@@ -2094,6 +2094,10 @@ static HRESULT create_source_reader_from_source(IMFMediaSource *source, IMFAttri
./wine-hotfixes/GUY/0028-mfreadwrite-Select-all-streams-when-creating-a-sourc.patch:20:+        hr = IMFPresentationDescriptor_SelectStream(object->descriptor, i);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:4:Subject: [PATCH 05/40] winegstreamer: Implement IMFMediaSource::Shutdown.
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:8: dlls/mfplat/tests/mfplat.c        |  2 +-
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:12:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:14:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:15:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:17:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:18:     IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:21:     hr = IMFMediaSource_Shutdown(mediasource);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:24:     hr = IMFMediaSource_CreatePresentationDescriptor(mediasource, NULL);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:25:     ok(hr == MF_E_SHUTDOWN, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:28:     IMFMediaSource_Release(mediasource);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:29:     IMFByteStream_Release(stream);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:36:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:38:     IMFMediaEventQueue *event_queue;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:49: static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *iface)
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:50:@@ -81,6 +89,9 @@ static HRESULT WINAPI media_source_GetEvent(IMFMediaSource *iface, DWORD flags,
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:55:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:57:     return IMFMediaEventQueue_GetEvent(source->event_queue, flags, event);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:60:@@ -90,6 +101,9 @@ static HRESULT WINAPI media_source_BeginGetEvent(IMFMediaSource *iface, IMFAsync
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:65:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:67:     return IMFMediaEventQueue_BeginGetEvent(source->event_queue, callback, state);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:70:@@ -99,6 +113,9 @@ static HRESULT WINAPI media_source_EndGetEvent(IMFMediaSource *iface, IMFAsyncRe
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:75:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:77:     return IMFMediaEventQueue_EndGetEvent(source->event_queue, result, event);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:80:@@ -109,6 +126,9 @@ static HRESULT WINAPI media_source_QueueEvent(IMFMediaSource *iface, MediaEventT
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:85:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:87:     return IMFMediaEventQueue_QueueEventParamVar(source->event_queue, event_type, ext_type, hr, value);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:90:@@ -118,6 +138,9 @@ static HRESULT WINAPI media_source_GetCharacteristics(IMFMediaSource *iface, DWO
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:95:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:100:@@ -127,6 +150,9 @@ static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:105:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:110:@@ -137,6 +163,9 @@ static HRESULT WINAPI media_source_Start(IMFMediaSource *iface, IMFPresentationD
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:115:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:120:@@ -146,6 +175,9 @@ static HRESULT WINAPI media_source_Stop(IMFMediaSource *iface)
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:125:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:130:@@ -170,9 +202,10 @@ static HRESULT WINAPI media_source_Shutdown(IMFMediaSource *iface)
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:132:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:142: static const IMFMediaSourceVtbl IMFMediaSource_vtbl =
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:143:@@ -203,6 +236,8 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:144:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/GUY/0005-winegstreamer-Implement-IMFMediaSource-Shutdown.patch:149:     object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:4:Subject: [PATCH 15/40] winegstreamer: Implement IMFMediaSource::Start.
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:8: dlls/mfplat/tests/mfplat.c        |   8 +-
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:12:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:14:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:15:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:19:     hr = IMFMediaSource_Start(mediasource, descriptor, &GUID_NULL, &var);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:25:     get_event((IMFMediaEventGenerator *)mediasource, MENewStream, &var);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:28:         hr = IMFMediaStream_RequestSample(video_stream, NULL);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:43:     hr = IMFMediaStream_RequestSample(video_stream, NULL);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:44:     ok(hr == MF_E_END_OF_STREAM, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:45:-    IMFMediaStream_Release(video_stream);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:47:     get_event((IMFMediaEventGenerator *)mediasource, MEEndOfPresentation, NULL);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:50:+    IMFMediaStream_Release(video_stream);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:51:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:52:     IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:79:+            IMFPresentationDescriptor *descriptor;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:88:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:89:+    IMFAsyncCallback async_commands_callback;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:93:     IMFMediaEventQueue *event_queue;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:94:     IMFByteStream *byte_stream;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:95:@@ -87,6 +111,236 @@ static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *ifac
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:96:     return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:99:+static inline struct media_source *impl_from_async_commands_callback_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:166:+static HRESULT WINAPI callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:170:+    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:174:+        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:183:+static HRESULT WINAPI callback_GetParameters(IMFAsyncCallback *iface,
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:189:+static ULONG WINAPI source_async_commands_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:191:+    struct media_source *source = impl_from_async_commands_callback_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:192:+    return IMFMediaSource_AddRef(&source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:195:+static ULONG WINAPI source_async_commands_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:197:+    struct media_source *source = impl_from_async_commands_callback_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:198:+    return IMFMediaSource_Release(&source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:201:+static IMFStreamDescriptor *stream_descriptor_from_id(IMFPresentationDescriptor *pres_desc, DWORD id, BOOL *selected)
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:204:+    IMFStreamDescriptor *ret;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:206:+    if (FAILED(IMFPresentationDescriptor_GetStreamDescriptorCount(pres_desc, &sd_count)))
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:213:+        if (FAILED(IMFPresentationDescriptor_GetStreamDescriptorByIndex(pres_desc, i, selected, &ret)))
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:216:+        if (SUCCEEDED(IMFStreamDescriptor_GetStreamIdentifier(ret, &stream_id)) && stream_id == id)
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:219:+        IMFStreamDescriptor_Release(ret);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:240:+        IMFStreamDescriptor *sd;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:247:+        IMFStreamDescriptor_GetStreamIdentifier(stream->descriptor, &stream_id);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:250:+        IMFStreamDescriptor_Release(sd);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:271:+            IMFMediaEventQueue_QueueEventParamUnk(source->event_queue,
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:273:+            S_OK, (IUnknown*) &stream->IMFMediaStream_iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:275:+            IMFMediaEventQueue_QueueEventParamVar(stream->event_queue,
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:280:+    IMFMediaEventQueue_QueueEventParamVar(source->event_queue,
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:292:+static HRESULT WINAPI source_async_commands_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:294:+    struct media_source *source = impl_from_async_commands_callback_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:302:+    if (FAILED(hr = IMFAsyncResult_GetState(result, &state)))
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:320:+static const IMFAsyncCallbackVtbl source_async_commands_callback_vtbl =
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:332:@@ -759,16 +1013,32 @@ static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:335: static HRESULT WINAPI media_source_Start(IMFMediaSource *iface, IMFPresentationDescriptor *descriptor,
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:339:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:347:         return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:352:+        return MF_E_UNSUPPORTED_TIME_FORMAT;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:361:+        hr = MFPutWorkItem(source->async_commands_queue, &source->async_commands_callback, &command->IUnknown_iface);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:367: static HRESULT WINAPI media_source_Stop(IMFMediaSource *iface)
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:373:+        MFUnlockWorkQueue(source->async_commands_queue);
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:378:@@ -874,6 +1147,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:381:     object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:386:@@ -883,6 +1157,9 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:387:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/GUY/0015-winegstreamer-Implement-IMFMediaSource-Start.patch:390:+    if (FAILED(hr = MFAllocateWorkQueue(&object->async_commands_queue)))
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:7: dlls/winegstreamer/mf_decode.c | 6 +++++-
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:10:diff --git a/dlls/winegstreamer/mf_decode.c b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:12:--- a/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:13:+++ b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:14:@@ -78,6 +78,7 @@ struct mf_decoder
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:21: static struct mf_decoder *impl_mf_decoder_from_IMFTransform(IMFTransform *iface)
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:22:@@ -974,7 +975,7 @@ static HRESULT WINAPI mf_decoder_ProcessMessage(IMFTransform *iface, MFT_MESSAGE
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:23:             IMFAttributes_SetUINT32(async_param, &WINE_MFT_MESSAGE_TYPE, message);
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:26:-            MFPutWorkItem(MF_MULTITHREADED_WORKQUEUE, &This->process_message_callback, (IUnknown *)async_param);
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:27:+            MFPutWorkItem(This->message_queue, &This->process_message_callback, (IUnknown *)async_param);
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:31:@@ -1201,6 +1202,8 @@ static void mf_decoder_destroy(struct mf_decoder *This)
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:35:+    MFUnlockWorkQueue(This->message_queue);
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:43:     This->video = decoder_descs[type].major_type == &MFMediaType_Video;
./wine-hotfixes/GUY/0040-Use-dedicated-queue-for-drain-message.patch:44:+    MFAllocateWorkQueue(&This->message_queue);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:8: dlls/mfplat/tests/mfplat.c                   |   9 +-
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:12: dlls/winegstreamer/mfplat.c                  |   9 +
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:15: include/mfidl.idl                            |   1 +
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:19:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:21:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:22:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:24:     ok(obj_type == MF_OBJECT_MEDIASOURCE, "got %d\n", obj_type);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:26:     hr = IMFMediaSource_CreatePresentationDescriptor(mediasource, &descriptor);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:33:     hr = IMFPresentationDescriptor_GetStreamDescriptorByIndex(descriptor, 0, &selected, &sd);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:35:     IMFStreamDescriptor_Release(sd);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:37:     hr = IMFMediaTypeHandler_GetMajorType(handler, &guid);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:44:     ok(IsEqualGUID(&guid, &MFMediaType_Video), "Unexpected major type %s.\n", debugstr_guid(&guid));
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:46:     get_event((IMFMediaEventGenerator *)mediasource, MEEndOfPresentation, NULL);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:48:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:49:+    IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:51:     hr = IMFMediaSource_Shutdown(mediasource);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:54:     ok(hr == MF_E_SHUTDOWN, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:58:-    IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:59:     IMFMediaSource_Release(mediasource);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:60:     IMFByteStream_Release(stream);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:72: 	mfplat.c \
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:80: extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj) DECLSPEC_HIDDEN;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:102:+#include "mfapi.h"
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:103:+#include "mferror.h"
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:104:+#include "mfidl.h"
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:110:+WINE_DEFAULT_DEBUG_CHANNEL(mfplat);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:114:+    IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:116:+    IMFMediaEventQueue *event_queue;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:119:+static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:121:+    return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:124:+static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:126:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:130:+    if (IsEqualIID(riid, &IID_IMFMediaSource) ||
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:131:+        IsEqualIID(riid, &IID_IMFMediaEventGenerator) ||
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:134:+        *out = &source->IMFMediaSource_iface;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:147:+static ULONG WINAPI media_source_AddRef(IMFMediaSource *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:149:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:157:+static ULONG WINAPI media_source_Release(IMFMediaSource *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:159:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:172:+static HRESULT WINAPI media_source_GetEvent(IMFMediaSource *iface, DWORD flags, IMFMediaEvent **event)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:174:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:178:+    return IMFMediaEventQueue_GetEvent(source->event_queue, flags, event);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:181:+static HRESULT WINAPI media_source_BeginGetEvent(IMFMediaSource *iface, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:183:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:187:+    return IMFMediaEventQueue_BeginGetEvent(source->event_queue, callback, state);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:190:+static HRESULT WINAPI media_source_EndGetEvent(IMFMediaSource *iface, IMFAsyncResult *result, IMFMediaEvent **event)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:192:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:196:+    return IMFMediaEventQueue_EndGetEvent(source->event_queue, result, event);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:199:+static HRESULT WINAPI media_source_QueueEvent(IMFMediaSource *iface, MediaEventType event_type, REFGUID ext_type,
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:202:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:206:+    return IMFMediaEventQueue_QueueEventParamVar(source->event_queue, event_type, ext_type, hr, value);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:209:+static HRESULT WINAPI media_source_GetCharacteristics(IMFMediaSource *iface, DWORD *characteristics)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:211:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:218:+static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *iface, IMFPresentationDescriptor **descriptor)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:220:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:227:+static HRESULT WINAPI media_source_Start(IMFMediaSource *iface, IMFPresentationDescriptor *descriptor,
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:230:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:237:+static HRESULT WINAPI media_source_Stop(IMFMediaSource *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:239:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:246:+static HRESULT WINAPI media_source_Pause(IMFMediaSource *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:248:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:258:+        IMFMediaEventQueue_Release(source->event_queue);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:263:+static HRESULT WINAPI media_source_Shutdown(IMFMediaSource *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:265:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:272:+static const IMFMediaSourceVtbl IMFMediaSource_vtbl =
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:289:+static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_type type, struct media_source **out_media_source)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:297:+    if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:300:+    object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:307:+    WARN("Failed to construct MFMediaSource, hr %#x.\n", hr);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:314:+/* IMFByteStreamHandler */
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:319:+    IMFAsyncResult *result;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:320:+    MF_OBJECT_TYPE obj_type;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:326:+    IMFByteStreamHandler IMFByteStreamHandler_iface;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:327:+    IMFAsyncCallback IMFAsyncCallback_iface;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:334:+static struct container_stream_handler *impl_from_IMFByteStreamHandler(IMFByteStreamHandler *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:336:+    return CONTAINING_RECORD(iface, struct container_stream_handler, IMFByteStreamHandler_iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:339:+static struct container_stream_handler *impl_from_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:341:+    return CONTAINING_RECORD(iface, struct container_stream_handler, IMFAsyncCallback_iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:344:+static HRESULT WINAPI container_stream_handler_QueryInterface(IMFByteStreamHandler *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:348:+    if (IsEqualIID(riid, &IID_IMFByteStreamHandler) ||
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:352:+        IMFByteStreamHandler_AddRef(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:361:+static ULONG WINAPI container_stream_handler_AddRef(IMFByteStreamHandler *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:363:+    struct container_stream_handler *handler = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:371:+static ULONG WINAPI container_stream_handler_Release(IMFByteStreamHandler *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:373:+    struct container_stream_handler *handler = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:384:+            IMFAsyncResult_Release(result->result);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:402:+    IMFByteStream *stream;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:450:+            IMFByteStream_Release(context->stream);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:483:+static HRESULT WINAPI container_stream_handler_BeginCreateObject(IMFByteStreamHandler *iface, IMFByteStream *stream, const WCHAR *url, DWORD flags,
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:484:+        IPropertyStore *props, IUnknown **cancel_cookie, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:486:+    struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:488:+    IMFAsyncResult *caller, *item;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:496:+    if (FAILED(hr = MFCreateAsyncResult(NULL, callback, state, &caller)))
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:502:+        IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:514:+        IMFByteStream_AddRef(context->stream);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:519:+        IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:524:+    hr = MFCreateAsyncResult(&context->IUnknown_iface, &this->IMFAsyncCallback_iface, (IUnknown *)caller, &item);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:528:+        if (SUCCEEDED(hr = MFPutWorkItemEx(MFASYNC_CALLBACK_QUEUE_IO, item)))
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:537:+        IMFAsyncResult_Release(item);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:539:+    IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:544:+static HRESULT WINAPI container_stream_handler_EndCreateObject(IMFByteStreamHandler *iface, IMFAsyncResult *result,
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:545:+        MF_OBJECT_TYPE *obj_type, IUnknown **object)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:547:+    struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:571:+        hr = IMFAsyncResult_GetStatus(found->result);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:572:+        IMFAsyncResult_Release(found->result);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:577:+        *obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:579:+        hr = MF_E_UNEXPECTED;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:585:+static HRESULT WINAPI container_stream_handler_CancelObjectCreation(IMFByteStreamHandler *iface, IUnknown *cancel_cookie)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:587:+    struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:608:+        IMFAsyncResult_Release(found->result);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:614:+    return found ? S_OK : MF_E_UNEXPECTED;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:617:+static HRESULT WINAPI container_stream_handler_GetMaxNumberOfBytesRequiredForResolution(IMFByteStreamHandler *iface, QWORD *bytes)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:623:+static const IMFByteStreamHandlerVtbl container_stream_handler_vtbl =
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:634:+static HRESULT WINAPI container_stream_handler_callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:636:+    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:640:+        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:649:+static ULONG WINAPI container_stream_handler_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:651:+    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:652:+    return IMFByteStreamHandler_AddRef(&handler->IMFByteStreamHandler_iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:655:+static ULONG WINAPI container_stream_handler_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:657:+    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:658:+    return IMFByteStreamHandler_Release(&handler->IMFByteStreamHandler_iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:661:+static HRESULT WINAPI container_stream_handler_callback_GetParameters(IMFAsyncCallback *iface, DWORD *flags, DWORD *queue)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:666:+static HRESULT container_stream_handler_create_object(struct container_stream_handler *This, WCHAR *url, IMFByteStream *stream, DWORD flags,
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:667:+                                            IPropertyStore *props, IUnknown **out_object, MF_OBJECT_TYPE *out_obj_type)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:671:+    if (flags & MF_RESOLUTION_MEDIASOURCE)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:681:+        *out_object = (IUnknown*)&new_source->IMFMediaSource_iface;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:682:+        *out_obj_type = MF_OBJECT_MEDIASOURCE;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:693:+static HRESULT WINAPI container_stream_handler_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:695:+    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:697:+    MF_OBJECT_TYPE obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:700:+    IMFAsyncResult *caller;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:703:+    caller = (IMFAsyncResult *)IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:705:+    if (FAILED(hr = IMFAsyncResult_GetObject(result, &context_object)))
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:719:+        IMFAsyncResult_AddRef(handler_result->result);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:736:+    IMFAsyncResult_SetStatus(caller, hr);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:737:+    MFInvokeCallback(caller);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:742:+static const IMFAsyncCallbackVtbl container_stream_handler_callback_vtbl =
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:766:+    this->IMFByteStreamHandler_iface.lpVtbl = &container_stream_handler_vtbl;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:767:+    this->IMFAsyncCallback_iface.lpVtbl = &container_stream_handler_callback_vtbl;
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:770:+    hr = IMFByteStreamHandler_QueryInterface(&this->IMFByteStreamHandler_iface, riid, obj);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:771:+    IMFByteStreamHandler_Release(&this->IMFByteStreamHandler_iface);
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:776:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:778:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:779:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:795:     { &CLSID_VideoProcessorMFT, &video_processor_create },
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:799: HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:800:@@ -414,6 +420,9 @@ HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:858: coclass VideoProcessorMFT {}
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:866:diff --git a/include/mfidl.idl b/include/mfidl.idl
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:868:--- a/include/mfidl.idl
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:869:+++ b/include/mfidl.idl
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:870:@@ -1128,3 +1128,4 @@ cpp_quote("EXTERN_GUID(MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ROLE, 0x6ba644ff, 0x
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:871: cpp_quote("EXTERN_GUID(MF_AUDIO_RENDERER_ATTRIBUTE_STREAM_CATEGORY, 0xa9770471, 0x92ec, 0x4df4, 0x94, 0xfe, 0x81, 0xc3, 0x6f, 0x0c, 0x3a, 0x7a);")
./wine-hotfixes/GUY/0004-Implement-stub-bytestream-handler-and-source.patch:873: cpp_quote("EXTERN_GUID(CLSID_VideoProcessorMFT, 0x88753b26, 0x5b24, 0x49bd, 0xb2, 0xe7, 0xc, 0x44, 0x5c, 0x78, 0xc9, 0x82);")
./wine-hotfixes/GUY/0036-Set-BPS-on-AAC.patch:7: dlls/winegstreamer/mfplat.c | 1 +
./wine-hotfixes/GUY/0036-Set-BPS-on-AAC.patch:10:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0036-Set-BPS-on-AAC.patch:12:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0036-Set-BPS-on-AAC.patch:13:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0036-Set-BPS-on-AAC.patch:14:@@ -965,6 +965,7 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/GUY/0036-Set-BPS-on-AAC.patch:17:                     IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_AAC);
./wine-hotfixes/GUY/0036-Set-BPS-on-AAC.patch:18:+                    IMFMediaType_SetUINT32(media_type, &MF_MT_AUDIO_BITS_PER_SAMPLE, 16);
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:26:@@ -794,12 +793,99 @@ static const IMFMediaStreamVtbl media_stream_vtbl =
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:32:+static HRESULT media_stream_align_with_mf(struct media_stream *stream, IMFMediaType **stream_type)
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:41:+    if (!(target_caps = make_mf_compatible_caps(source_caps)))
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:44:+    if (TRACE_ON(mfplat))
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:105:+    *stream_type = mf_media_type_from_caps(target_caps);
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:121:     IMFMediaTypeHandler *type_handler = NULL;
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:122:     IMFMediaType *stream_type = NULL;
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:132:+    if (FAILED(hr = media_stream_align_with_mf(object, &stream_type)))
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:135:-    if (TRACE_ON(mfplat))
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:142:-    if (!(stream_type = mf_media_type_from_caps(caps)))
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:148:     if (FAILED(hr = MFCreateStreamDescriptor(stream_id, 1, &stream_type, &object->descriptor)))
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:152:     IMFMediaType_Release(stream_type);
./wine-hotfixes/GUY/0016-winegstreamer-Insert-parser-into-pipeline-to-rectify.patch:175:         IMFMediaType_Release(stream_type);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:7: dlls/mfplat/main.c                |   5 +-
./wine-hotfixes/GUY/0029-Miscellaneous.patch:8: dlls/mfreadwrite/reader.c         |  12 +++-
./wine-hotfixes/GUY/0029-Miscellaneous.patch:13:diff --git a/dlls/mfplat/main.c b/dlls/mfplat/main.c
./wine-hotfixes/GUY/0029-Miscellaneous.patch:15:--- a/dlls/mfplat/main.c
./wine-hotfixes/GUY/0029-Miscellaneous.patch:16:+++ b/dlls/mfplat/main.c
./wine-hotfixes/GUY/0029-Miscellaneous.patch:34:@@ -8882,4 +8879,4 @@ HRESULT WINAPI MFCreateDXGIDeviceManager(UINT *token, IMFDXGIDeviceManager **man
./wine-hotfixes/GUY/0029-Miscellaneous.patch:35:     *manager = &object->IMFDXGIDeviceManager_iface;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:41:diff --git a/dlls/mfreadwrite/reader.c b/dlls/mfreadwrite/reader.c
./wine-hotfixes/GUY/0029-Miscellaneous.patch:43:--- a/dlls/mfreadwrite/reader.c
./wine-hotfixes/GUY/0029-Miscellaneous.patch:44:+++ b/dlls/mfreadwrite/reader.c
./wine-hotfixes/GUY/0029-Miscellaneous.patch:47:     MFT_REGISTER_TYPE_INFO in_type, out_type;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:48:     CLSID *clsids, mft_clsid, category;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:51:     IMFMediaType *input_type;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:60:+                if (SUCCEEDED(MFTEnum(category, 0, &in_type, NULL, NULL, &clsids, &count)) && count)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:63:+                    CoTaskMemFree(clsids);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:68:         IMFMediaType_Release(input_type);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:71:-    return MF_E_TOPO_CODEC_NOT_FOUND;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:72:+    return decoder_found ? MF_E_INVALIDREQUEST : MF_E_TOPO_CODEC_NOT_FOUND;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:75: static HRESULT WINAPI src_reader_SetCurrentMediaType(IMFSourceReader *iface, DWORD index, DWORD *reserved,
./wine-hotfixes/GUY/0029-Miscellaneous.patch:92:     else if (cbdata->type < MF_DECODE_MAX)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:93:         perform_cb_mf_decode(cbdata);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:110:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:111:+    IMFGetService IMFGetService_iface;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:112:+    IMFSeekInfo IMFSeekInfo_iface;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:113:     IMFAsyncCallback async_commands_callback;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:116:@@ -119,6 +121,16 @@ static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *ifac
./wine-hotfixes/GUY/0029-Miscellaneous.patch:117:     return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:120:+static inline struct media_source *impl_from_IMFGetService(IMFGetService *iface)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:122:+    return CONTAINING_RECORD(iface, struct media_source, IMFGetService_iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:125:+static inline struct media_source *impl_from_IMFSeekInfo(IMFSeekInfo *iface)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:127:+    return CONTAINING_RECORD(iface, struct media_source, IMFSeekInfo_iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:130: static inline struct media_source *impl_from_async_commands_callback_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:133:@@ -1083,6 +1095,10 @@ static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID
./wine-hotfixes/GUY/0029-Miscellaneous.patch:135:         *out = &source->IMFMediaSource_iface;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:137:+    else if(IsEqualIID(riid, &IID_IMFGetService))
./wine-hotfixes/GUY/0029-Miscellaneous.patch:139:+        *out = &source->IMFGetService_iface;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:144:@@ -1177,7 +1193,7 @@ static HRESULT WINAPI media_source_GetCharacteristics(IMFMediaSource *iface, DWO
./wine-hotfixes/GUY/0029-Miscellaneous.patch:146:         return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:148:-    *characteristics = MFMEDIASOURCE_CAN_SEEK;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:149:+    *characteristics = MFMEDIASOURCE_CAN_SEEK | MFMEDIASOURCE_CAN_PAUSE;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:153:@@ -1317,6 +1333,99 @@ static const IMFMediaSourceVtbl IMFMediaSource_vtbl =
./wine-hotfixes/GUY/0029-Miscellaneous.patch:157:+static HRESULT WINAPI source_get_service_QueryInterface(IMFGetService *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:159:+    struct media_source *source = impl_from_IMFGetService(iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:160:+    return IMFMediaSource_QueryInterface(&source->IMFMediaSource_iface, riid, obj);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:163:+static ULONG WINAPI source_get_service_AddRef(IMFGetService *iface)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:165:+    struct media_source *source = impl_from_IMFGetService(iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:166:+    return IMFMediaSource_AddRef(&source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:169:+static ULONG WINAPI source_get_service_Release(IMFGetService *iface)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:171:+    struct media_source *source = impl_from_IMFGetService(iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:172:+    return IMFMediaSource_Release(&source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:175:+static HRESULT WINAPI source_get_service_GetService(IMFGetService *iface, REFGUID service, REFIID riid, void **obj)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:177:+    struct media_source *source = impl_from_IMFGetService(iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:182:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:186:+    if (IsEqualIID(service, &MF_SCRUBBING_SERVICE))
./wine-hotfixes/GUY/0029-Miscellaneous.patch:188:+        if (IsEqualIID(riid, &IID_IMFSeekInfo))
./wine-hotfixes/GUY/0029-Miscellaneous.patch:190:+            *obj = &source->IMFSeekInfo_iface;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:200:+static const IMFGetServiceVtbl IMFGetService_vtbl =
./wine-hotfixes/GUY/0029-Miscellaneous.patch:208:+static HRESULT WINAPI source_seek_info_QueryInterface(IMFSeekInfo *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:210:+    struct media_source *source = impl_from_IMFSeekInfo(iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:211:+    return IMFMediaSource_QueryInterface(&source->IMFMediaSource_iface, riid, obj);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:214:+static ULONG WINAPI source_seek_info_AddRef(IMFSeekInfo *iface)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:216:+    struct media_source *source = impl_from_IMFSeekInfo(iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:217:+    return IMFMediaSource_AddRef(&source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:220:+static ULONG WINAPI source_seek_info_Release(IMFSeekInfo *iface)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:222:+    struct media_source *source = impl_from_IMFSeekInfo(iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:223:+    return IMFMediaSource_Release(&source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:226:+static HRESULT WINAPI source_seek_info_GetNearestKeyFrames(IMFSeekInfo *iface, const GUID *format,
./wine-hotfixes/GUY/0029-Miscellaneous.patch:229:+    struct media_source *source = impl_from_IMFSeekInfo(iface);
./wine-hotfixes/GUY/0029-Miscellaneous.patch:234:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:242:+static const IMFSeekInfoVtbl IMFSeekInfo_vtbl =
./wine-hotfixes/GUY/0029-Miscellaneous.patch:250: static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_type type, struct media_source **out_media_source)
./wine-hotfixes/GUY/0029-Miscellaneous.patch:253:@@ -1336,6 +1445,8 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0029-Miscellaneous.patch:256:     object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:257:+    object->IMFGetService_iface.lpVtbl = &IMFGetService_vtbl;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:258:+    object->IMFSeekInfo_iface.lpVtbl = &IMFSeekInfo_vtbl;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:262:@@ -1435,7 +1546,6 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0029-Miscellaneous.patch:268:         IMFAttributes *byte_stream_attributes;
./wine-hotfixes/GUY/0029-Miscellaneous.patch:270:@@ -1452,6 +1562,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0029-Miscellaneous.patch:271:             IMFAttributes_Release(byte_stream_attributes);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:4:Subject: [PATCH 26/40] Introduce IMFSample -> GstBuffer converter.
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:9: dlls/winegstreamer/mfplat.c      | 74 ++++++++++++++++++++++++++++++++
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:16:@@ -59,6 +59,7 @@ GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:17: IMFMediaType *mf_media_type_from_caps(GstCaps *caps);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:18: GstCaps *caps_from_mf_media_type(IMFMediaType *type);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:19: IMFSample *mf_sample_from_gst_buffer(GstBuffer *in);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:20:+GstBuffer *gst_buffer_from_mf_sample(IMFSample *in);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:24:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:26:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:27:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:28:@@ -1235,4 +1235,78 @@ IMFSample* mf_sample_from_gst_buffer(GstBuffer *gst_buffer)
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:29:     ERR("Failed to copy IMFSample to GstBuffer, hr = %#x\n", hr);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:30:     IMFSample_Release(out);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:34:+GstBuffer* gst_buffer_from_mf_sample(IMFSample *mf_sample)
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:37:+    IMFMediaBuffer *mf_buffer = NULL;
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:42:+    if (FAILED(hr = IMFSample_GetSampleDuration(mf_sample, &duration)))
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:45:+    if (FAILED(hr = IMFSample_GetSampleTime(mf_sample, &time)))
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:51:+    if (FAILED(hr = IMFSample_GetBufferCount(mf_sample, &buffer_count)))
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:61:+        if (FAILED(hr = IMFSample_GetBufferByIndex(mf_sample, i, &mf_buffer)))
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:64:+        if (FAILED(hr = IMFMediaBuffer_GetMaxLength(mf_buffer, &buffer_max_size)))
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:67:+        if (FAILED(hr = IMFMediaBuffer_GetCurrentLength(mf_buffer, &buffer_size)))
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:79:+        if (FAILED(hr = IMFMediaBuffer_Lock(mf_buffer, &buf_data, NULL, NULL)))
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:84:+        if (FAILED(hr = IMFMediaBuffer_Unlock(mf_buffer)))
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:87:+        if (FAILED(hr = IMFMediaBuffer_SetCurrentLength(mf_buffer, buffer_size)))
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:94:+        IMFMediaBuffer_Release(mf_buffer);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:95:+        mf_buffer = NULL;
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:101:+    ERR("Failed to copy IMFSample to GstBuffer, hr = %#x\n", hr);
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:102:+    if (mf_buffer)
./wine-hotfixes/GUY/0026-Introduce-IMFSample-GstBuffer-converter.patch:103:+        IMFMediaBuffer_Release(mf_buffer);
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:8: dlls/winegstreamer/mfplat.c | 67 +++++++++++++++++++++++++++++++++++++
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:11:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:13:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:14:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:17: #include "mfapi.h"
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:18: #include "mfidl.h"
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:23:@@ -525,6 +526,72 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:31:+            IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_H264);
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:32:+            IMFMediaType_SetUINT32(media_type, &MF_MT_COMPRESSED, TRUE);
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:37:+                    IMFMediaType_SetUINT32(media_type, &MF_MT_MPEG2_PROFILE, eAVEncH264VProfile_Main);
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:39:+                    IMFMediaType_SetUINT32(media_type, &MF_MT_MPEG2_PROFILE, eAVEncH264VProfile_High);
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:41:+                    IMFMediaType_SetUINT32(media_type, &MF_MT_MPEG2_PROFILE, eAVEncH264VProfile_444);
./wine-hotfixes/GUY/0010-winegstreamer-Translate-H.264-caps-to-attributes.patch:76:+                        IMFMediaType_SetUINT32(media_type, &MF_MT_MPEG2_LEVEL, levels[i].val);
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:65:     IMFMediaEventQueue *event_queue;
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:66:     IMFByteStream *byte_stream;
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:112: static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:114:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:127:         IMFMediaEventQueue_Release(source->event_queue);
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:129:@@ -408,7 +451,10 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:140:@@ -422,6 +468,11 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:141:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:149:     object->my_src = gst_pad_new_from_static_template(&src_template, "mf-src");
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:152:@@ -429,6 +480,44 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:197:@@ -437,6 +526,8 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0007-winegstreamer-Find-an-appropriate-demuxer-for-the-so.patch:199:     WARN("Failed to construct MFMediaSource, hr %#x.\n", hr);
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:4:Subject: [PATCH 31/40] mf: Ask for more samples from upstream node when upon
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:5: MF_E_TRANSFORM_NEED_MORE_INPUT
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:8: dlls/mf/session.c | 11 ++++++++++-
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:11:diff --git a/dlls/mf/session.c b/dlls/mf/session.c
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:13:--- a/dlls/mf/session.c
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:14:+++ b/dlls/mf/session.c
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:19:+static HRESULT session_request_sample_from_node(struct media_session *session, IMFTopologyNode *node, DWORD output);
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:21: static void session_deliver_sample_to_node(struct media_session *session, IMFTopologyNode *node, unsigned int input,
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:22:         IMFSample *sample)
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:24:@@ -2509,7 +2511,14 @@ static void session_deliver_sample_to_node(struct media_session *session, IMFTop
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:29:+            if (transform_node_pull_samples(topo_node) == MF_E_TRANSFORM_NEED_MORE_INPUT)
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:31:+                IMFTopologyNode *upstream_node;
./wine-hotfixes/GUY/0031-mf-Ask-for-more-samples-from-upstream-node-when-upon.patch:34:+                if (SUCCEEDED(IMFTopologyNode_GetInput(node, input, &upstream_node, &upstream_output)))
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:139: #include "mfapi.h"
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:140: #include "mferror.h"
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:141: #include "mfidl.h"
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:142:+#include "mfobjects.h"
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:148: WINE_DEFAULT_DEBUG_CHANNEL(mfplat);
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:162:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:165:     IMFMediaEventQueue *event_queue;
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:166:+    IMFByteStream *byte_stream;
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:171:@@ -35,6 +54,154 @@ static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *ifac
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:172:     return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:179:+    IMFByteStream *byte_stream = source->byte_stream;
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:189:+        if (FAILED(IMFByteStream_SetCurrentPosition(byte_stream, ofs)))
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:193:+    if (FAILED(IMFByteStream_IsEndOfStream(byte_stream, &is_eof)))
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:201:+    hr = IMFByteStream_Read(byte_stream, info.data, len, &bytes_read);
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:222:+    if (FAILED(IMFByteStream_GetLength(source->byte_stream, &bytestream_len)))
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:237:+                IMFByteStream_GetLength(source->byte_stream, &length);
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:323: static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:325:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:326:@@ -187,13 +354,20 @@ static HRESULT WINAPI media_source_Pause(IMFMediaSource *iface)
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:331:+        return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:341:         IMFMediaEventQueue_Release(source->event_queue);
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:343:+        IMFByteStream_Release(source->byte_stream);
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:347:@@ -227,19 +401,35 @@ static const IMFMediaSourceVtbl IMFMediaSource_vtbl =
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:349: static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_type type, struct media_source **out_media_source)
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:352:+        "mf_src",
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:363:+    object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:367:+    IMFByteStream_AddRef(bytestream);
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:369:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:373:+    object->my_src = gst_pad_new_from_static_template(&src_template, "mf-src");
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:380:-    object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:386:@@ -249,6 +439,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0006-winegstreamer-Add-a-GstPad-wrapping-the-media-source.patch:395:     IMFByteStreamHandler_Release(&this->IMFByteStreamHandler_iface);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:5: IMFMediaSource::CreatePresentationDescriptor.
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:9: dlls/mfplat/tests/mfplat.c        |  8 +++----
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:13:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:15:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:16:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:18:     ok(obj_type == MF_OBJECT_MEDIASOURCE, "got %d\n", obj_type);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:20:     hr = IMFMediaSource_CreatePresentationDescriptor(mediasource, &descriptor);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:27:     hr = IMFPresentationDescriptor_GetStreamDescriptorByIndex(descriptor, 0, &selected, &sd);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:31:     hr = IMFMediaSource_Start(mediasource, descriptor, &GUID_NULL, &var);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:37:     get_event((IMFMediaEventGenerator *)mediasource, MENewStream, &var);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:41:     get_event((IMFMediaEventGenerator *)mediasource, MEEndOfPresentation, NULL);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:44:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:45:     IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:48:     hr = IMFMediaSource_Shutdown(mediasource);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:56:     IMFByteStream *byte_stream;
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:59:+    IMFPresentationDescriptor *pres_desc;
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:63:@@ -742,12 +743,19 @@ static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:65:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:71:         return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:76:+        return MF_E_NOT_INITIALIZED;
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:79:+    IMFPresentationDescriptor_Clone(source->pres_desc, descriptor);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:84: static HRESULT WINAPI media_source_Start(IMFMediaSource *iface, IMFPresentationDescriptor *descriptor,
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:90:+        IMFPresentationDescriptor_Release(source->pres_desc);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:92:         IMFMediaEventQueue_Release(source->event_queue);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:94:@@ -856,6 +866,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:98:+    IMFStreamDescriptor **descriptors = NULL;
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:102:@@ -939,6 +950,25 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:108:+    descriptors = heap_alloc(object->stream_count * sizeof(IMFStreamDescriptor*));
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:111:+        IMFMediaStream_GetStreamDescriptor(&object->streams[i]->IMFMediaStream_iface, &descriptors[i]);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:114:+    if (FAILED(MFCreatePresentationDescriptor(object->stream_count, descriptors, &object->pres_desc)))
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:119:+        IMFPresentationDescriptor_SelectStream(object->pres_desc, i);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:120:+        IMFStreamDescriptor_Release(descriptors[i]);
./wine-hotfixes/GUY/0014-winegstreamer-Implement-IMFMediaSource-CreatePresent.patch:128:@@ -951,6 +981,8 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:8: dlls/winegstreamer/mfplat.c | 44 +++++++++++++++++++++++++++++++++++++
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:11:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:13:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:14:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:15:@@ -592,6 +592,50 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:30:+                        IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_WMV1);
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:33:+                        IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_WMV2);
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:36:+                        IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_WMV3);
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:46:+                    IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_WVC1);
./wine-hotfixes/GUY/0011-winegstreamer-Translate-WMV-caps-to-attributes.patch:59:+                    IMFMediaType_SetBlob(media_type, &MF_MT_USER_DATA, codec_data_raw, codec_data_size);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:5:Subject: [PATCH 02/40] mf/tests: Add tests for the topology loader.
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:12: dlls/mf/tests/mf.c | 435 ++++++++++++++++++++++++++++++++++++++++++++-
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:15:diff --git a/dlls/mf/tests/mf.c b/dlls/mf/tests/mf.c
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:17:--- a/dlls/mf/tests/mf.c
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:18:+++ b/dlls/mf/tests/mf.c
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:19:@@ -1303,26 +1303,169 @@ static const IMFSampleGrabberSinkCallbackVtbl test_grabber_callback_vtbl =
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:23:+static HRESULT WINAPI test_media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:25:+    if (IsEqualIID(riid, &IID_IMFMediaSource) ||
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:26:+        IsEqualIID(riid, &IID_IMFMediaEventGenerator) ||
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:38:+static ULONG WINAPI test_media_source_AddRef(IMFMediaSource *iface)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:43:+static ULONG WINAPI test_media_source_Release(IMFMediaSource *iface)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:48:+static HRESULT WINAPI test_media_source_GetEvent(IMFMediaSource *iface, DWORD flags, IMFMediaEvent **event)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:53:+static HRESULT WINAPI test_media_source_BeginGetEvent(IMFMediaSource *iface, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:58:+static HRESULT WINAPI test_media_source_EndGetEvent(IMFMediaSource *iface, IMFAsyncResult *result, IMFMediaEvent **event)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:63:+static HRESULT WINAPI test_media_source_QueueEvent(IMFMediaSource *iface, MediaEventType event_type, REFGUID ext_type,
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:69:+static HRESULT WINAPI test_media_source_GetCharacteristics(IMFMediaSource *iface, DWORD *characteristics)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:74:+static HRESULT WINAPI test_media_source_CreatePresentationDescriptor(IMFMediaSource *iface, IMFPresentationDescriptor **descriptor)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:78:+    IMFPresentationDescriptor *pd;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:79:+    IMFMediaType *mediatypes[3];
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:80:+    IMFStreamDescriptor *sd[2];
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:82:+    if (FAILED(hr = MFCreateMediaType(&mediatypes[0])))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:84:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[0], &MF_MT_MAJOR_TYPE, &MFMediaType_Video)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:86:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[0], &MF_MT_SUBTYPE, &MFVideoFormat_YUY2)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:88:+    if (FAILED(hr = MFCreateMediaType(&mediatypes[1])))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:90:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[1], &MF_MT_MAJOR_TYPE, &MFMediaType_Audio)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:92:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[1], &MF_MT_SUBTYPE, &MFAudioFormat_MP3)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:94:+    if (FAILED(hr = IMFMediaType_SetUINT32(mediatypes[1], &MF_MT_AUDIO_SAMPLES_PER_SECOND, 32000)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:96:+    if (FAILED(hr = IMFMediaType_SetUINT32(mediatypes[1], &MF_MT_AUDIO_NUM_CHANNELS, 2)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:98:+    if (FAILED(hr = IMFMediaType_SetUINT32(mediatypes[1], &MF_MT_AUDIO_PREFER_WAVEFORMATEX, 1)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:100:+    if (FAILED(hr = MFCreateMediaType(&mediatypes[2])))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:102:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[2], &MF_MT_MAJOR_TYPE, &MFMediaType_Audio)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:104:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[2], &MF_MT_SUBTYPE, &MFAudioFormat_PCM)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:106:+    if (FAILED(hr = MFCreateStreamDescriptor(0, 3, mediatypes, &sd[0])))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:108:+    if (FAILED(hr = MFCreateStreamDescriptor(1, 3, mediatypes, &sd[1])))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:110:+    if (FAILED(hr = MFCreatePresentationDescriptor(2, sd, &pd)))
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:114:+    IMFMediaType_Release(mediatypes[0]);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:115:+    IMFMediaType_Release(mediatypes[1]);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:116:+    IMFMediaType_Release(mediatypes[2]);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:117:+    IMFStreamDescriptor_Release(sd[0]);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:118:+    IMFStreamDescriptor_Release(sd[1]);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:123:+static HRESULT WINAPI test_media_source_Start(IMFMediaSource *iface, IMFPresentationDescriptor *descriptor,
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:129:+static HRESULT WINAPI test_media_source_Stop(IMFMediaSource *iface)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:134:+static HRESULT WINAPI test_media_source_Pause(IMFMediaSource *iface)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:139:+static HRESULT WINAPI test_media_source_Shutdown(IMFMediaSource *iface)
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:144:+static const IMFMediaSourceVtbl test_media_source_vtbl =
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:163:     IMFSampleGrabberSinkCallback test_grabber_callback = { &test_grabber_callback_vtbl };
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:164:+    IMFMediaSource test_media_source = { &test_media_source_vtbl };
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:165:     IMFTopology *topology, *topology2, *full_topology;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:166:     IMFTopologyNode *src_node, *sink_node;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:167:+    IMFMediaType *media_type, *current_media_type;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:168:     IMFPresentationDescriptor *pd;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:169:     IMFSourceResolver *resolver;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:170:     IMFActivate *sink_activate;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:171:     IMFStreamSink *stream_sink;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:173:-    IMFMediaType *media_type;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:174:+    IMFMediaTypeHandler *mth;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:175:     IMFStreamDescriptor *sd;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:177:     MF_OBJECT_TYPE obj_type;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:178:     IMFMediaSource *source;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:179:     IMFTopoLoader *loader;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:180:     IMFByteStream *stream;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:181:     IMFAttributes *attr;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:182:     IMFMediaSink *sink;
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:194:+    IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:197:     hr = IMFTopology_GetCount(topology, &count);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:202:     IMFTopology_Release(topology2);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:203:     IMFTopology_Release(full_topology);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:204:+    IMFByteStream_Release(stream);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:205:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:208:+    IMFPresentationDescriptor_GetStreamDescriptorCount(pd, &count);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:210:+    hr = IMFPresentationDescriptor_DeselectStream(pd, 0);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:212:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:214:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:215:+    hr = IMFTopology_GetNode(full_topology, 0, &src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:217:+    IMFPresentationDescriptor_Release(pd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:218:+    hr = IMFTopologyNode_GetUnknown(src_node, &MF_TOPONODE_PRESENTATION_DESCRIPTOR, &IID_IMFPresentationDescriptor, (void **)&pd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:220:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:221:+    IMFPresentationDescriptor_GetStreamDescriptorByIndex(pd, 0, &selected, &sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:225:+    IMFPresentationDescriptor_Release(pd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:226:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:227:+    IMFTopology_Release(full_topology);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:228:+    IMFTopology_Release(topology);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:229:     IMFMediaSource_Release(source);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:230:     IMFSourceResolver_Release(resolver);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:231:-    IMFByteStream_Release(stream);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:234:+    /* first, test default behavior; MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES not set */
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:235:+    hr = MFCreateTopology(&topology);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:238:+    hr = IMFMediaSource_CreatePresentationDescriptor(&test_media_source, &pd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:241:+    hr = IMFPresentationDescriptor_GetStreamDescriptorByIndex(pd, 0, &selected, &sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:244:+    hr = IMFStreamDescriptor_GetMediaTypeHandler(sd, &mth);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:246:+    hr = IMFMediaTypeHandler_GetCurrentMediaType(mth, &media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:247:+    ok(hr == MF_E_NOT_INITIALIZED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:249:+    hr = MFCreateTopologyNode(MF_TOPOLOGY_SOURCESTREAM_NODE, &src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:252:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_SOURCE, (IUnknown *)&test_media_source);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:254:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_PRESENTATION_DESCRIPTOR, (IUnknown *)pd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:256:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_STREAM_DESCRIPTOR, (IUnknown *)sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:259:+    hr = IMFTopology_AddNode(topology, src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:262:+    hr = MFCreateMediaType(&media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:265:+    hr = IMFMediaType_SetGUID(media_type, &MF_MT_MAJOR_TYPE, &MFMediaType_Audio);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:267:+    hr = IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_PCM);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:270:+    hr = MFCreateSampleGrabberSinkActivate(media_type, &test_grabber_callback, &sink_activate);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:272:+    IMFMediaType_Release(media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:274:+    hr = IMFActivate_ActivateObject(sink_activate, &IID_IMFMediaSink, (void **)&sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:277:+    hr = IMFMediaSink_GetStreamSinkByIndex(sink, 0, &stream_sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:280:+    hr = MFCreateTopologyNode(MF_TOPOLOGY_OUTPUT_NODE, &sink_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:283:+    hr = IMFTopologyNode_SetObject(sink_node, (IUnknown *)stream_sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:286:+    hr = IMFTopology_AddNode(topology, sink_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:289:+    hr = IMFTopologyNode_ConnectOutput(src_node, 0, sink_node, 0);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:292:+    hr = IMFTopology_GetUINT32(topology, &MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES, &enum_src);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:293:+    ok(hr == MF_E_ATTRIBUTENOTFOUND, "Attribute should not be set\n.");
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:295:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:297:+    /* when major types differ, error is MF_E_TOPO_CODEC_NOT_FOUND */
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:298:+    ok(hr == MF_E_TOPO_CODEC_NOT_FOUND, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:300:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 2, &media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:304:+    hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:307:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:310:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:314:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 1, &media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:317:+    hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:320:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:323:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:328:+    IMFTopology_Release(full_topology);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:330:+    /* now test with MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES set on topology */
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:331:+    hr = IMFTopology_SetUINT32(topology, &MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES, 1);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:333:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 2, &media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:336:+    /* first, if MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES is not set on source */
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:337:+    IMFTopologyNode_GetUINT32(src_node, &MF_TOPONODE_CONNECT_METHOD, &method);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:339:+    IMFTopologyNode_SetUINT32(src_node, &MF_TOPONODE_CONNECT_METHOD, method & ~MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:342:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:345:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:348:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:349:+    hr = IMFTopology_GetNode(full_topology, 0, &src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:351:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:352:+    hr = IMFTopologyNode_GetUnknown(src_node, &MF_TOPONODE_STREAM_DESCRIPTOR, &IID_IMFStreamDescriptor, (void **)&sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:354:+    IMFMediaTypeHandler_Release(mth);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:355:+    hr = IMFStreamDescriptor_GetMediaTypeHandler(sd, &mth);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:357:+    hr = IMFMediaTypeHandler_GetCurrentMediaType(mth, &current_media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:359:+    hr = IMFMediaType_IsEqual(current_media_type, media_type, &flags);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:362:+    ok(flags & MF_MEDIATYPE_EQUAL_FORMAT_DATA, "Types should be equal.\n");
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:365:+    IMFMediaType_Release(media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:366:+    IMFMediaType_Release(current_media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:367:+    IMFMediaTypeHandler_Release(mth);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:368:+    IMFStreamSink_Release(stream_sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:369:+    IMFMediaSink_Release(sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:370:+    IMFActivate_Release(sink_activate);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:371:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:374:+    hr = IMFTopology_SetUINT32(topology, &MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES, 0);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:376:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:377:+    hr = IMFTopology_GetNode(topology, 0, &src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:379:+    hr = IMFTopologyNode_GetUnknown(src_node, &MF_TOPONODE_STREAM_DESCRIPTOR, &IID_IMFStreamDescriptor, (void **)&sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:381:+    hr = IMFStreamDescriptor_GetMediaTypeHandler(sd, &mth);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:383:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 1, &media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:385:+    hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:388:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:391:+    IMFTopology_Release(full_topology);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:393:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:394:+    hr = IMFPresentationDescriptor_GetStreamDescriptorByIndex(pd, 1, &selected, &sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:397:+    hr = IMFStreamDescriptor_GetMediaTypeHandler(sd, &mth);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:399:+    hr = IMFMediaTypeHandler_GetCurrentMediaType(mth, &media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:400:+    ok(hr == MF_E_NOT_INITIALIZED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:402:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:403:+    hr = MFCreateTopologyNode(MF_TOPOLOGY_SOURCESTREAM_NODE, &src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:406:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_SOURCE, (IUnknown *)&test_media_source);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:408:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_PRESENTATION_DESCRIPTOR, (IUnknown *)pd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:410:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_STREAM_DESCRIPTOR, (IUnknown *)sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:413:+    hr = IMFTopology_AddNode(topology, src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:416:+    hr = MFCreateMediaType(&media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:419:+    hr = IMFMediaType_SetGUID(media_type, &MF_MT_MAJOR_TYPE, &MFMediaType_Audio);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:421:+    hr = IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_PCM);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:424:+    hr = MFCreateSampleGrabberSinkActivate(media_type, &test_grabber_callback, &sink_activate);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:426:+    IMFMediaType_Release(media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:428:+    hr = IMFActivate_ActivateObject(sink_activate, &IID_IMFMediaSink, (void **)&sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:431:+    hr = IMFMediaSink_GetStreamSinkByIndex(sink, 0, &stream_sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:434:+    hr = MFCreateTopologyNode(MF_TOPOLOGY_OUTPUT_NODE, &sink_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:437:+    hr = IMFTopologyNode_SetObject(sink_node, (IUnknown *)stream_sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:440:+    hr = IMFTopology_AddNode(topology, sink_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:443:+    hr = IMFTopology_GetNodeCount(topology, &node_count);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:447:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:451:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:456:+    IMFTopology_Release(full_topology);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:459:+    hr = IMFTopologyNode_ConnectOutput(src_node, 0, sink_node, 0);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:463:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:465:+    ok(hr == MF_E_TOPO_CODEC_NOT_FOUND, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:468:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 1, &media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:471:+    hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:474:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:477:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:482:+    IMFTopology_Release(full_topology);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:483:+    IMFMediaType_Release(media_type);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:484:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:485:+    IMFTopologyNode_Release(sink_node);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:486:+    IMFMediaTypeHandler_Release(mth);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:487:+    IMFStreamSink_Release(stream_sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:488:+    IMFMediaSink_Release(sink);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:489:+    IMFActivate_Release(sink_activate);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:490:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:492:+    IMFPresentationDescriptor_Release(pd);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:493:+    IMFTopology_Release(topology);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:494:     IMFTopoLoader_Release(loader);
./wine-hotfixes/GUY/0002-mf-tests-Add-tests-for-the-topology-loader.patch:496:     hr = MFShutdown();
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:5:Subject: [PATCH 03/40] mf: Partially implement the topology loader.
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:12: dlls/mf/tests/mf.c |   3 -
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:13: dlls/mf/topology.c | 337 ++++++++++++++++++++++++++++++++++++++++++---
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:16:diff --git a/dlls/mf/tests/mf.c b/dlls/mf/tests/mf.c
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:18:--- a/dlls/mf/tests/mf.c
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:19:+++ b/dlls/mf/tests/mf.c
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:23:     hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:25:     ok(hr == MF_E_TOPO_UNSUPPORTED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:27:     hr = MFCreateSourceResolver(&resolver);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:31:     hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:33:     ok(hr == MF_E_TOPO_UNSUPPORTED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:39:     hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:41:     ok(hr == MF_E_TOPO_UNSUPPORTED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:43:     hr = IMFTopologyNode_ConnectOutput(src_node, 0, sink_node, 0);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:44:diff --git a/dlls/mf/topology.c b/dlls/mf/topology.c
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:46:--- a/dlls/mf/topology.c
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:47:+++ b/dlls/mf/topology.c
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:48:@@ -1913,47 +1913,352 @@ static ULONG WINAPI topology_loader_Release(IMFTopoLoader *iface)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:52:+static void topology_loader_add_branch(struct topology *topology, IMFTopologyNode *first, IMFTopologyNode *last)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:54:+    IMFTopology *full_topo = &topology->IMFTopology_iface;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:55:+    IMFTopologyNode *in, *out;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:59:+    IMFTopology_AddNode(full_topo, in);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:60:+    while (SUCCEEDED(IMFTopologyNode_GetOutput(in, 0, &out, &index)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:62:+        IMFTopology_AddNode(full_topo, out);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:67:+static HRESULT topology_loader_resolve_branch(IMFTopologyNode *src, IMFMediaType *mediatype, IMFTopologyNode *sink, MF_CONNECT_METHOD method)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:69:+    IMFStreamSink *streamsink;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:70:+    IMFMediaTypeHandler *mth;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:73:+    IMFTopologyNode_GetObject(sink, (IUnknown **)&streamsink);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:74:+    IMFStreamSink_GetMediaTypeHandler(streamsink, &mth);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:75:+    if (method == MF_CONNECT_DIRECT)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:77:+        if (FAILED(hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, mediatype)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:79:+        hr = IMFTopologyNode_ConnectOutput(src, 0, sink, 0);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:84:+        IMFTopologyNode *node_dec, *node_conv;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:85:+        GUID major_type, subtype, mft_category;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:86:+        MFT_REGISTER_TYPE_INFO mft_typeinfo;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:87:+        UINT32 flags = MFT_ENUM_FLAG_ALL;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:88:+        IMFActivate **activates_decs;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:92:+        IMFMediaType_GetGUID(mediatype, &MF_MT_MAJOR_TYPE, &major_type);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:93:+        if (IsEqualGUID(&major_type, &MFMediaType_Audio))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:94:+            mft_category = MFT_CATEGORY_AUDIO_DECODER;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:95:+        else if (IsEqualGUID(&major_type, &MFMediaType_Video))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:96:+            mft_category = MFT_CATEGORY_VIDEO_DECODER;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:98:+            return MF_E_INVALIDMEDIATYPE;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:100:+        IMFMediaType_GetGUID(mediatype, &MF_MT_SUBTYPE, &subtype);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:101:+        mft_typeinfo.guidMajorType = major_type;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:102:+        mft_typeinfo.guidSubtype = subtype;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:103:+        MFTEnumEx(mft_category, flags, &mft_typeinfo, NULL, &activates_decs, &num_activates_decs);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:106:+        if (IsEqualGUID(&major_type, &MFMediaType_Audio))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:107:+            mft_category = MFT_CATEGORY_AUDIO_EFFECT;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:108:+        else if (IsEqualGUID(&major_type, &MFMediaType_Video))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:109:+            mft_category = MFT_CATEGORY_VIDEO_EFFECT;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:123:+            IMFTransform *decoder;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:125:+            IMFActivate_ActivateObject(activates_decs[i], &IID_IMFTransform, (void **)&decoder);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:126:+            if (SUCCEEDED(hr = IMFTransform_SetInputType(decoder, 0, mediatype, 0)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:129:+                IMFActivate **activates_convs;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:130:+                IMFMediaType *decoder_mtype;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:133:+                while (SUCCEEDED(IMFTransform_GetOutputAvailableType(decoder, 0, count++, &decoder_mtype)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:135:+                    IMFTransform *converter;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:138:+                    if (SUCCEEDED(IMFMediaTypeHandler_SetCurrentMediaType(mth, decoder_mtype)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:140:+                        MFCreateTopologyNode(MF_TOPOLOGY_TRANSFORM_NODE, &node_dec);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:141:+                        IMFTopologyNode_SetObject(node_dec, (IUnknown *)decoder);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:142:+                        IMFTopologyNode_ConnectOutput(src, 0, node_dec, 0);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:143:+                        IMFTopologyNode_ConnectOutput(node_dec, 0, sink, 0);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:145:+                        IMFActivate_ShutdownObject(activates_convs[i]);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:149:+                    IMFMediaType_GetGUID(decoder_mtype, &MF_MT_SUBTYPE, &subtype);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:150:+                    mft_typeinfo.guidSubtype = subtype;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:151:+                    MFTEnumEx(mft_category, flags, &mft_typeinfo, NULL, &activates_convs, &num_activates_convs);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:154:+                        IMFMediaType *converter_mtype;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:156:+                        IMFActivate_ActivateObject(activates_convs[j], &IID_IMFTransform, (void **)&converter);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:157:+                        if (SUCCEEDED(IMFTransform_SetInputType(converter, 0, decoder_mtype, 0)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:160:+                            while (SUCCEEDED(IMFTransform_GetOutputAvailableType(converter, 0, count++, &converter_mtype)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:163:+                                if (SUCCEEDED(IMFMediaTypeHandler_SetCurrentMediaType(mth, converter_mtype)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:165:+                                    MFCreateTopologyNode(MF_TOPOLOGY_TRANSFORM_NODE, &node_dec);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:166:+                                    IMFTopologyNode_SetObject(node_dec, (IUnknown *)decoder);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:167:+                                    MFCreateTopologyNode(MF_TOPOLOGY_TRANSFORM_NODE, &node_conv);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:168:+                                    IMFTopologyNode_SetObject(node_conv, (IUnknown *)converter);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:169:+                                    IMFTopologyNode_ConnectOutput(src, 0, node_dec, 0);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:170:+                                    IMFTopologyNode_ConnectOutput(node_dec, 0, node_conv, 0);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:171:+                                    IMFTopologyNode_ConnectOutput(node_conv, 0, sink, 0);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:173:+                                    IMFActivate_ShutdownObject(activates_convs[j]);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:174:+                                    IMFActivate_ShutdownObject(activates_decs[i]);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:179:+                        IMFActivate_ShutdownObject(activates_convs[j]);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:183:+            IMFActivate_ShutdownObject(activates_decs[i]);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:191:+    IMFMediaTypeHandler *mth_src, *mth_sink;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:192:+    IMFTopologyNode *clone_src, *clone_sink;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:194:+    IMFMediaType **src_mediatypes;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:195:+    IMFStreamDescriptor *desc;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:196:+    IMFAttributes *attrs_src;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:197:+    IMFStreamSink *strm_sink;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:198:+    IMFMediaType *mtype_src;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:204:+    if (FAILED(hr = IMFAttributes_GetUnknown(attrs_src, &MF_TOPONODE_STREAM_DESCRIPTOR, &IID_IMFStreamDescriptor, (void **)&desc)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:206:+    strm_sink = (IMFStreamSink *)sink->object;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:208:+    if (FAILED(hr = IMFStreamDescriptor_GetMediaTypeHandler(desc, &mth_src)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:210:+        IMFStreamDescriptor_Release(desc);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:213:+    if (FAILED(hr = IMFStreamSink_GetMediaTypeHandler(strm_sink, &mth_sink)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:215:+        IMFStreamDescriptor_Release(desc);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:216:+        IMFMediaTypeHandler_Release(mth_src);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:220:+    hr = IMFTopology_GetUINT32(&topology->IMFTopology_iface, &MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES, &enum_src_types);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:227:+        if (FAILED(hr = IMFMediaTypeHandler_GetCurrentMediaType(mth_src, &mtype_src)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:228:+            if (FAILED(hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth_src, 0, &mtype_src)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:230:+                IMFMediaTypeHandler_Release(mth_src);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:231:+                IMFMediaTypeHandler_Release(mth_sink);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:232:+                IMFStreamDescriptor_Release(desc);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:237:+        IMFMediaTypeHandler_GetMediaTypeCount(mth_src, &num_media_types);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:239:+    src_mediatypes = heap_alloc(sizeof(IMFMediaType *) * num_media_types);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:245:+            IMFMediaTypeHandler_GetMediaTypeByIndex(mth_src, i, &src_mediatypes[i]);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:248:+    MFCreateTopologyNode(MF_TOPOLOGY_SOURCESTREAM_NODE, &clone_src);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:249:+    MFCreateTopologyNode(MF_TOPOLOGY_OUTPUT_NODE, &clone_sink);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:250:+    IMFTopologyNode_CloneFrom(clone_src, &src->IMFTopologyNode_iface);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:251:+    IMFTopologyNode_CloneFrom(clone_sink, &sink->IMFTopologyNode_iface);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:253:+    if (FAILED(IMFTopologyNode_GetUINT32(clone_sink, &MF_TOPONODE_STREAMID, &streamid)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:254:+        IMFTopologyNode_SetUINT32(clone_sink, &MF_TOPONODE_STREAMID, 0);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:258:+        hr = IMFAttributes_GetUINT32(attrs_src, &MF_TOPONODE_CONNECT_METHOD, &method);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:259:+        if (hr == S_OK && method != MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:261:+            for (method = MF_CONNECT_DIRECT; method < MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES; method++)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:273:+                for (method = MF_CONNECT_DIRECT; method < MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES; method++)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:284:+        if (SUCCEEDED(topology_loader_resolve_branch(clone_src, src_mediatypes[0], clone_sink, MF_CONNECT_DIRECT)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:293:+    return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:296: static HRESULT WINAPI topology_loader_Load(IMFTopoLoader *iface, IMFTopology *input_topology,
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:297:         IMFTopology **output_topology, IMFTopology *current_topology)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:299:     struct topology *topology = unsafe_impl_from_IMFTopology(input_topology);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:302:     IMFStreamSink *sink;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:313:+        return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:320:+        if (node->node_type == MF_TOPOLOGY_SOURCESTREAM_NODE)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:328:+        return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:338:+        if (node->node_type == MF_TOPOLOGY_SOURCESTREAM_NODE)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:340:-            case MF_TOPOLOGY_OUTPUT_NODE:
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:345:+                if (node->outputs.streams->connection->node_type == MF_TOPOLOGY_TRANSFORM_NODE)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:348:-                    if (FAILED(IUnknown_QueryInterface(node->object, &IID_IMFStreamSink, (void **)&sink)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:349:-                        return MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:350:-                    IMFStreamSink_Release(sink);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:353:+                    while (sink && sink->node_type != MF_TOPOLOGY_OUTPUT_NODE && sink->outputs.count)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:357:+                        FIXME("Check for MF_CONNECT_AS_OPTIONAL and MF_CONNECT_AS_OPTIONAL_BRANCH flags.\n");
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:359:+                        return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:364:-            case MF_TOPOLOGY_SOURCESTREAM_NODE:
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:365:-                if (FAILED(hr = IMFAttributes_GetItem(node->attributes, &MF_TOPONODE_STREAM_DESCRIPTOR, NULL)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:370:+                else if (node->outputs.streams->connection->node_type == MF_TOPOLOGY_OUTPUT_NODE)
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:375:+                    return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:385:+        if (FAILED(IUnknown_QueryInterface(node_pairs[i][1]->object, &IID_IMFStreamSink, (void **)&sink)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:387:+            FIXME("Check for MF_CONNECT_AS_OPTIONAL and MF_CONNECT_AS_OPTIONAL_BRANCH flags.\n");
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:389:+            return MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED;
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:391:+        IMFStreamSink_Release(sink);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:394:     if (FAILED(hr = MFCreateTopology(output_topology)))
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:397:-    return IMFTopology_CloneFrom(*output_topology, input_topology);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:403:+        struct topology *full_topology = unsafe_impl_from_IMFTopology(*output_topology);
./wine-hotfixes/GUY/0003-mf-Partially-implement-the-topology-loader.patch:416: static const IMFTopoLoaderVtbl topologyloadervtbl =
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:5: IMFMediaStream::GetStreamDescriptor.
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:11: dlls/winegstreamer/mfplat.c       | 186 ++++++++++++++++++++++++++++++
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:22:+#include "mfobjects.h"
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:28: extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj) DECLSPEC_HIDDEN;
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:30:+GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:31:+IMFMediaType *mf_media_type_from_caps(GstCaps *caps);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:40:@@ -507,7 +507,10 @@ static HRESULT WINAPI media_stream_GetStreamDescriptor(IMFMediaStream* iface, IM
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:42:         return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:45:+    IMFStreamDescriptor_AddRef(stream->descriptor);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:51: static HRESULT WINAPI media_stream_RequestSample(IMFMediaStream *iface, IUnknown *token)
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:52:@@ -539,6 +542,9 @@ static const IMFMediaStreamVtbl media_stream_vtbl =
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:56:+    IMFMediaTypeHandler *type_handler = NULL;
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:57:+    IMFMediaType *stream_type = NULL;
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:69:+    if (TRACE_ON(mfplat))
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:76:+    if (!(stream_type = mf_media_type_from_caps(caps)))
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:82:+    if (FAILED(hr = MFCreateStreamDescriptor(stream_id, 1, &stream_type, &object->descriptor)))
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:85:+    if (FAILED(hr = IMFStreamDescriptor_GetMediaTypeHandler(object->descriptor, &type_handler)))
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:88:+    if (FAILED(hr = IMFMediaTypeHandler_SetCurrentMediaType(type_handler, stream_type)))
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:91:+    IMFMediaTypeHandler_Release(type_handler);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:93:+    IMFMediaType_Release(stream_type);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:106:+        IMFMediaType_Release(stream_type);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:108:+        IMFMediaTypeHandler_Release(type_handler);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:110:     IMFMediaStream_Release(&object->IMFMediaStream_iface);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:113:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:115:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:116:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:129:@@ -442,3 +447,184 @@ HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:141:+    {&MFVideoFormat_ARGB32,  GST_VIDEO_FORMAT_BGRA},
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:142:+    {&MFVideoFormat_RGB32,   GST_VIDEO_FORMAT_BGRx},
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:143:+    {&MFVideoFormat_RGB24,   GST_VIDEO_FORMAT_BGR},
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:144:+    {&MFVideoFormat_RGB565,  GST_VIDEO_FORMAT_BGR16},
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:145:+    {&MFVideoFormat_RGB555,  GST_VIDEO_FORMAT_BGR15},
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:149:+static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:151:+    IMFMediaType *media_type;
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:155:+    if (TRACE_ON(mfplat))
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:162:+    if (FAILED(MFCreateMediaType(&media_type)))
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:179:+        IMFMediaType_SetGUID(media_type, &MF_MT_MAJOR_TYPE, &MFMediaType_Video);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:181:+        IMFMediaType_SetUINT64(media_type, &MF_MT_FRAME_SIZE, ((UINT64)video_info.width << 32) | video_info.height);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:183:+        IMFMediaType_SetUINT64(media_type, &MF_MT_FRAME_RATE, ((UINT64)video_info.fps_n << 32) | video_info.fps_d);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:187:+            GUID fourcc_subtype = MFVideoFormat_Base;
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:190:+            IMFMediaType_SetUINT32(media_type, &MF_MT_COMPRESSED, FALSE);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:195:+                IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &fourcc_subtype);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:203:+                        IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, uncompressed_formats[i].subtype);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:216:+        IMFMediaType_SetGUID(media_type, &MF_MT_MAJOR_TYPE, &MFMediaType_Audio);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:230:+                    IMFMediaType_Release(media_type);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:236:+                    IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_Float);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:240:+                    IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_PCM);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:249:+                    IMFMediaType_Release(media_type);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:253:+                IMFMediaType_SetUINT32(media_type, &MF_MT_AUDIO_BITS_PER_SAMPLE, bits_per_sample);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:271:+        IMFMediaType_Release(media_type);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:279:+IMFMediaType *mf_media_type_from_caps(GstCaps *caps)
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:282:+    IMFMediaType *ret;
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:289:+        IMFMediaType_Release(ret);
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:296:+GstCaps *make_mf_compatible_caps(GstCaps *caps)
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:299:+    IMFMediaType *media_type;
./wine-hotfixes/GUY/0009-winegstreamer-Implement-IMFMediaStream-GetStreamDesc.patch:304:+        IMFMediaType_Release(media_type);
./wine-hotfixes/GUY/0023-winegstreamer-Translate-H.264-attributes-to-caps.patch:8: dlls/winegstreamer/mfplat.c | 48 +++++++++++++++++++++++++++++++++++++
./wine-hotfixes/GUY/0023-winegstreamer-Translate-H.264-attributes-to-caps.patch:11:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0023-winegstreamer-Translate-H.264-attributes-to-caps.patch:13:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0023-winegstreamer-Translate-H.264-attributes-to-caps.patch:14:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0023-winegstreamer-Translate-H.264-attributes-to-caps.patch:15:@@ -945,6 +945,54 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type)
./wine-hotfixes/GUY/0023-winegstreamer-Translate-H.264-attributes-to-caps.patch:19:+        else if (IsEqualGUID(&subtype, &MFVideoFormat_H264))
./wine-hotfixes/GUY/0023-winegstreamer-Translate-H.264-attributes-to-caps.patch:27:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_MPEG2_PROFILE, &h264_profile)))
./wine-hotfixes/GUY/0023-winegstreamer-Translate-H.264-attributes-to-caps.patch:40:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_MPEG2_LEVEL, &h264_level)))
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:7: dlls/winegstreamer/mf_decode.c | 2 +-
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:8: dlls/winegstreamer/mfplat.c    | 4 ++++
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:11:diff --git a/dlls/winegstreamer/mf_decode.c b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:13:--- a/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:14:+++ b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:15:@@ -24,7 +24,7 @@ const GUID *h264_input_types[] = {&MFVideoFormat_H264};
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:16: const GUID *h264_output_types[] = {&MFVideoFormat_I420, &MFVideoFormat_IYUV, &MFVideoFormat_NV12, &MFVideoFormat_YUY2, &MFVideoFormat_YV12};
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:18: const GUID *aac_input_types[] = {&MFAudioFormat_AAC};
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:19:-const GUID *aac_output_types[] = {&MFAudioFormat_Float};
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:20:+const GUID *aac_output_types[] = {&MFAudioFormat_Float, &MFAudioFormat_PCM};
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:22: const GUID *wmv_input_types[] = {&MFVideoFormat_WMV3, &MFVideoFormat_WVC1};
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:23: const GUID *wmv_output_types[] = {&MFVideoFormat_NV12, &MFVideoFormat_YV12, &MFVideoFormat_YUY2, &MFVideoFormat_UYVY, &MFVideoFormat_YVYU, &MFVideoFormat_NV11, &MFVideoFormat_RGB32, &MFVideoFormat_RGB24, &MFVideoFormat_RGB555, &MFVideoFormat_RGB8};
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:24:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:26:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:27:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:30:         &MFMediaType_Audio,
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:31:         &MFAudioFormat_Float
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:34:+        &MFMediaType_Audio,
./wine-hotfixes/GUY/0035-Expose-PCM-output-type-on-AAC-decoder.patch:35:+        &MFAudioFormat_PCM
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:4:Subject: [PATCH 17/40] winegstreamer: Implement IMFMediaStream::RequestSample.
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:8: dlls/mfplat/tests/mfplat.c        |   4 -
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:11: dlls/winegstreamer/mfplat.c       |  90 +++++++++++++++++++++
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:14:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:16:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:17:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:19:         hr = IMFMediaStream_RequestSample(video_stream, NULL);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:34:     get_event((IMFMediaEventGenerator *)mediasource, MEEndOfPresentation, NULL);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:37:     IMFMediaStream_Release(video_stream);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:38:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:39:     IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:44:@@ -57,6 +57,7 @@ extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:46: GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:47: IMFMediaType *mf_media_type_from_caps(GstCaps *caps);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:48:+IMFSample *mf_sample_from_gst_buffer(GstBuffer *in);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:99:+    IMFMediaEventQueue_QueueEventParamVar(source->event_queue, MEEndOfPresentation, &GUID_NULL, S_OK, &empty);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:107:+    IMFSample *sample;
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:118:+        IMFMediaEventQueue_QueueEventParamVar(stream->event_queue, MEEndOfStream, &GUID_NULL, S_OK, &empty_var);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:129:+    if (TRACE_ON(mfplat))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:148:+    sample = mf_sample_from_gst_buffer(buffer);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:152:+        IMFSample_SetUnknown(sample, &MFSampleExtension_Token, token);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:154:+    IMFMediaEventQueue_QueueEventParamUnk(stream->event_queue, MEMediaSample, &GUID_NULL, S_OK, (IUnknown *)sample);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:161: static HRESULT WINAPI source_async_commands_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:163:     struct media_source *source = impl_from_async_commands_callback_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:164:@@ -323,6 +405,9 @@ static HRESULT WINAPI source_async_commands_Invoke(IMFAsyncCallback *iface, IMFA
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:174:@@ -345,12 +430,17 @@ static const IMFAsyncCallbackVtbl source_async_commands_callback_vtbl =
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:196:@@ -685,6 +775,8 @@ static ULONG WINAPI media_stream_Release(IMFMediaStream *iface)
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:198:             IMFMediaSource_Release(&stream->parent_source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:205:@@ -770,13 +862,37 @@ static HRESULT WINAPI media_stream_GetStreamDescriptor(IMFMediaStream* iface, IM
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:206: static HRESULT WINAPI media_stream_RequestSample(IMFMediaStream *iface, IUnknown *token)
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:208:     struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:215:         return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:221:+        return MF_E_MEDIA_SOURCE_WRONGSTATE;
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:226:+        return MF_E_END_OF_STREAM;
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:237:+        hr = MFPutWorkItem(stream->parent_source->async_commands_queue, &stream->parent_source->async_commands_callback, &command->IUnknown_iface);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:243: static const IMFMediaStreamVtbl media_stream_vtbl =
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:251:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:253:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:255:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:256:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:257:@@ -871,4 +871,94 @@ GstCaps *make_mf_compatible_caps(GstCaps *caps)
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:263:+/* IMFSample = GstBuffer
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:264:+   IMFBuffer = GstMemory */
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:267:+   IMFMediaBuffer wrapper around GstMemory, and to utilize
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:268:+   gst_memory_new_wrapped on IMFMediaBuffer data.  However,
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:272:+IMFSample* mf_sample_from_gst_buffer(GstBuffer *gst_buffer)
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:274:+    IMFSample *out = NULL;
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:279:+    if (FAILED(hr = MFCreateSample(&out)))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:285:+    if (FAILED(IMFSample_SetSampleDuration(out, duration / 100)))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:288:+    if (FAILED(IMFSample_SetSampleTime(out, time / 100)))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:296:+        IMFMediaBuffer *mf_buffer = NULL;
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:312:+        if (FAILED(hr = MFCreateMemoryBuffer(map_info.maxsize, &mf_buffer)))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:318:+        if (FAILED(hr = IMFMediaBuffer_Lock(mf_buffer, &buf_data, NULL, NULL)))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:328:+        if (FAILED(hr = IMFMediaBuffer_Unlock(mf_buffer)))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:331:+        if (FAILED(hr = IMFMediaBuffer_SetCurrentLength(mf_buffer, map_info.size)))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:334:+        if (FAILED(hr = IMFSample_AddBuffer(out, mf_buffer)))
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:338:+        if (mf_buffer)
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:339:+            IMFMediaBuffer_Release(mf_buffer);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:348:+    ERR("Failed to copy IMFSample to GstBuffer, hr = %#x\n", hr);
./wine-hotfixes/GUY/0017-winegstreamer-Implement-IMFMediaStream-RequestSample.patch:349:+    IMFSample_Release(out);
./wine-hotfixes/GUY/0024-winegstreamer-Translate-WMV-attributes-to-caps.patch:8: dlls/winegstreamer/mfplat.c | 18 ++++++++++++++++++
./wine-hotfixes/GUY/0024-winegstreamer-Translate-WMV-attributes-to-caps.patch:11:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0024-winegstreamer-Translate-WMV-attributes-to-caps.patch:13:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0024-winegstreamer-Translate-WMV-attributes-to-caps.patch:14:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0024-winegstreamer-Translate-WMV-attributes-to-caps.patch:15:@@ -993,6 +993,24 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type)
./wine-hotfixes/GUY/0024-winegstreamer-Translate-WMV-attributes-to-caps.patch:19:+        else if (IsEqualGUID(&subtype, &MFVideoFormat_WVC1))
./wine-hotfixes/GUY/0024-winegstreamer-Translate-WMV-attributes-to-caps.patch:28:+            if (SUCCEEDED(IMFMediaType_GetAllocatedBlob(type, &MF_MT_USER_DATA, &user_data, &user_data_size)))
./wine-hotfixes/GUY/0024-winegstreamer-Translate-WMV-attributes-to-caps.patch:34:+                CoTaskMemFree(user_data);
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:8: dlls/winegstreamer/mfplat.c | 66 +++++++++++++++++++++++++++++++++++++
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:11:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:13:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:14:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:15:@@ -1059,6 +1059,72 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type)
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:19:+        else if (IsEqualGUID(&subtype, &MFAudioFormat_AAC))
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:29:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AAC_PAYLOAD_TYPE, &payload_type)))
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:52:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION, &indication)))
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:72:+            if (SUCCEEDED(IMFMediaType_GetAllocatedBlob(type, &MF_MT_USER_DATA, (BYTE **) &user_data, &user_data_size)))
./wine-hotfixes/GUY/0025-winegstreamer-Translate-AAC-attributes-to-caps.patch:82:+                CoTaskMemFree(user_data);
./wine-hotfixes/GUY/0019-winegstreamer-Calculate-the-MF_PD_DURATION-of-the-me.patch:4:Subject: [PATCH 19/40] winegstreamer: Calculate the MF_PD_DURATION of the
./wine-hotfixes/GUY/0019-winegstreamer-Calculate-the-MF_PD_DURATION-of-the-me.patch:16:@@ -1434,6 +1434,46 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0019-winegstreamer-Calculate-the-MF_PD_DURATION-of-the-me.patch:22:+        IMFAttributes *byte_stream_attributes;
./wine-hotfixes/GUY/0019-winegstreamer-Calculate-the-MF_PD_DURATION-of-the-me.patch:25:+        if (SUCCEEDED(IMFByteStream_QueryInterface(object->byte_stream, &IID_IMFAttributes, (void **)&byte_stream_attributes)))
./wine-hotfixes/GUY/0019-winegstreamer-Calculate-the-MF_PD_DURATION-of-the-me.patch:29:+            if (SUCCEEDED(IMFAttributes_GetAllocatedString(byte_stream_attributes, &MF_BYTESTREAM_CONTENT_TYPE, &mimeW, &length)))
./wine-hotfixes/GUY/0019-winegstreamer-Calculate-the-MF_PD_DURATION-of-the-me.patch:31:+                IMFPresentationDescriptor_SetString(object->pres_desc, &MF_PD_MIME_TYPE, mimeW);
./wine-hotfixes/GUY/0019-winegstreamer-Calculate-the-MF_PD_DURATION-of-the-me.patch:32:+                CoTaskMemFree(mimeW);
./wine-hotfixes/GUY/0019-winegstreamer-Calculate-the-MF_PD_DURATION-of-the-me.patch:34:+            IMFAttributes_Release(byte_stream_attributes);
./wine-hotfixes/GUY/0019-winegstreamer-Calculate-the-MF_PD_DURATION-of-the-me.patch:57:+            IMFPresentationDescriptor_SetUINT64(object->pres_desc, &MF_PD_DURATION, total_pres_time / 100);
./wine-hotfixes/GUY/0018-winegstreamer-Implement-IMFMediaSource-GetCharacteri.patch:5: IMFMediaSource::GetCharacteristics.
./wine-hotfixes/GUY/0018-winegstreamer-Implement-IMFMediaSource-GetCharacteri.patch:16:@@ -1171,12 +1171,14 @@ static HRESULT WINAPI media_source_GetCharacteristics(IMFMediaSource *iface, DWO
./wine-hotfixes/GUY/0018-winegstreamer-Implement-IMFMediaSource-GetCharacteri.patch:18:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/GUY/0018-winegstreamer-Implement-IMFMediaSource-GetCharacteri.patch:24:         return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0018-winegstreamer-Implement-IMFMediaSource-GetCharacteri.patch:27:+    *characteristics = MFMEDIASOURCE_CAN_SEEK;
./wine-hotfixes/GUY/0018-winegstreamer-Implement-IMFMediaSource-GetCharacteri.patch:32: static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *iface, IMFPresentationDescriptor **descriptor)
./wine-hotfixes/GUY/0030-WMV.patch:9: dlls/winegstreamer/mf_decode.c               | 10 +++
./wine-hotfixes/GUY/0030-WMV.patch:10: dlls/winegstreamer/mfplat.c                  | 85 ++++++++++++++++++++
./wine-hotfixes/GUY/0030-WMV.patch:13: include/mfidl.idl                            |  2 +
./wine-hotfixes/GUY/0030-WMV.patch:48:diff --git a/dlls/winegstreamer/mf_decode.c b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0030-WMV.patch:50:--- a/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0030-WMV.patch:51:+++ b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0030-WMV.patch:52:@@ -26,6 +26,9 @@ const GUID *h264_output_types[] = {&MFVideoFormat_I420, &MFVideoFormat_IYUV, &MF
./wine-hotfixes/GUY/0030-WMV.patch:53: const GUID *aac_input_types[] = {&MFAudioFormat_AAC};
./wine-hotfixes/GUY/0030-WMV.patch:54: const GUID *aac_output_types[] = {&MFAudioFormat_Float};
./wine-hotfixes/GUY/0030-WMV.patch:56:+const GUID *wmv_input_types[] = {&MFVideoFormat_WMV3, &MFVideoFormat_WVC1};
./wine-hotfixes/GUY/0030-WMV.patch:57:+const GUID *wmv_output_types[] = {&MFVideoFormat_NV12, &MFVideoFormat_YV12, &MFVideoFormat_YUY2, &MFVideoFormat_UYVY, &MFVideoFormat_YVYU, &MFVideoFormat_NV11, &MFVideoFormat_RGB32, &MFVideoFormat_RGB24, &MFVideoFormat_RGB555, &MFVideoFormat_RGB8};
./wine-hotfixes/GUY/0030-WMV.patch:68:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:76:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0030-WMV.patch:78:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0030-WMV.patch:79:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0030-WMV.patch:103:     { &CLSID_VideoProcessorMFT, &video_processor_create },
./wine-hotfixes/GUY/0030-WMV.patch:104:     { &CLSID_CMSH264DecoderMFT, &h264_decoder_create },
./wine-hotfixes/GUY/0030-WMV.patch:105:     { &CLSID_CMSAACDecMFT, &aac_decoder_create },
./wine-hotfixes/GUY/0030-WMV.patch:111: HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/GUY/0030-WMV.patch:121:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:122:+        &MFVideoFormat_WMV3,
./wine-hotfixes/GUY/0030-WMV.patch:125:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:126:+        &MFVideoFormat_WVC1,
./wine-hotfixes/GUY/0030-WMV.patch:133:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:134:+        &MFVideoFormat_NV12,
./wine-hotfixes/GUY/0030-WMV.patch:137:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:138:+        &MFVideoFormat_YV12,
./wine-hotfixes/GUY/0030-WMV.patch:141:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:142:+        &MFVideoFormat_YUY2,
./wine-hotfixes/GUY/0030-WMV.patch:145:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:146:+        &MFVideoFormat_UYVY,
./wine-hotfixes/GUY/0030-WMV.patch:149:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:150:+        &MFVideoFormat_YVYU,
./wine-hotfixes/GUY/0030-WMV.patch:153:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:154:+        &MFVideoFormat_NV11,
./wine-hotfixes/GUY/0030-WMV.patch:157:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:158:+        &MFVideoFormat_RGB32,
./wine-hotfixes/GUY/0030-WMV.patch:161:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:162:+        &MFVideoFormat_RGB24,
./wine-hotfixes/GUY/0030-WMV.patch:165:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:166:+        &MFVideoFormat_RGB565,
./wine-hotfixes/GUY/0030-WMV.patch:169:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:170:+        &MFVideoFormat_RGB555,
./wine-hotfixes/GUY/0030-WMV.patch:173:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0030-WMV.patch:174:+        &MFVideoFormat_RGB8,
./wine-hotfixes/GUY/0030-WMV.patch:178: static const struct mft
./wine-hotfixes/GUY/0030-WMV.patch:181:@@ -551,6 +625,17 @@ mfts[] =
./wine-hotfixes/GUY/0030-WMV.patch:188:+        &MFT_CATEGORY_VIDEO_DECODER,
./wine-hotfixes/GUY/0030-WMV.patch:190:+        MFT_ENUM_FLAG_SYNCMFT,
./wine-hotfixes/GUY/0030-WMV.patch:233:@@ -73,3 +73,15 @@ coclass CMSH264DecoderMFT { }
./wine-hotfixes/GUY/0030-WMV.patch:236: coclass CMSAACDecMFT { }
./wine-hotfixes/GUY/0030-WMV.patch:250:diff --git a/include/mfidl.idl b/include/mfidl.idl
./wine-hotfixes/GUY/0030-WMV.patch:252:--- a/include/mfidl.idl
./wine-hotfixes/GUY/0030-WMV.patch:253:+++ b/include/mfidl.idl
./wine-hotfixes/GUY/0030-WMV.patch:254:@@ -1131,3 +1131,5 @@ cpp_quote("EXTERN_GUID(CLSID_VideoProcessorMFT, 0x88753b26, 0x5b24, 0x49bd, 0xb2
./wine-hotfixes/GUY/0030-WMV.patch:256: cpp_quote("EXTERN_GUID(CLSID_CMSH264DecoderMFT, 0x62ce7e72, 0x4c71, 0x4d20, 0xb1, 0x5d, 0x45, 0x28, 0x31, 0xa8, 0x7d, 0x9d);")
./wine-hotfixes/GUY/0030-WMV.patch:257: cpp_quote("EXTERN_GUID(CLSID_CMSAACDecMFT, 0x32d186a7, 0x218f, 0x4c75, 0x88, 0x76, 0xdd, 0x77, 0x27, 0x3a, 0x89, 0x99);")
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:4:Subject: [PATCH 22/40] winegstreamer: Introduce IMFMediaType -> GstCaps
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:10: dlls/winegstreamer/mfplat.c      | 142 +++++++++++++++++++++++++++++++
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:17:@@ -57,6 +57,7 @@ extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:19: GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:20: IMFMediaType *mf_media_type_from_caps(GstCaps *caps);
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:21:+GstCaps *caps_from_mf_media_type(IMFMediaType *type);
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:22: IMFSample *mf_sample_from_gst_buffer(GstBuffer *in);
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:25:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:27:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:28:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:29:@@ -873,6 +873,148 @@ GstCaps *make_mf_compatible_caps(GstCaps *caps)
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:33:+GstCaps *caps_from_mf_media_type(IMFMediaType *type)
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:39:+    if (FAILED(IMFMediaType_GetMajorType(type, &major_type)))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:41:+    if (FAILED(IMFMediaType_GetGUID(type, &MF_MT_SUBTYPE, &subtype)))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:44:+    if (IsEqualGUID(&major_type, &MFMediaType_Video))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:50:+        if (FAILED(IMFMediaType_GetUINT64(type, &MF_MT_FRAME_SIZE, &frame_size)))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:54:+        if (FAILED(IMFMediaType_GetUINT64(type, &MF_MT_FRAME_RATE, &frame_rate)))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:67:+        if (SUCCEEDED(MFCalculateImageSize(&subtype, 100, 100, &unused)))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:77:+            if (IsEqualGUID(&subtype, &MFVideoFormat_Base))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:120:+    else if (IsEqualGUID(&major_type, &MFMediaType_Audio))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:124:+        if (IsEqualGUID(&subtype, &MFAudioFormat_Float))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:130:+        else if (IsEqualGUID(&subtype, &MFAudioFormat_PCM))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:134:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_BITS_PER_SAMPLE, &bits_per_sample)))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:159:+        if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_SAMPLES_PER_SECOND, &rate)))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:163:+        if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_NUM_CHANNELS, &channels)))
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:175: /* IMFSample = GstBuffer
./wine-hotfixes/GUY/0022-winegstreamer-Introduce-IMFMediaType-GstCaps-convert.patch:176:    IMFBuffer = GstMemory */
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:8: dlls/winegstreamer/mfplat.c | 118 ++++++++++++++++++++++++++++++++++++
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:11:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:13:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:14:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:16:     {&MFVideoFormat_RGB555,  GST_VIDEO_FORMAT_BGR15},
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:29: static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:31:@@ -691,6 +700,115 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:39:+            IMFMediaType_SetUINT32(media_type, &MF_MT_COMPRESSED, TRUE);
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:54:+                    IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_AAC);
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:81:+                            IMFMediaType_SetUINT32(media_type, &MF_MT_AUDIO_SAMPLES_PER_SECOND, rate);
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:86:+                            IMFMediaType_SetUINT32(media_type, &MF_MT_AUDIO_NUM_CHANNELS, channels);
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:104:+                            IMFMediaType_SetUINT32(media_type, &MF_MT_AAC_PAYLOAD_TYPE, payload_type);
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:132:+                        IMFMediaType_SetUINT32(media_type, &MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION, profile_level_indication);
./wine-hotfixes/GUY/0012-winegstreamer-Translate-AAC-caps-to-attributes.patch:136:+                    IMFMediaType_SetBlob(media_type, &MF_MT_USER_DATA, (BYTE *)user_data, sizeof(user_data) + asc_size);
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:4:Subject: [PATCH 32/40] mf: Miscelaneous fixes to topology resolution.
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:7: dlls/mf/topology.c | 16 +++++++++-------
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:10:diff --git a/dlls/mf/topology.c b/dlls/mf/topology.c
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:12:--- a/dlls/mf/topology.c
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:13:+++ b/dlls/mf/topology.c
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:14:@@ -2006,7 +2006,7 @@ static HRESULT topology_loader_resolve_branch(IMFTopologyNode *src, IMFMediaType
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:15:                         IMFTopologyNode_ConnectOutput(src, 0, node_dec, 0);
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:16:                         IMFTopologyNode_ConnectOutput(node_dec, 0, sink, 0);
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:18:-                        IMFActivate_ShutdownObject(activates_convs[i]);
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:19:+                        IMFActivate_ShutdownObject(activates_decs[i]);
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:27:-        if (SUCCEEDED(topology_loader_resolve_branch(clone_src, src_mediatypes[0], clone_sink, MF_CONNECT_DIRECT)))
./wine-hotfixes/GUY/0032-mf-Miscelaneous-fixes-to-topology-resolution.patch:33:+        for (method = MF_CONNECT_DIRECT; method < MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES; method++)
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:8: dlls/mf/topology.c | 1 +
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:11:diff --git a/dlls/mf/topology.c b/dlls/mf/topology.c
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:13:--- a/dlls/mf/topology.c
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:14:+++ b/dlls/mf/topology.c
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:15:@@ -2005,6 +2005,7 @@ static HRESULT topology_loader_resolve_branch(IMFTopologyNode *src, IMFMediaType
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:16:                         IMFTopologyNode_SetObject(node_dec, (IUnknown *)decoder);
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:17:                         IMFTopologyNode_ConnectOutput(src, 0, node_dec, 0);
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:18:                         IMFTopologyNode_ConnectOutput(node_dec, 0, sink, 0);
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:19:+                        IMFTransform_SetOutputType(decoder, 0, decoder_mtype, 0);
./wine-hotfixes/GUY/0033-HACK-Set-output-type-of-found-decoder-this-should-pr.patch:21:                         IMFActivate_ShutdownObject(activates_decs[i]);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:4:Subject: [PATCH 27/40] winegstreamer: Implement decoder MFT on gstreamer.
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:12: dlls/winegstreamer/mf_decode.c               | 1318 ++++++++++++++++++
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:13: dlls/winegstreamer/mfplat.c                  |  143 +-
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:15: include/mfidl.idl                            |    4 +-
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:17: create mode 100644 dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:27:+	mf_decode.c \
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:28: 	mfplat.c \
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:39:+    else if (cbdata->type < MF_DECODE_MAX)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:40:+        perform_cb_mf_decode(cbdata);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:127:+    MF_DECODE_MAX,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:148:+void perform_cb_mf_decode(struct cb_data *data) DECLSPEC_HIDDEN;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:171:+extern HRESULT mfplat_DllRegisterServer(void) DECLSPEC_HIDDEN;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:172: extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj) DECLSPEC_HIDDEN;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:174: GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:175:@@ -61,6 +62,12 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:176: IMFSample *mf_sample_from_gst_buffer(GstBuffer *in);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:177: GstBuffer *gst_buffer_from_mf_sample(IMFSample *in);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:198:+    return mfplat_DllRegisterServer();
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:202:diff --git a/dlls/winegstreamer/mf_decode.c b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:206:+++ b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:220:+#include "mfapi.h"
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:221:+#include "mferror.h"
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:222:+#include "mfobjects.h"
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:223:+#include "mftransform.h"
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:228:+WINE_DEFAULT_DEBUG_CHANNEL(mfplat);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:230:+const GUID *h264_input_types[] = {&MFVideoFormat_H264};
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:231:+const GUID *h264_output_types[] = {&MFVideoFormat_I420, &MFVideoFormat_IYUV, &MFVideoFormat_NV12, &MFVideoFormat_YUY2, &MFVideoFormat_YV12};
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:233:+const GUID *aac_input_types[] = {&MFAudioFormat_AAC};
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:234:+const GUID *aac_output_types[] = {&MFAudioFormat_Float};
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:246:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:253:+        &MFMediaType_Audio,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:261:+struct mf_decoder
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:263:+    IMFTransform IMFTransform_iface;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:264:+    IMFAsyncCallback process_message_callback;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:268:+    IMFMediaType *input_type, *output_type;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:280:+static struct mf_decoder *impl_mf_decoder_from_IMFTransform(IMFTransform *iface)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:282:+    return CONTAINING_RECORD(iface, struct mf_decoder, IMFTransform_iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:285:+static struct mf_decoder *impl_from_message_callback_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:287:+    return CONTAINING_RECORD(iface, struct mf_decoder, process_message_callback);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:290:+static HRESULT WINAPI mf_decoder_QueryInterface (IMFTransform *iface, REFIID riid, void **out)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:294:+    if (IsEqualIID(riid, &IID_IMFTransform) ||
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:298:+        IMFTransform_AddRef(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:307:+static ULONG WINAPI mf_decoder_AddRef(IMFTransform *iface)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:309:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:317:+static void mf_decoder_destroy(struct mf_decoder *decoder);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:318:+static ULONG WINAPI mf_decoder_Release(IMFTransform *iface)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:320:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:327:+        mf_decoder_destroy(This);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:333:+static HRESULT WINAPI mf_decoder_GetStreamLimits(IMFTransform *iface, DWORD *input_minimum, DWORD *input_maximum,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:343:+static HRESULT WINAPI mf_decoder_GetStreamCount(IMFTransform *iface, DWORD *inputs, DWORD *outputs)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:352:+static HRESULT WINAPI mf_decoder_GetStreamIDs(IMFTransform *iface, DWORD input_size, DWORD *inputs,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:361:+static HRESULT WINAPI mf_decoder_GetInputStreamInfo(IMFTransform *iface, DWORD id, MFT_INPUT_STREAM_INFO *info)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:363:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:368:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:370:+    /* If we create a wrapped GstBuffer, remove MFT_INPUT_STREAM_DOES_NOT_ADDREF */
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:371:+    info->dwFlags = MFT_INPUT_STREAM_WHOLE_SAMPLES | MFT_INPUT_STREAM_DOES_NOT_ADDREF;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:379:+static HRESULT WINAPI mf_decoder_GetOutputStreamInfo(IMFTransform *iface, DWORD id, MFT_OUTPUT_STREAM_INFO *info)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:381:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:382:+    MFT_OUTPUT_STREAM_INFO stream_info = {};
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:387:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:389:+    stream_info.dwFlags = MFT_OUTPUT_STREAM_PROVIDES_SAMPLES;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:398:+static HRESULT WINAPI mf_decoder_GetAttributes(IMFTransform *iface, IMFAttributes **attributes)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:402:+    return MFCreateAttributes(attributes, 0);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:405:+static HRESULT WINAPI mf_decoder_GetInputStreamAttributes(IMFTransform *iface, DWORD id,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:406:+        IMFAttributes **attributes)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:413:+static HRESULT WINAPI mf_decoder_GetOutputStreamAttributes(IMFTransform *iface, DWORD id,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:414:+        IMFAttributes **attributes)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:421:+static HRESULT WINAPI mf_decoder_DeleteInputStream(IMFTransform *iface, DWORD id)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:428:+static HRESULT WINAPI mf_decoder_AddInputStreams(IMFTransform *iface, DWORD streams, DWORD *ids)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:435:+static HRESULT WINAPI mf_decoder_GetInputAvailableType(IMFTransform *iface, DWORD id, DWORD index,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:436:+        IMFMediaType **type)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:438:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:439:+    IMFMediaType *input_type;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:445:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:448:+        return MF_E_NO_MORE_TYPES;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:450:+    if (FAILED(hr = MFCreateMediaType(&input_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:453:+    if (FAILED(hr = IMFMediaType_SetGUID(input_type, &MF_MT_MAJOR_TYPE, decoder_descs[This->type].major_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:455:+        IMFMediaType_Release(input_type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:459:+    if (FAILED(hr = IMFMediaType_SetGUID(input_type, &MF_MT_SUBTYPE, decoder_descs[This->type].input_types[index])))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:461:+        IMFMediaType_Release(input_type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:470:+static void copy_attr(IMFMediaType *target, IMFMediaType *source, const GUID *key)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:474:+    if (SUCCEEDED(IMFAttributes_GetItem((IMFAttributes *)source, key, &val)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:476:+        IMFAttributes_SetItem((IMFAttributes* )target, key, &val);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:480:+static HRESULT WINAPI mf_decoder_GetOutputAvailableType(IMFTransform *iface, DWORD id, DWORD index,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:481:+        IMFMediaType **type)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:483:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:484:+    IMFMediaType *output_type;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:490:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:493:+        return MF_E_TRANSFORM_TYPE_NOT_SET;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:496:+        return MF_E_NO_MORE_TYPES;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:498:+    if (FAILED(hr = MFCreateMediaType(&output_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:501:+    copy_attr(output_type, This->input_type, &MF_MT_MAJOR_TYPE);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:502:+    copy_attr(output_type, This->input_type, &MF_MT_FRAME_SIZE);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:503:+    copy_attr(output_type, This->input_type, &MF_MT_FRAME_RATE);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:504:+    copy_attr(output_type, This->input_type, &MF_MT_AUDIO_NUM_CHANNELS);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:505:+    copy_attr(output_type, This->input_type, &MF_MT_AUDIO_SAMPLES_PER_SECOND);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:507:+    if (FAILED(hr = IMFMediaType_SetGUID(output_type, &MF_MT_MAJOR_TYPE, decoder_descs[This->type].major_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:509:+        IMFMediaType_Release(output_type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:513:+    if (FAILED(hr = IMFMediaType_SetGUID(output_type, &MF_MT_SUBTYPE, decoder_descs[This->type].output_types[index])))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:515:+        IMFMediaType_Release(output_type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:526:+    TRACE("%s mft input pad in %s mode.\n",
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:539:+    struct mf_decoder *This = gst_pad_get_element_private(pad);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:541:+    TRACE("GStreamer queries MFT Input Pad %p for %s\n", This, GST_QUERY_TYPE_NAME(query));
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:547:+            gst_query_set_caps_result(query, caps_from_mf_media_type(This->input_type));
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:575:+            ERR("Unhandled query type %s on MFT Input Pad %p\n", GST_QUERY_TYPE_NAME(query), This);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:583:+    struct mf_decoder *This = (struct mf_decoder *) user;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:687:+static void decoder_update_pipeline(struct mf_decoder *This)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:691:+    MFVideoArea *aperture;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:739:+    input_caps = caps_from_mf_media_type(This->input_type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:742:+        "mf_src",
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:772:+    if (SUCCEEDED(IMFMediaType_GetAllocatedBlob(This->output_type, &MF_MT_MINIMUM_DISPLAY_APERTURE, (UINT8 **) &aperture, &aperture_size)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:779:+        if (SUCCEEDED(IMFMediaType_GetUINT64(This->output_type, &MF_MT_FRAME_SIZE, &frame_size)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:792:+        CoTaskMemFree(aperture);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:803:+    g_object_set(This->appsink, "caps", caps_from_mf_media_type(This->output_type), NULL);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:827:+    gst_pad_push_event(This->input_src, gst_event_new_caps(caps_from_mf_media_type(This->input_type)));
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:841:+static HRESULT WINAPI mf_decoder_SetInputType(IMFTransform *iface, DWORD id, IMFMediaType *type, DWORD flags)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:843:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:849:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:856:+        if (FAILED(hr = IMFMediaType_GetGUID(type, &MF_MT_MAJOR_TYPE, &major_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:858:+        if (FAILED(hr = IMFMediaType_GetGUID(type, &MF_MT_SUBTYPE, &subtype)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:870:+                    if (FAILED(hr = IMFMediaType_GetUINT64(type, &MF_MT_FRAME_SIZE, &unused)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:880:+            return MF_E_INVALIDTYPE;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:883:+    if (flags & MFT_SET_TYPE_TEST_ONLY)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:893:+            if (FAILED(hr = MFCreateMediaType(&This->input_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:896:+        if (FAILED(hr = IMFMediaType_CopyAllItems(type, (IMFAttributes*) This->input_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:901:+        IMFMediaType_Release(This->input_type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:913:+static HRESULT WINAPI mf_decoder_SetOutputType(IMFTransform *iface, DWORD id, IMFMediaType *type, DWORD flags)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:915:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:921:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:932:+            if (FAILED(hr = IMFMediaType_GetGUID(type, &MF_MT_MAJOR_TYPE, &major_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:934:+            if (FAILED(hr = IMFMediaType_GetGUID(type, &MF_MT_SUBTYPE, &subtype)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:942:+                    if (FAILED(hr = IMFMediaType_GetUINT64(type, &MF_MT_FRAME_SIZE, &unused)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:951:+    if (flags & MFT_SET_TYPE_TEST_ONLY)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:960:+            if (FAILED(hr = MFCreateMediaType(&This->output_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:963:+        if (FAILED(hr = IMFMediaType_CopyAllItems(type, (IMFAttributes*) This->output_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:968:+        IMFMediaType_Release(This->output_type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:980:+static HRESULT WINAPI mf_decoder_GetInputCurrentType(IMFTransform *iface, DWORD id, IMFMediaType **type)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:987:+static HRESULT WINAPI mf_decoder_GetOutputCurrentType(IMFTransform *iface, DWORD id, IMFMediaType **type)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:994:+static HRESULT WINAPI mf_decoder_GetInputStatus(IMFTransform *iface, DWORD id, DWORD *flags)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:996:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1000:+    *flags = This->output_counter ? MFT_INPUT_STATUS_ACCEPT_DATA : 0;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1005:+static HRESULT WINAPI mf_decoder_GetOutputStatus(IMFTransform *iface, DWORD *flags)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1007:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1011:+    *flags = This->output_counter ? MFT_OUTPUT_STATUS_SAMPLE_READY : 0;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1016:+static HRESULT WINAPI mf_decoder_SetOutputBounds(IMFTransform *iface, LONGLONG lower, LONGLONG upper)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1023:+static HRESULT WINAPI mf_decoder_ProcessEvent(IMFTransform *iface, DWORD id, IMFMediaEvent *event)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1030:+static HRESULT WINAPI decoder_process_message_callback_QueryInterface(IMFAsyncCallback *iface,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1035:+    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1039:+        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1048:+static ULONG WINAPI decoder_process_message_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1050:+    struct mf_decoder *decoder = impl_from_message_callback_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1051:+    return IMFTransform_AddRef(&decoder->IMFTransform_iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1054:+static ULONG WINAPI decoder_process_message_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1056:+    struct mf_decoder *decoder = impl_from_message_callback_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1057:+    return IMFTransform_Release(&decoder->IMFTransform_iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1060:+static HRESULT WINAPI decoder_process_message_callback_GetParameters(IMFAsyncCallback *iface,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1066:+const GUID WINE_MFT_MESSAGE_TYPE = {0xd09998bf, 0x102f, 0x4efa, {0x8f,0x84,0x06,0x1f,0xa4,0x10,0xf2,0x64}};
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1068:+static HRESULT WINAPI decoder_process_message_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1070:+    struct mf_decoder *This = impl_from_message_callback_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1072:+    IMFAttributes *async_param;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1073:+    MFT_MESSAGE_TYPE message_type;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1076:+    state = IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1079:+    if (FAILED(hr = IUnknown_QueryInterface(state, &IID_IMFAttributes, (void **)&async_param)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1081:+    if (FAILED(hr = IMFAttributes_GetUINT32(async_param, &WINE_MFT_MESSAGE_TYPE, &message_type)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1083:+        IMFAttributes_Release(async_param);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1086:+    IMFAttributes_Release(async_param);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1090:+        case MFT_MESSAGE_COMMAND_DRAIN:
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1114:+static const IMFAsyncCallbackVtbl process_message_callback_vtbl =
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1123:+static HRESULT WINAPI mf_decoder_ProcessMessage(IMFTransform *iface, MFT_MESSAGE_TYPE message, ULONG_PTR param)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1125:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1126:+    IMFAttributes *async_param;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1131:+    if (FAILED(hr = MFCreateAttributes(&async_param, 1)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1136:+        case MFT_MESSAGE_COMMAND_FLUSH:
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1163:+        case MFT_MESSAGE_COMMAND_DRAIN:
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1171:+            IMFAttributes_SetUINT32(async_param, &WINE_MFT_MESSAGE_TYPE, message);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1174:+            MFPutWorkItem(MF_MULTITHREADED_WORKQUEUE, &This->process_message_callback, (IUnknown *)async_param);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1182:+        case MFT_MESSAGE_NOTIFY_BEGIN_STREAMING:
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1195:+    IMFAttributes_Release(async_param);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1199:+static HRESULT WINAPI mf_decoder_ProcessInput(IMFTransform *iface, DWORD id, IMFSample *sample, DWORD flags)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1201:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1213:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1216:+        return MF_E_TRANSFORM_TYPE_NOT_SET;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1225:+        hr = MF_E_NOTACCEPTING;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1229:+    if (!(gst_buffer = gst_buffer_from_mf_sample(sample)))
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1248:+static HRESULT WINAPI mf_decoder_ProcessOutput(IMFTransform *iface, DWORD flags, DWORD count,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1249:+        MFT_OUTPUT_DATA_BUFFER *samples, DWORD *status)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1251:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1252:+    MFT_OUTPUT_DATA_BUFFER *relevant_buffer = NULL;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1263:+        return MF_E_TRANSFORM_TYPE_NOT_SET;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1267:+        MFT_OUTPUT_DATA_BUFFER *out_buffer = &samples[i];
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1270:+            return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1273:+            return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1286:+        return MF_E_TRANSFORM_NEED_MORE_INPUT;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1297:+        return MF_E_TRANSFORM_NEED_MORE_INPUT;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1303:+    relevant_buffer->pSample = mf_sample_from_gst_buffer(gst_sample_get_buffer(buffer));
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1311:+static const IMFTransformVtbl mf_decoder_vtbl =
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1313:+    mf_decoder_QueryInterface,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1314:+    mf_decoder_AddRef,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1315:+    mf_decoder_Release,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1316:+    mf_decoder_GetStreamLimits,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1317:+    mf_decoder_GetStreamCount,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1318:+    mf_decoder_GetStreamIDs,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1319:+    mf_decoder_GetInputStreamInfo,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1320:+    mf_decoder_GetOutputStreamInfo,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1321:+    mf_decoder_GetAttributes,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1322:+    mf_decoder_GetInputStreamAttributes,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1323:+    mf_decoder_GetOutputStreamAttributes,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1324:+    mf_decoder_DeleteInputStream,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1325:+    mf_decoder_AddInputStreams,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1326:+    mf_decoder_GetInputAvailableType,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1327:+    mf_decoder_GetOutputAvailableType,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1328:+    mf_decoder_SetInputType,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1329:+    mf_decoder_SetOutputType,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1330:+    mf_decoder_GetInputCurrentType,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1331:+    mf_decoder_GetOutputCurrentType,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1332:+    mf_decoder_GetInputStatus,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1333:+    mf_decoder_GetOutputStatus,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1334:+    mf_decoder_SetOutputBounds,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1335:+    mf_decoder_ProcessEvent,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1336:+    mf_decoder_ProcessMessage,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1337:+    mf_decoder_ProcessInput,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1338:+    mf_decoder_ProcessOutput,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1343:+    struct mf_decoder *This = user_data;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1374:+static void mf_decoder_destroy(struct mf_decoder *This)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1378:+        IMFMediaType_Release(This->input_type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1384:+        IMFMediaType_Release(This->output_type);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1406:+    struct mf_decoder *This;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1415:+    This->video = decoder_descs[type].major_type == &MFMediaType_Video;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1479:+    This->IMFTransform_iface.lpVtbl = &mf_decoder_vtbl;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1486:+    ERR("Failed to create Decoder MFT type %u, hr = %#x\n", type, hr);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1487:+    mf_decoder_destroy(This);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1491:+void perform_cb_mf_decode(struct cb_data *cbdata)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1527:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1529:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1530:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1551:     { &CLSID_VideoProcessorMFT, &video_processor_create },
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1552:+    { &CLSID_CMSH264DecoderMFT, &h264_decoder_create },
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1553:+    { &CLSID_CMSAACDecMFT, &aac_decoder_create },
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1557:@@ -449,6 +461,136 @@ HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1571:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1572:+        &MFVideoFormat_H264
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1578:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1579:+        &MFVideoFormat_I420
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1582:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1583:+        &MFVideoFormat_IYUV
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1586:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1587:+        &MFVideoFormat_NV12
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1590:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1591:+        &MFVideoFormat_YUY2,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1594:+        &MFMediaType_Video,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1595:+        &MFVideoFormat_YV12,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1603:+        &MFMediaType_Audio,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1604:+        &MFAudioFormat_AAC
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1611:+        &MFMediaType_Audio,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1612:+        &MFAudioFormat_Float
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1616:+static const struct mft
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1626:+    IMFAttributes *attributes;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1628:+mfts[] =
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1631:+        &CLSID_CMSH264DecoderMFT,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1632:+        &MFT_CATEGORY_VIDEO_DECODER,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1634:+        MFT_ENUM_FLAG_SYNCMFT,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1642:+        &CLSID_CMSAACDecMFT,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1643:+        &MFT_CATEGORY_AUDIO_DECODER,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1645:+        MFT_ENUM_FLAG_SYNCMFT,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1654:+HRESULT mfplat_DllRegisterServer(void)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1658:+    for (unsigned int i = 0; i < ARRAY_SIZE(mfts); i++)
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1660:+        const struct mft *cur = &mfts[i];
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1662:+        MFT_REGISTER_TYPE_INFO *input_types, *output_types;
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1676:+        hr = MFTRegister(*(cur->clsid), *(cur->category), cur->name, cur->flags, cur->input_types_count,
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1684:+            FIXME("Failed to register MFT, hr %#x\n", hr);
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1706:@@ -61,3 +61,15 @@ coclass VideoProcessorMFT {}
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1715:+coclass CMSH264DecoderMFT { }
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1721:+coclass CMSAACDecMFT { }
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1722:diff --git a/include/mfidl.idl b/include/mfidl.idl
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1724:--- a/include/mfidl.idl
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1725:+++ b/include/mfidl.idl
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1726:@@ -1128,4 +1128,6 @@ cpp_quote("EXTERN_GUID(MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ROLE, 0x6ba644ff, 0x
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1727: cpp_quote("EXTERN_GUID(MF_AUDIO_RENDERER_ATTRIBUTE_STREAM_CATEGORY, 0xa9770471, 0x92ec, 0x4df4, 0x94, 0xfe, 0x81, 0xc3, 0x6f, 0x0c, 0x3a, 0x7a);")
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1729: cpp_quote("EXTERN_GUID(CLSID_VideoProcessorMFT, 0x88753b26, 0x5b24, 0x49bd, 0xb2, 0xe7, 0xc, 0x44, 0x5c, 0x78, 0xc9, 0x82);")
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1733:+cpp_quote("EXTERN_GUID(CLSID_CMSH264DecoderMFT, 0x62ce7e72, 0x4c71, 0x4d20, 0xb1, 0x5d, 0x45, 0x28, 0x31, 0xa8, 0x7d, 0x9d);")
./wine-hotfixes/GUY/0027-winegstreamer-Implement-decoder-MFT-on-gstreamer.patch:1734:+cpp_quote("EXTERN_GUID(CLSID_CMSAACDecMFT, 0x32d186a7, 0x218f, 0x4c75, 0x88, 0x76, 0xdd, 0x77, 0x27, 0x3a, 0x89, 0x99);")
./wine-hotfixes/GUY/0034-winegstreamer-Implement-IMFMedisStream-GetMediaSourc.patch:5: IMFMedisStream::GetMediaSource.
./wine-hotfixes/GUY/0034-winegstreamer-Implement-IMFMedisStream-GetMediaSourc.patch:15:@@ -852,12 +852,15 @@ static HRESULT WINAPI media_stream_GetMediaSource(IMFMediaStream *iface, IMFMedi
./wine-hotfixes/GUY/0034-winegstreamer-Implement-IMFMedisStream-GetMediaSourc.patch:17:     struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/GUY/0034-winegstreamer-Implement-IMFMedisStream-GetMediaSourc.patch:23:         return MF_E_SHUTDOWN;
./wine-hotfixes/GUY/0034-winegstreamer-Implement-IMFMedisStream-GetMediaSourc.patch:26:+    IMFMediaSource_AddRef(&stream->parent_source->IMFMediaSource_iface);
./wine-hotfixes/GUY/0034-winegstreamer-Implement-IMFMedisStream-GetMediaSourc.patch:27:+    *source = &stream->parent_source->IMFMediaSource_iface;
./wine-hotfixes/GUY/0034-winegstreamer-Implement-IMFMedisStream-GetMediaSourc.patch:32: static HRESULT WINAPI media_stream_GetStreamDescriptor(IMFMediaStream* iface, IMFStreamDescriptor **descriptor)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:4:Subject: [PATCH 21/40] mf: Introduce handler helper.
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:8: dlls/mf/Makefile.in               |   1 +
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:9: dlls/mf/handler.c                 | 360 ++++++++++++++++++++++++++++
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:10: dlls/mf/handler.h                 |  30 +++
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:11: dlls/mf/main.c                    | 373 ++++--------------------------
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:15: create mode 100644 dlls/mf/handler.c
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:16: create mode 100644 dlls/mf/handler.h
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:18:diff --git a/dlls/mf/Makefile.in b/dlls/mf/Makefile.in
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:20:--- a/dlls/mf/Makefile.in
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:21:+++ b/dlls/mf/Makefile.in
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:22:@@ -5,6 +5,7 @@ IMPORTS   = advapi32 mfplat ole32 uuid mfuuid
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:30:diff --git a/dlls/mf/handler.c b/dlls/mf/handler.c
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:34:+++ b/dlls/mf/handler.c
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:42:+#include "mfidl.h"
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:44:+#include "mfapi.h"
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:45:+#include "mferror.h"
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:53:+WINE_DEFAULT_DEBUG_CHANNEL(mfplat);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:61:+    IMFByteStream *stream;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:69:+    IMFAsyncResult *result;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:70:+    MF_OBJECT_TYPE obj_type;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:117:+            IMFByteStream_Release(context->stream);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:134:+static struct handler *impl_from_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:136:+    return CONTAINING_RECORD(iface, struct handler, IMFAsyncCallback_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:139:+static HRESULT WINAPI handler_callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:141:+    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:145:+        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:155:+static ULONG WINAPI handler_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:160:+static ULONG WINAPI handler_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:165:+static HRESULT WINAPI handler_callback_GetParameters(IMFAsyncCallback *iface, DWORD *flags, DWORD *queue)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:170:+static HRESULT WINAPI handler_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:172:+    struct handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:174:+    MF_OBJECT_TYPE obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:177:+    IMFAsyncResult *caller;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:180:+    caller = (IMFAsyncResult *)IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:182:+    if (FAILED(hr = IMFAsyncResult_GetObject(result, &context_object)))
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:196:+        IMFAsyncResult_AddRef(handler_result->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:213:+    IMFAsyncResult_SetStatus(caller, hr);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:214:+    MFInvokeCallback(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:219:+static const IMFAsyncCallbackVtbl handler_callback_vtbl =
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:247:+HRESULT handler_begin_create_object(struct handler *handler, IMFByteStream *stream,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:249:+        IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:252:+    IMFAsyncResult *caller, *item;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:258:+    if (FAILED(hr = MFCreateAsyncResult(NULL, callback, state, &caller)))
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:264:+        IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:276:+        IMFByteStream_AddRef(context->stream);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:281:+        IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:286:+    hr = MFCreateAsyncResult(&context->IUnknown_iface, &handler->IMFAsyncCallback_iface, (IUnknown *)caller, &item);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:290:+        if (SUCCEEDED(hr = MFPutWorkItemEx(MFASYNC_CALLBACK_QUEUE_IO, item)))
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:299:+        IMFAsyncResult_Release(item);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:301:+    IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:306:+HRESULT handler_end_create_object(struct handler *handler, IMFAsyncResult *result,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:307:+        MF_OBJECT_TYPE *obj_type, IUnknown **object)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:330:+        hr = IMFAsyncResult_GetStatus(found->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:331:+        IMFAsyncResult_Release(found->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:336:+        *obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:338:+        hr = MF_E_UNEXPECTED;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:364:+        IMFAsyncResult_Release(found->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:370:+    return found ? S_OK : MF_E_UNEXPECTED;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:375:+    handler->IMFAsyncCallback_iface.lpVtbl = &handler_callback_vtbl;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:389:+        IMFAsyncResult_Release(result->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:397:diff --git a/dlls/mf/handler.h b/dlls/mf/handler.h
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:401:+++ b/dlls/mf/handler.h
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:405:+#include "mfidl.h"
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:406:+#include "mfapi.h"
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:407:+#include "mfobjects.h"
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:414:+typedef HRESULT (*p_create_object_callback)(struct handler *handler, WCHAR *url, IMFByteStream *stream, DWORD flags, IPropertyStore *props,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:415:+                                            IUnknown **out_object, MF_OBJECT_TYPE *out_obj_type);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:419:+    IMFAsyncCallback IMFAsyncCallback_iface;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:427:+HRESULT handler_begin_create_object(struct handler *handler, IMFByteStream *stream,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:429:+        IMFAsyncCallback *callback, IUnknown *state);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:430:+HRESULT handler_end_create_object(struct handler *handler, IMFAsyncResult *result,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:431:+        MF_OBJECT_TYPE *obj_type, IUnknown **object);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:434:diff --git a/dlls/mf/main.c b/dlls/mf/main.c
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:436:--- a/dlls/mf/main.c
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:437:+++ b/dlls/mf/main.c
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:439: #include "mferror.h"
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:441: #include "mf_private.h"
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:453:-    IMFAsyncResult *result;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:454:-    MF_OBJECT_TYPE obj_type;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:460:     IMFSchemeHandler IMFSchemeHandler_iface;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:461:-    IMFAsyncCallback IMFAsyncCallback_iface;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:463:     IMFSourceResolver *resolver;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:469: static struct file_scheme_handler *impl_from_IMFSchemeHandler(IMFSchemeHandler *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:470:@@ -579,11 +570,6 @@ static struct file_scheme_handler *impl_from_IMFSchemeHandler(IMFSchemeHandler *
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:471:     return CONTAINING_RECORD(iface, struct file_scheme_handler, IMFSchemeHandler_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:474:-static struct file_scheme_handler *impl_from_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:476:-    return CONTAINING_RECORD(iface, struct file_scheme_handler, IMFAsyncCallback_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:479: static HRESULT WINAPI file_scheme_handler_QueryInterface(IMFSchemeHandler *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:482:@@ -613,242 +599,45 @@ static ULONG WINAPI file_scheme_handler_AddRef(IMFSchemeHandler *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:484: static ULONG WINAPI file_scheme_handler_Release(IMFSchemeHandler *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:486:-    struct file_scheme_handler *handler = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:489:+    struct file_scheme_handler *this = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:499:-            IMFAsyncResult_Release(result->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:506:-            IMFSourceResolver_Release(handler->resolver);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:509:+            IMFSourceResolver_Release(this->resolver);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:599: static HRESULT WINAPI file_scheme_handler_BeginCreateObject(IMFSchemeHandler *iface, const WCHAR *url, DWORD flags,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:600:         IPropertyStore *props, IUnknown **cancel_cookie, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:602:-    struct file_scheme_handler *handler = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:604:-    IMFAsyncResult *caller, *item;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:606:+    struct file_scheme_handler *this = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:613:-    if (FAILED(hr = MFCreateAsyncResult(NULL, callback, state, &caller)))
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:619:-        IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:632:-        IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:637:-    hr = MFCreateAsyncResult(&context->IUnknown_iface, &handler->IMFAsyncCallback_iface, (IUnknown *)caller, &item);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:641:-        if (SUCCEEDED(hr = MFPutWorkItemEx(MFASYNC_CALLBACK_QUEUE_IO, item)))
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:650:-        IMFAsyncResult_Release(item);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:652:-    IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:658: static HRESULT WINAPI file_scheme_handler_EndCreateObject(IMFSchemeHandler *iface, IMFAsyncResult *result,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:659:         MF_OBJECT_TYPE *obj_type, IUnknown **object)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:661:-    struct file_scheme_handler *handler = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:664:+    struct file_scheme_handler *this = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:686:-        hr = IMFAsyncResult_GetStatus(found->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:687:-        IMFAsyncResult_Release(found->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:692:-        *obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:694:-        hr = MF_E_UNEXPECTED;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:701: static HRESULT WINAPI file_scheme_handler_CancelObjectCreation(IMFSchemeHandler *iface, IUnknown *cancel_cookie)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:703:-    struct file_scheme_handler *handler = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:705:+    struct file_scheme_handler *this = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:725:-        IMFAsyncResult_Release(found->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:731:-    return found ? S_OK : MF_E_UNEXPECTED;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:735: static const IMFSchemeHandlerVtbl file_scheme_handler_vtbl =
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:736:@@ -861,38 +650,6 @@ static const IMFSchemeHandlerVtbl file_scheme_handler_vtbl =
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:740:-static HRESULT WINAPI file_scheme_handler_callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:742:-    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:746:-        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:755:-static ULONG WINAPI file_scheme_handler_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:757:-    struct file_scheme_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:758:-    return IMFSchemeHandler_AddRef(&handler->IMFSchemeHandler_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:761:-static ULONG WINAPI file_scheme_handler_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:763:-    struct file_scheme_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:764:-    return IMFSchemeHandler_Release(&handler->IMFSchemeHandler_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:767:-static HRESULT WINAPI file_scheme_handler_callback_GetParameters(IMFAsyncCallback *iface, DWORD *flags, DWORD *queue)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:772: static HRESULT file_scheme_handler_get_resolver(struct file_scheme_handler *handler, IMFSourceResolver **resolver)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:779:-static HRESULT WINAPI file_scheme_handler_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:780:+static HRESULT file_scheme_handler_create_object(struct handler *handler, WCHAR *url, IMFByteStream *stream, DWORD flags,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:781:+                                         IPropertyStore *props, IUnknown **out_object, MF_OBJECT_TYPE *out_obj_type)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:784:-    struct file_scheme_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:786:-    MF_OBJECT_TYPE obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:791:+    IMFByteStream *file_byte_stream;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:793:     IMFSourceResolver *resolver;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:794:-    IMFAsyncResult *caller;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:795:-    IMFByteStream *stream;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:799:-    caller = (IMFAsyncResult *)IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:801:-    if (FAILED(hr = IMFAsyncResult_GetObject(result, &context_object)))
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:809:     /* Strip from scheme, MFCreateFile() won't be expecting it. */
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:817:-    hr = MFCreateFile(context->flags & MF_RESOLUTION_WRITE ? MF_ACCESSMODE_READWRITE : MF_ACCESSMODE_READ,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:818:-            MF_OPENMODE_FAIL_IF_NOT_EXIST, MF_FILEFLAGS_NONE, url, &stream);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:819:+    hr = MFCreateFile(flags & MF_RESOLUTION_WRITE ? MF_ACCESSMODE_READWRITE : MF_ACCESSMODE_READ,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:820:+            MF_OPENMODE_FAIL_IF_NOT_EXIST, MF_FILEFLAGS_NONE, path, &file_byte_stream);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:823:-        if (context->flags & MF_RESOLUTION_MEDIASOURCE)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:824:+        if (flags & MF_RESOLUTION_MEDIASOURCE)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:829:-                hr = IMFSourceResolver_CreateObjectFromByteStream(resolver, stream, context->url, context->flags,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:831:+                hr = IMFSourceResolver_CreateObjectFromByteStream(resolver, file_byte_stream, url, flags,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:833:                 IMFSourceResolver_Release(resolver);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:834:-                IMFByteStream_Release(stream);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:835:+                IMFByteStream_Release(file_byte_stream);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:841:-            obj_type = MF_OBJECT_BYTESTREAM;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:843:+            *out_obj_type = MF_OBJECT_BYTESTREAM;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:851:-        IMFAsyncResult_AddRef(handler_result->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:868:-    IMFAsyncResult_SetStatus(caller, hr);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:869:-    MFInvokeCallback(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:875:-static const IMFAsyncCallbackVtbl file_scheme_handler_callback_vtbl =
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:898:-    handler->IMFSchemeHandler_iface.lpVtbl = &file_scheme_handler_vtbl;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:899:-    handler->IMFAsyncCallback_iface.lpVtbl = &file_scheme_handler_callback_vtbl;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:905:+    this->IMFSchemeHandler_iface.lpVtbl = &file_scheme_handler_vtbl;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:908:-    hr = IMFSchemeHandler_QueryInterface(&handler->IMFSchemeHandler_iface, riid, obj);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:909:-    IMFSchemeHandler_Release(&handler->IMFSchemeHandler_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:910:+    hr = IMFSchemeHandler_QueryInterface(&this->IMFSchemeHandler_iface, riid, obj);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:911:+    IMFSchemeHandler_Release(&this->IMFSchemeHandler_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:919:@@ -3,12 +3,13 @@ IMPORTS   = strmiids uuid ole32 mfuuid
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:920: DELAYIMPORTS = mfplat
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:924:+PARENTSRC = ../strmbase ../mf
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:946:@@ -1496,22 +1497,12 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:948: /* IMFByteStreamHandler */
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:953:-    IMFAsyncResult *result;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:954:-    MF_OBJECT_TYPE obj_type;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:960:     IMFByteStreamHandler IMFByteStreamHandler_iface;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:961:-    IMFAsyncCallback IMFAsyncCallback_iface;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:969: static struct container_stream_handler *impl_from_IMFByteStreamHandler(IMFByteStreamHandler *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:970:@@ -1519,11 +1510,6 @@ static struct container_stream_handler *impl_from_IMFByteStreamHandler(IMFByteSt
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:971:     return CONTAINING_RECORD(iface, struct container_stream_handler, IMFByteStreamHandler_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:974:-static struct container_stream_handler *impl_from_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:976:-    return CONTAINING_RECORD(iface, struct container_stream_handler, IMFAsyncCallback_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:979: static HRESULT WINAPI container_stream_handler_QueryInterface(IMFByteStreamHandler *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:982:@@ -1553,248 +1539,44 @@ static ULONG WINAPI container_stream_handler_AddRef(IMFByteStreamHandler *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:984: static ULONG WINAPI container_stream_handler_Release(IMFByteStreamHandler *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:986:-    struct container_stream_handler *handler = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:997:-            IMFAsyncResult_Release(result->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1015:-    IMFByteStream *stream;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1055:+    struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1065:-            IMFByteStream_Release(context->stream);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1100: static HRESULT WINAPI container_stream_handler_BeginCreateObject(IMFByteStreamHandler *iface, IMFByteStream *stream, const WCHAR *url, DWORD flags,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1101:         IPropertyStore *props, IUnknown **cancel_cookie, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1103:     struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1105:-    IMFAsyncResult *caller, *item;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1113:-    if (FAILED(hr = MFCreateAsyncResult(NULL, callback, state, &caller)))
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1119:-        IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1131:-        IMFByteStream_AddRef(context->stream);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1136:-        IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1141:-    hr = MFCreateAsyncResult(&context->IUnknown_iface, &this->IMFAsyncCallback_iface, (IUnknown *)caller, &item);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1145:-        if (SUCCEEDED(hr = MFPutWorkItemEx(MFASYNC_CALLBACK_QUEUE_IO, item)))
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1154:-        IMFAsyncResult_Release(item);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1156:-    IMFAsyncResult_Release(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1162: static HRESULT WINAPI container_stream_handler_EndCreateObject(IMFByteStreamHandler *iface, IMFAsyncResult *result,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1163:         MF_OBJECT_TYPE *obj_type, IUnknown **object)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1165:     struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1189:-        hr = IMFAsyncResult_GetStatus(found->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1190:-        IMFAsyncResult_Release(found->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1195:-        *obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1197:-        hr = MF_E_UNEXPECTED;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1204: static HRESULT WINAPI container_stream_handler_CancelObjectCreation(IMFByteStreamHandler *iface, IUnknown *cancel_cookie)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1206:     struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1227:-        IMFAsyncResult_Release(found->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1233:-    return found ? S_OK : MF_E_UNEXPECTED;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1237: static HRESULT WINAPI container_stream_handler_GetMaxNumberOfBytesRequiredForResolution(IMFByteStreamHandler *iface, QWORD *bytes)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1238:@@ -1814,47 +1596,16 @@ static const IMFByteStreamHandlerVtbl container_stream_handler_vtbl =
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1242:-static HRESULT WINAPI container_stream_handler_callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1244:-    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1248:-        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1257:-static ULONG WINAPI container_stream_handler_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1259:-    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1260:-    return IMFByteStreamHandler_AddRef(&handler->IMFByteStreamHandler_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1263:-static ULONG WINAPI container_stream_handler_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1265:-    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1266:-    return IMFByteStreamHandler_Release(&handler->IMFByteStreamHandler_iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1269:-static HRESULT WINAPI container_stream_handler_callback_GetParameters(IMFAsyncCallback *iface, DWORD *flags, DWORD *queue)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1274:-static HRESULT container_stream_handler_create_object(struct container_stream_handler *This, WCHAR *url, IMFByteStream *stream, DWORD flags,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1275:+static HRESULT container_stream_handler_create_object(struct handler *handler, WCHAR *url, IMFByteStream *stream, DWORD flags,
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1276:                                             IPropertyStore *props, IUnknown **out_object, MF_OBJECT_TYPE *out_obj_type)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1281:     if (flags & MF_RESOLUTION_MEDIASOURCE)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1293:-static HRESULT WINAPI container_stream_handler_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1295:-    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1297:-    MF_OBJECT_TYPE obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1300:-    IMFAsyncResult *caller;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1303:-    caller = (IMFAsyncResult *)IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1305:-    if (FAILED(hr = IMFAsyncResult_GetObject(result, &context_object)))
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1319:-        IMFAsyncResult_AddRef(handler_result->result);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1336:-    IMFAsyncResult_SetStatus(caller, hr);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1337:-    MFInvokeCallback(caller);
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1342:-static const IMFAsyncCallbackVtbl container_stream_handler_callback_vtbl =
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1363:     this->IMFByteStreamHandler_iface.lpVtbl = &container_stream_handler_vtbl;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1364:-    this->IMFAsyncCallback_iface.lpVtbl = &container_stream_handler_callback_vtbl;
./wine-hotfixes/GUY/0021-mf-Introduce-handler-helper.patch:1367:     hr = IMFByteStreamHandler_QueryInterface(&this->IMFByteStreamHandler_iface, riid, obj);
./wine-hotfixes/media_foundation_alpha.patch:5:Subject: [PATCH 01/40] mf/tests: Sink objects are stream sinks, not media
./wine-hotfixes/media_foundation_alpha.patch:13: dlls/mf/tests/mf.c | 7 +++++--
./wine-hotfixes/media_foundation_alpha.patch:16:diff --git a/dlls/mf/tests/mf.c b/dlls/mf/tests/mf.c
./wine-hotfixes/media_foundation_alpha.patch:18:--- a/dlls/mf/tests/mf.c
./wine-hotfixes/media_foundation_alpha.patch:19:+++ b/dlls/mf/tests/mf.c
./wine-hotfixes/media_foundation_alpha.patch:21:     IMFPresentationDescriptor *pd;
./wine-hotfixes/media_foundation_alpha.patch:22:     IMFSourceResolver *resolver;
./wine-hotfixes/media_foundation_alpha.patch:23:     IMFActivate *sink_activate;
./wine-hotfixes/media_foundation_alpha.patch:24:+    IMFStreamSink *stream_sink;
./wine-hotfixes/media_foundation_alpha.patch:26:     IMFMediaType *media_type;
./wine-hotfixes/media_foundation_alpha.patch:27:     IMFStreamDescriptor *sd;
./wine-hotfixes/media_foundation_alpha.patch:29:     hr = IMFActivate_ActivateObject(sink_activate, &IID_IMFMediaSink, (void **)&sink);
./wine-hotfixes/media_foundation_alpha.patch:32:-    hr = IMFTopologyNode_SetObject(sink_node, (IUnknown *)sink);
./wine-hotfixes/media_foundation_alpha.patch:33:+    hr = IMFMediaSink_GetStreamSinkByIndex(sink, 0, &stream_sink);
./wine-hotfixes/media_foundation_alpha.patch:36:+    hr = IMFTopologyNode_SetObject(sink_node, (IUnknown *)stream_sink);
./wine-hotfixes/media_foundation_alpha.patch:39:     hr = IMFTopology_GetCount(topology, &count);
./wine-hotfixes/media_foundation_alpha.patch:43:     hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:55:Subject: [PATCH 02/40] mf/tests: Add tests for the topology loader.
./wine-hotfixes/media_foundation_alpha.patch:62: dlls/mf/tests/mf.c | 435 ++++++++++++++++++++++++++++++++++++++++++++-
./wine-hotfixes/media_foundation_alpha.patch:65:diff --git a/dlls/mf/tests/mf.c b/dlls/mf/tests/mf.c
./wine-hotfixes/media_foundation_alpha.patch:67:--- a/dlls/mf/tests/mf.c
./wine-hotfixes/media_foundation_alpha.patch:68:+++ b/dlls/mf/tests/mf.c
./wine-hotfixes/media_foundation_alpha.patch:69:@@ -1303,26 +1303,169 @@ static const IMFSampleGrabberSinkCallbackVtbl test_grabber_callback_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:73:+static HRESULT WINAPI test_media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/media_foundation_alpha.patch:75:+    if (IsEqualIID(riid, &IID_IMFMediaSource) ||
./wine-hotfixes/media_foundation_alpha.patch:76:+        IsEqualIID(riid, &IID_IMFMediaEventGenerator) ||
./wine-hotfixes/media_foundation_alpha.patch:88:+static ULONG WINAPI test_media_source_AddRef(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:93:+static ULONG WINAPI test_media_source_Release(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:98:+static HRESULT WINAPI test_media_source_GetEvent(IMFMediaSource *iface, DWORD flags, IMFMediaEvent **event)
./wine-hotfixes/media_foundation_alpha.patch:103:+static HRESULT WINAPI test_media_source_BeginGetEvent(IMFMediaSource *iface, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/media_foundation_alpha.patch:108:+static HRESULT WINAPI test_media_source_EndGetEvent(IMFMediaSource *iface, IMFAsyncResult *result, IMFMediaEvent **event)
./wine-hotfixes/media_foundation_alpha.patch:113:+static HRESULT WINAPI test_media_source_QueueEvent(IMFMediaSource *iface, MediaEventType event_type, REFGUID ext_type,
./wine-hotfixes/media_foundation_alpha.patch:119:+static HRESULT WINAPI test_media_source_GetCharacteristics(IMFMediaSource *iface, DWORD *characteristics)
./wine-hotfixes/media_foundation_alpha.patch:124:+static HRESULT WINAPI test_media_source_CreatePresentationDescriptor(IMFMediaSource *iface, IMFPresentationDescriptor **descriptor)
./wine-hotfixes/media_foundation_alpha.patch:128:+    IMFPresentationDescriptor *pd;
./wine-hotfixes/media_foundation_alpha.patch:129:+    IMFMediaType *mediatypes[3];
./wine-hotfixes/media_foundation_alpha.patch:130:+    IMFStreamDescriptor *sd[2];
./wine-hotfixes/media_foundation_alpha.patch:132:+    if (FAILED(hr = MFCreateMediaType(&mediatypes[0])))
./wine-hotfixes/media_foundation_alpha.patch:134:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[0], &MF_MT_MAJOR_TYPE, &MFMediaType_Video)))
./wine-hotfixes/media_foundation_alpha.patch:136:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[0], &MF_MT_SUBTYPE, &MFVideoFormat_YUY2)))
./wine-hotfixes/media_foundation_alpha.patch:138:+    if (FAILED(hr = MFCreateMediaType(&mediatypes[1])))
./wine-hotfixes/media_foundation_alpha.patch:140:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[1], &MF_MT_MAJOR_TYPE, &MFMediaType_Audio)))
./wine-hotfixes/media_foundation_alpha.patch:142:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[1], &MF_MT_SUBTYPE, &MFAudioFormat_MP3)))
./wine-hotfixes/media_foundation_alpha.patch:144:+    if (FAILED(hr = IMFMediaType_SetUINT32(mediatypes[1], &MF_MT_AUDIO_SAMPLES_PER_SECOND, 32000)))
./wine-hotfixes/media_foundation_alpha.patch:146:+    if (FAILED(hr = IMFMediaType_SetUINT32(mediatypes[1], &MF_MT_AUDIO_NUM_CHANNELS, 2)))
./wine-hotfixes/media_foundation_alpha.patch:148:+    if (FAILED(hr = IMFMediaType_SetUINT32(mediatypes[1], &MF_MT_AUDIO_PREFER_WAVEFORMATEX, 1)))
./wine-hotfixes/media_foundation_alpha.patch:150:+    if (FAILED(hr = MFCreateMediaType(&mediatypes[2])))
./wine-hotfixes/media_foundation_alpha.patch:152:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[2], &MF_MT_MAJOR_TYPE, &MFMediaType_Audio)))
./wine-hotfixes/media_foundation_alpha.patch:154:+    if (FAILED(hr = IMFMediaType_SetGUID(mediatypes[2], &MF_MT_SUBTYPE, &MFAudioFormat_PCM)))
./wine-hotfixes/media_foundation_alpha.patch:156:+    if (FAILED(hr = MFCreateStreamDescriptor(0, 3, mediatypes, &sd[0])))
./wine-hotfixes/media_foundation_alpha.patch:158:+    if (FAILED(hr = MFCreateStreamDescriptor(1, 3, mediatypes, &sd[1])))
./wine-hotfixes/media_foundation_alpha.patch:160:+    if (FAILED(hr = MFCreatePresentationDescriptor(2, sd, &pd)))
./wine-hotfixes/media_foundation_alpha.patch:164:+    IMFMediaType_Release(mediatypes[0]);
./wine-hotfixes/media_foundation_alpha.patch:165:+    IMFMediaType_Release(mediatypes[1]);
./wine-hotfixes/media_foundation_alpha.patch:166:+    IMFMediaType_Release(mediatypes[2]);
./wine-hotfixes/media_foundation_alpha.patch:167:+    IMFStreamDescriptor_Release(sd[0]);
./wine-hotfixes/media_foundation_alpha.patch:168:+    IMFStreamDescriptor_Release(sd[1]);
./wine-hotfixes/media_foundation_alpha.patch:173:+static HRESULT WINAPI test_media_source_Start(IMFMediaSource *iface, IMFPresentationDescriptor *descriptor,
./wine-hotfixes/media_foundation_alpha.patch:179:+static HRESULT WINAPI test_media_source_Stop(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:184:+static HRESULT WINAPI test_media_source_Pause(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:189:+static HRESULT WINAPI test_media_source_Shutdown(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:194:+static const IMFMediaSourceVtbl test_media_source_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:213:     IMFSampleGrabberSinkCallback test_grabber_callback = { &test_grabber_callback_vtbl };
./wine-hotfixes/media_foundation_alpha.patch:214:+    IMFMediaSource test_media_source = { &test_media_source_vtbl };
./wine-hotfixes/media_foundation_alpha.patch:215:     IMFTopology *topology, *topology2, *full_topology;
./wine-hotfixes/media_foundation_alpha.patch:216:     IMFTopologyNode *src_node, *sink_node;
./wine-hotfixes/media_foundation_alpha.patch:217:+    IMFMediaType *media_type, *current_media_type;
./wine-hotfixes/media_foundation_alpha.patch:218:     IMFPresentationDescriptor *pd;
./wine-hotfixes/media_foundation_alpha.patch:219:     IMFSourceResolver *resolver;
./wine-hotfixes/media_foundation_alpha.patch:220:     IMFActivate *sink_activate;
./wine-hotfixes/media_foundation_alpha.patch:221:     IMFStreamSink *stream_sink;
./wine-hotfixes/media_foundation_alpha.patch:223:-    IMFMediaType *media_type;
./wine-hotfixes/media_foundation_alpha.patch:224:+    IMFMediaTypeHandler *mth;
./wine-hotfixes/media_foundation_alpha.patch:225:     IMFStreamDescriptor *sd;
./wine-hotfixes/media_foundation_alpha.patch:227:     MF_OBJECT_TYPE obj_type;
./wine-hotfixes/media_foundation_alpha.patch:228:     IMFMediaSource *source;
./wine-hotfixes/media_foundation_alpha.patch:229:     IMFTopoLoader *loader;
./wine-hotfixes/media_foundation_alpha.patch:230:     IMFByteStream *stream;
./wine-hotfixes/media_foundation_alpha.patch:231:     IMFAttributes *attr;
./wine-hotfixes/media_foundation_alpha.patch:232:     IMFMediaSink *sink;
./wine-hotfixes/media_foundation_alpha.patch:244:+    IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/media_foundation_alpha.patch:247:     hr = IMFTopology_GetCount(topology, &count);
./wine-hotfixes/media_foundation_alpha.patch:252:     IMFTopology_Release(topology2);
./wine-hotfixes/media_foundation_alpha.patch:253:     IMFTopology_Release(full_topology);
./wine-hotfixes/media_foundation_alpha.patch:254:+    IMFByteStream_Release(stream);
./wine-hotfixes/media_foundation_alpha.patch:255:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/media_foundation_alpha.patch:258:+    IMFPresentationDescriptor_GetStreamDescriptorCount(pd, &count);
./wine-hotfixes/media_foundation_alpha.patch:260:+    hr = IMFPresentationDescriptor_DeselectStream(pd, 0);
./wine-hotfixes/media_foundation_alpha.patch:262:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:264:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/media_foundation_alpha.patch:265:+    hr = IMFTopology_GetNode(full_topology, 0, &src_node);
./wine-hotfixes/media_foundation_alpha.patch:267:+    IMFPresentationDescriptor_Release(pd);
./wine-hotfixes/media_foundation_alpha.patch:268:+    hr = IMFTopologyNode_GetUnknown(src_node, &MF_TOPONODE_PRESENTATION_DESCRIPTOR, &IID_IMFPresentationDescriptor, (void **)&pd);
./wine-hotfixes/media_foundation_alpha.patch:270:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/media_foundation_alpha.patch:271:+    IMFPresentationDescriptor_GetStreamDescriptorByIndex(pd, 0, &selected, &sd);
./wine-hotfixes/media_foundation_alpha.patch:275:+    IMFPresentationDescriptor_Release(pd);
./wine-hotfixes/media_foundation_alpha.patch:276:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/media_foundation_alpha.patch:277:+    IMFTopology_Release(full_topology);
./wine-hotfixes/media_foundation_alpha.patch:278:+    IMFTopology_Release(topology);
./wine-hotfixes/media_foundation_alpha.patch:279:     IMFMediaSource_Release(source);
./wine-hotfixes/media_foundation_alpha.patch:280:     IMFSourceResolver_Release(resolver);
./wine-hotfixes/media_foundation_alpha.patch:281:-    IMFByteStream_Release(stream);
./wine-hotfixes/media_foundation_alpha.patch:284:+    /* first, test default behavior; MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES not set */
./wine-hotfixes/media_foundation_alpha.patch:285:+    hr = MFCreateTopology(&topology);
./wine-hotfixes/media_foundation_alpha.patch:288:+    hr = IMFMediaSource_CreatePresentationDescriptor(&test_media_source, &pd);
./wine-hotfixes/media_foundation_alpha.patch:291:+    hr = IMFPresentationDescriptor_GetStreamDescriptorByIndex(pd, 0, &selected, &sd);
./wine-hotfixes/media_foundation_alpha.patch:294:+    hr = IMFStreamDescriptor_GetMediaTypeHandler(sd, &mth);
./wine-hotfixes/media_foundation_alpha.patch:296:+    hr = IMFMediaTypeHandler_GetCurrentMediaType(mth, &media_type);
./wine-hotfixes/media_foundation_alpha.patch:297:+    ok(hr == MF_E_NOT_INITIALIZED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:299:+    hr = MFCreateTopologyNode(MF_TOPOLOGY_SOURCESTREAM_NODE, &src_node);
./wine-hotfixes/media_foundation_alpha.patch:302:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_SOURCE, (IUnknown *)&test_media_source);
./wine-hotfixes/media_foundation_alpha.patch:304:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_PRESENTATION_DESCRIPTOR, (IUnknown *)pd);
./wine-hotfixes/media_foundation_alpha.patch:306:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_STREAM_DESCRIPTOR, (IUnknown *)sd);
./wine-hotfixes/media_foundation_alpha.patch:309:+    hr = IMFTopology_AddNode(topology, src_node);
./wine-hotfixes/media_foundation_alpha.patch:312:+    hr = MFCreateMediaType(&media_type);
./wine-hotfixes/media_foundation_alpha.patch:315:+    hr = IMFMediaType_SetGUID(media_type, &MF_MT_MAJOR_TYPE, &MFMediaType_Audio);
./wine-hotfixes/media_foundation_alpha.patch:317:+    hr = IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_PCM);
./wine-hotfixes/media_foundation_alpha.patch:320:+    hr = MFCreateSampleGrabberSinkActivate(media_type, &test_grabber_callback, &sink_activate);
./wine-hotfixes/media_foundation_alpha.patch:322:+    IMFMediaType_Release(media_type);
./wine-hotfixes/media_foundation_alpha.patch:324:+    hr = IMFActivate_ActivateObject(sink_activate, &IID_IMFMediaSink, (void **)&sink);
./wine-hotfixes/media_foundation_alpha.patch:327:+    hr = IMFMediaSink_GetStreamSinkByIndex(sink, 0, &stream_sink);
./wine-hotfixes/media_foundation_alpha.patch:330:+    hr = MFCreateTopologyNode(MF_TOPOLOGY_OUTPUT_NODE, &sink_node);
./wine-hotfixes/media_foundation_alpha.patch:333:+    hr = IMFTopologyNode_SetObject(sink_node, (IUnknown *)stream_sink);
./wine-hotfixes/media_foundation_alpha.patch:336:+    hr = IMFTopology_AddNode(topology, sink_node);
./wine-hotfixes/media_foundation_alpha.patch:339:+    hr = IMFTopologyNode_ConnectOutput(src_node, 0, sink_node, 0);
./wine-hotfixes/media_foundation_alpha.patch:342:+    hr = IMFTopology_GetUINT32(topology, &MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES, &enum_src);
./wine-hotfixes/media_foundation_alpha.patch:343:+    ok(hr == MF_E_ATTRIBUTENOTFOUND, "Attribute should not be set\n.");
./wine-hotfixes/media_foundation_alpha.patch:345:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:347:+    /* when major types differ, error is MF_E_TOPO_CODEC_NOT_FOUND */
./wine-hotfixes/media_foundation_alpha.patch:348:+    ok(hr == MF_E_TOPO_CODEC_NOT_FOUND, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:350:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 2, &media_type);
./wine-hotfixes/media_foundation_alpha.patch:354:+    hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, media_type);
./wine-hotfixes/media_foundation_alpha.patch:357:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:360:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/media_foundation_alpha.patch:364:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 1, &media_type);
./wine-hotfixes/media_foundation_alpha.patch:367:+    hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, media_type);
./wine-hotfixes/media_foundation_alpha.patch:370:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:373:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/media_foundation_alpha.patch:378:+    IMFTopology_Release(full_topology);
./wine-hotfixes/media_foundation_alpha.patch:380:+    /* now test with MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES set on topology */
./wine-hotfixes/media_foundation_alpha.patch:381:+    hr = IMFTopology_SetUINT32(topology, &MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES, 1);
./wine-hotfixes/media_foundation_alpha.patch:383:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 2, &media_type);
./wine-hotfixes/media_foundation_alpha.patch:386:+    /* first, if MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES is not set on source */
./wine-hotfixes/media_foundation_alpha.patch:387:+    IMFTopologyNode_GetUINT32(src_node, &MF_TOPONODE_CONNECT_METHOD, &method);
./wine-hotfixes/media_foundation_alpha.patch:389:+    IMFTopologyNode_SetUINT32(src_node, &MF_TOPONODE_CONNECT_METHOD, method & ~MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES);
./wine-hotfixes/media_foundation_alpha.patch:392:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:395:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/media_foundation_alpha.patch:398:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/media_foundation_alpha.patch:399:+    hr = IMFTopology_GetNode(full_topology, 0, &src_node);
./wine-hotfixes/media_foundation_alpha.patch:401:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/media_foundation_alpha.patch:402:+    hr = IMFTopologyNode_GetUnknown(src_node, &MF_TOPONODE_STREAM_DESCRIPTOR, &IID_IMFStreamDescriptor, (void **)&sd);
./wine-hotfixes/media_foundation_alpha.patch:404:+    IMFMediaTypeHandler_Release(mth);
./wine-hotfixes/media_foundation_alpha.patch:405:+    hr = IMFStreamDescriptor_GetMediaTypeHandler(sd, &mth);
./wine-hotfixes/media_foundation_alpha.patch:407:+    hr = IMFMediaTypeHandler_GetCurrentMediaType(mth, &current_media_type);
./wine-hotfixes/media_foundation_alpha.patch:409:+    hr = IMFMediaType_IsEqual(current_media_type, media_type, &flags);
./wine-hotfixes/media_foundation_alpha.patch:412:+    ok(flags & MF_MEDIATYPE_EQUAL_FORMAT_DATA, "Types should be equal.\n");
./wine-hotfixes/media_foundation_alpha.patch:415:+    IMFMediaType_Release(media_type);
./wine-hotfixes/media_foundation_alpha.patch:416:+    IMFMediaType_Release(current_media_type);
./wine-hotfixes/media_foundation_alpha.patch:417:+    IMFMediaTypeHandler_Release(mth);
./wine-hotfixes/media_foundation_alpha.patch:418:+    IMFStreamSink_Release(stream_sink);
./wine-hotfixes/media_foundation_alpha.patch:419:+    IMFMediaSink_Release(sink);
./wine-hotfixes/media_foundation_alpha.patch:420:+    IMFActivate_Release(sink_activate);
./wine-hotfixes/media_foundation_alpha.patch:421:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/media_foundation_alpha.patch:424:+    hr = IMFTopology_SetUINT32(topology, &MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES, 0);
./wine-hotfixes/media_foundation_alpha.patch:426:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/media_foundation_alpha.patch:427:+    hr = IMFTopology_GetNode(topology, 0, &src_node);
./wine-hotfixes/media_foundation_alpha.patch:429:+    hr = IMFTopologyNode_GetUnknown(src_node, &MF_TOPONODE_STREAM_DESCRIPTOR, &IID_IMFStreamDescriptor, (void **)&sd);
./wine-hotfixes/media_foundation_alpha.patch:431:+    hr = IMFStreamDescriptor_GetMediaTypeHandler(sd, &mth);
./wine-hotfixes/media_foundation_alpha.patch:433:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 1, &media_type);
./wine-hotfixes/media_foundation_alpha.patch:435:+    hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, media_type);
./wine-hotfixes/media_foundation_alpha.patch:438:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:441:+    IMFTopology_Release(full_topology);
./wine-hotfixes/media_foundation_alpha.patch:443:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/media_foundation_alpha.patch:444:+    hr = IMFPresentationDescriptor_GetStreamDescriptorByIndex(pd, 1, &selected, &sd);
./wine-hotfixes/media_foundation_alpha.patch:447:+    hr = IMFStreamDescriptor_GetMediaTypeHandler(sd, &mth);
./wine-hotfixes/media_foundation_alpha.patch:449:+    hr = IMFMediaTypeHandler_GetCurrentMediaType(mth, &media_type);
./wine-hotfixes/media_foundation_alpha.patch:450:+    ok(hr == MF_E_NOT_INITIALIZED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:452:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/media_foundation_alpha.patch:453:+    hr = MFCreateTopologyNode(MF_TOPOLOGY_SOURCESTREAM_NODE, &src_node);
./wine-hotfixes/media_foundation_alpha.patch:456:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_SOURCE, (IUnknown *)&test_media_source);
./wine-hotfixes/media_foundation_alpha.patch:458:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_PRESENTATION_DESCRIPTOR, (IUnknown *)pd);
./wine-hotfixes/media_foundation_alpha.patch:460:+    hr = IMFTopologyNode_SetUnknown(src_node, &MF_TOPONODE_STREAM_DESCRIPTOR, (IUnknown *)sd);
./wine-hotfixes/media_foundation_alpha.patch:463:+    hr = IMFTopology_AddNode(topology, src_node);
./wine-hotfixes/media_foundation_alpha.patch:466:+    hr = MFCreateMediaType(&media_type);
./wine-hotfixes/media_foundation_alpha.patch:469:+    hr = IMFMediaType_SetGUID(media_type, &MF_MT_MAJOR_TYPE, &MFMediaType_Audio);
./wine-hotfixes/media_foundation_alpha.patch:471:+    hr = IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_PCM);
./wine-hotfixes/media_foundation_alpha.patch:474:+    hr = MFCreateSampleGrabberSinkActivate(media_type, &test_grabber_callback, &sink_activate);
./wine-hotfixes/media_foundation_alpha.patch:476:+    IMFMediaType_Release(media_type);
./wine-hotfixes/media_foundation_alpha.patch:478:+    hr = IMFActivate_ActivateObject(sink_activate, &IID_IMFMediaSink, (void **)&sink);
./wine-hotfixes/media_foundation_alpha.patch:481:+    hr = IMFMediaSink_GetStreamSinkByIndex(sink, 0, &stream_sink);
./wine-hotfixes/media_foundation_alpha.patch:484:+    hr = MFCreateTopologyNode(MF_TOPOLOGY_OUTPUT_NODE, &sink_node);
./wine-hotfixes/media_foundation_alpha.patch:487:+    hr = IMFTopologyNode_SetObject(sink_node, (IUnknown *)stream_sink);
./wine-hotfixes/media_foundation_alpha.patch:490:+    hr = IMFTopology_AddNode(topology, sink_node);
./wine-hotfixes/media_foundation_alpha.patch:493:+    hr = IMFTopology_GetNodeCount(topology, &node_count);
./wine-hotfixes/media_foundation_alpha.patch:497:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:501:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/media_foundation_alpha.patch:506:+    IMFTopology_Release(full_topology);
./wine-hotfixes/media_foundation_alpha.patch:509:+    hr = IMFTopologyNode_ConnectOutput(src_node, 0, sink_node, 0);
./wine-hotfixes/media_foundation_alpha.patch:513:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:515:+    ok(hr == MF_E_TOPO_CODEC_NOT_FOUND, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:518:+    hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth, 1, &media_type);
./wine-hotfixes/media_foundation_alpha.patch:521:+    hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, media_type);
./wine-hotfixes/media_foundation_alpha.patch:524:+    hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:527:+    hr = IMFTopology_GetNodeCount(full_topology, &node_count);
./wine-hotfixes/media_foundation_alpha.patch:532:+    IMFTopology_Release(full_topology);
./wine-hotfixes/media_foundation_alpha.patch:533:+    IMFMediaType_Release(media_type);
./wine-hotfixes/media_foundation_alpha.patch:534:+    IMFTopologyNode_Release(src_node);
./wine-hotfixes/media_foundation_alpha.patch:535:+    IMFTopologyNode_Release(sink_node);
./wine-hotfixes/media_foundation_alpha.patch:536:+    IMFMediaTypeHandler_Release(mth);
./wine-hotfixes/media_foundation_alpha.patch:537:+    IMFStreamSink_Release(stream_sink);
./wine-hotfixes/media_foundation_alpha.patch:538:+    IMFMediaSink_Release(sink);
./wine-hotfixes/media_foundation_alpha.patch:539:+    IMFActivate_Release(sink_activate);
./wine-hotfixes/media_foundation_alpha.patch:540:+    IMFStreamDescriptor_Release(sd);
./wine-hotfixes/media_foundation_alpha.patch:542:+    IMFPresentationDescriptor_Release(pd);
./wine-hotfixes/media_foundation_alpha.patch:543:+    IMFTopology_Release(topology);
./wine-hotfixes/media_foundation_alpha.patch:544:     IMFTopoLoader_Release(loader);
./wine-hotfixes/media_foundation_alpha.patch:546:     hr = MFShutdown();
./wine-hotfixes/media_foundation_alpha.patch:554:Subject: [PATCH 03/40] mf: Partially implement the topology loader.
./wine-hotfixes/media_foundation_alpha.patch:561: dlls/mf/tests/mf.c |   3 -
./wine-hotfixes/media_foundation_alpha.patch:562: dlls/mf/topology.c | 337 ++++++++++++++++++++++++++++++++++++++++++---
./wine-hotfixes/media_foundation_alpha.patch:565:diff --git a/dlls/mf/tests/mf.c b/dlls/mf/tests/mf.c
./wine-hotfixes/media_foundation_alpha.patch:567:--- a/dlls/mf/tests/mf.c
./wine-hotfixes/media_foundation_alpha.patch:568:+++ b/dlls/mf/tests/mf.c
./wine-hotfixes/media_foundation_alpha.patch:572:     hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:574:     ok(hr == MF_E_TOPO_UNSUPPORTED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:576:     hr = MFCreateSourceResolver(&resolver);
./wine-hotfixes/media_foundation_alpha.patch:580:     hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:582:     ok(hr == MF_E_TOPO_UNSUPPORTED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:588:     hr = IMFTopoLoader_Load(loader, topology, &full_topology, NULL);
./wine-hotfixes/media_foundation_alpha.patch:590:     ok(hr == MF_E_TOPO_UNSUPPORTED, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:592:     hr = IMFTopologyNode_ConnectOutput(src_node, 0, sink_node, 0);
./wine-hotfixes/media_foundation_alpha.patch:593:diff --git a/dlls/mf/topology.c b/dlls/mf/topology.c
./wine-hotfixes/media_foundation_alpha.patch:595:--- a/dlls/mf/topology.c
./wine-hotfixes/media_foundation_alpha.patch:596:+++ b/dlls/mf/topology.c
./wine-hotfixes/media_foundation_alpha.patch:597:@@ -1913,47 +1913,352 @@ static ULONG WINAPI topology_loader_Release(IMFTopoLoader *iface)
./wine-hotfixes/media_foundation_alpha.patch:601:+static void topology_loader_add_branch(struct topology *topology, IMFTopologyNode *first, IMFTopologyNode *last)
./wine-hotfixes/media_foundation_alpha.patch:603:+    IMFTopology *full_topo = &topology->IMFTopology_iface;
./wine-hotfixes/media_foundation_alpha.patch:604:+    IMFTopologyNode *in, *out;
./wine-hotfixes/media_foundation_alpha.patch:608:+    IMFTopology_AddNode(full_topo, in);
./wine-hotfixes/media_foundation_alpha.patch:609:+    while (SUCCEEDED(IMFTopologyNode_GetOutput(in, 0, &out, &index)))
./wine-hotfixes/media_foundation_alpha.patch:611:+        IMFTopology_AddNode(full_topo, out);
./wine-hotfixes/media_foundation_alpha.patch:616:+static HRESULT topology_loader_resolve_branch(IMFTopologyNode *src, IMFMediaType *mediatype, IMFTopologyNode *sink, MF_CONNECT_METHOD method)
./wine-hotfixes/media_foundation_alpha.patch:618:+    IMFStreamSink *streamsink;
./wine-hotfixes/media_foundation_alpha.patch:619:+    IMFMediaTypeHandler *mth;
./wine-hotfixes/media_foundation_alpha.patch:622:+    IMFTopologyNode_GetObject(sink, (IUnknown **)&streamsink);
./wine-hotfixes/media_foundation_alpha.patch:623:+    IMFStreamSink_GetMediaTypeHandler(streamsink, &mth);
./wine-hotfixes/media_foundation_alpha.patch:624:+    if (method == MF_CONNECT_DIRECT)
./wine-hotfixes/media_foundation_alpha.patch:626:+        if (FAILED(hr = IMFMediaTypeHandler_SetCurrentMediaType(mth, mediatype)))
./wine-hotfixes/media_foundation_alpha.patch:628:+        hr = IMFTopologyNode_ConnectOutput(src, 0, sink, 0);
./wine-hotfixes/media_foundation_alpha.patch:633:+        IMFTopologyNode *node_dec, *node_conv;
./wine-hotfixes/media_foundation_alpha.patch:634:+        GUID major_type, subtype, mft_category;
./wine-hotfixes/media_foundation_alpha.patch:635:+        MFT_REGISTER_TYPE_INFO mft_typeinfo;
./wine-hotfixes/media_foundation_alpha.patch:636:+        UINT32 flags = MFT_ENUM_FLAG_ALL;
./wine-hotfixes/media_foundation_alpha.patch:637:+        IMFActivate **activates_decs;
./wine-hotfixes/media_foundation_alpha.patch:641:+        IMFMediaType_GetGUID(mediatype, &MF_MT_MAJOR_TYPE, &major_type);
./wine-hotfixes/media_foundation_alpha.patch:642:+        if (IsEqualGUID(&major_type, &MFMediaType_Audio))
./wine-hotfixes/media_foundation_alpha.patch:643:+            mft_category = MFT_CATEGORY_AUDIO_DECODER;
./wine-hotfixes/media_foundation_alpha.patch:644:+        else if (IsEqualGUID(&major_type, &MFMediaType_Video))
./wine-hotfixes/media_foundation_alpha.patch:645:+            mft_category = MFT_CATEGORY_VIDEO_DECODER;
./wine-hotfixes/media_foundation_alpha.patch:647:+            return MF_E_INVALIDMEDIATYPE;
./wine-hotfixes/media_foundation_alpha.patch:649:+        IMFMediaType_GetGUID(mediatype, &MF_MT_SUBTYPE, &subtype);
./wine-hotfixes/media_foundation_alpha.patch:650:+        mft_typeinfo.guidMajorType = major_type;
./wine-hotfixes/media_foundation_alpha.patch:651:+        mft_typeinfo.guidSubtype = subtype;
./wine-hotfixes/media_foundation_alpha.patch:652:+        MFTEnumEx(mft_category, flags, &mft_typeinfo, NULL, &activates_decs, &num_activates_decs);
./wine-hotfixes/media_foundation_alpha.patch:655:+        if (IsEqualGUID(&major_type, &MFMediaType_Audio))
./wine-hotfixes/media_foundation_alpha.patch:656:+            mft_category = MFT_CATEGORY_AUDIO_EFFECT;
./wine-hotfixes/media_foundation_alpha.patch:657:+        else if (IsEqualGUID(&major_type, &MFMediaType_Video))
./wine-hotfixes/media_foundation_alpha.patch:658:+            mft_category = MFT_CATEGORY_VIDEO_EFFECT;
./wine-hotfixes/media_foundation_alpha.patch:672:+            IMFTransform *decoder;
./wine-hotfixes/media_foundation_alpha.patch:674:+            IMFActivate_ActivateObject(activates_decs[i], &IID_IMFTransform, (void **)&decoder);
./wine-hotfixes/media_foundation_alpha.patch:675:+            if (SUCCEEDED(hr = IMFTransform_SetInputType(decoder, 0, mediatype, 0)))
./wine-hotfixes/media_foundation_alpha.patch:678:+                IMFActivate **activates_convs;
./wine-hotfixes/media_foundation_alpha.patch:679:+                IMFMediaType *decoder_mtype;
./wine-hotfixes/media_foundation_alpha.patch:682:+                while (SUCCEEDED(IMFTransform_GetOutputAvailableType(decoder, 0, count++, &decoder_mtype)))
./wine-hotfixes/media_foundation_alpha.patch:684:+                    IMFTransform *converter;
./wine-hotfixes/media_foundation_alpha.patch:687:+                    if (SUCCEEDED(IMFMediaTypeHandler_SetCurrentMediaType(mth, decoder_mtype)))
./wine-hotfixes/media_foundation_alpha.patch:689:+                        MFCreateTopologyNode(MF_TOPOLOGY_TRANSFORM_NODE, &node_dec);
./wine-hotfixes/media_foundation_alpha.patch:690:+                        IMFTopologyNode_SetObject(node_dec, (IUnknown *)decoder);
./wine-hotfixes/media_foundation_alpha.patch:691:+                        IMFTopologyNode_ConnectOutput(src, 0, node_dec, 0);
./wine-hotfixes/media_foundation_alpha.patch:692:+                        IMFTopologyNode_ConnectOutput(node_dec, 0, sink, 0);
./wine-hotfixes/media_foundation_alpha.patch:694:+                        IMFActivate_ShutdownObject(activates_convs[i]);
./wine-hotfixes/media_foundation_alpha.patch:698:+                    IMFMediaType_GetGUID(decoder_mtype, &MF_MT_SUBTYPE, &subtype);
./wine-hotfixes/media_foundation_alpha.patch:699:+                    mft_typeinfo.guidSubtype = subtype;
./wine-hotfixes/media_foundation_alpha.patch:700:+                    MFTEnumEx(mft_category, flags, &mft_typeinfo, NULL, &activates_convs, &num_activates_convs);
./wine-hotfixes/media_foundation_alpha.patch:703:+                        IMFMediaType *converter_mtype;
./wine-hotfixes/media_foundation_alpha.patch:705:+                        IMFActivate_ActivateObject(activates_convs[j], &IID_IMFTransform, (void **)&converter);
./wine-hotfixes/media_foundation_alpha.patch:706:+                        if (SUCCEEDED(IMFTransform_SetInputType(converter, 0, decoder_mtype, 0)))
./wine-hotfixes/media_foundation_alpha.patch:709:+                            while (SUCCEEDED(IMFTransform_GetOutputAvailableType(converter, 0, count++, &converter_mtype)))
./wine-hotfixes/media_foundation_alpha.patch:712:+                                if (SUCCEEDED(IMFMediaTypeHandler_SetCurrentMediaType(mth, converter_mtype)))
./wine-hotfixes/media_foundation_alpha.patch:714:+                                    MFCreateTopologyNode(MF_TOPOLOGY_TRANSFORM_NODE, &node_dec);
./wine-hotfixes/media_foundation_alpha.patch:715:+                                    IMFTopologyNode_SetObject(node_dec, (IUnknown *)decoder);
./wine-hotfixes/media_foundation_alpha.patch:716:+                                    MFCreateTopologyNode(MF_TOPOLOGY_TRANSFORM_NODE, &node_conv);
./wine-hotfixes/media_foundation_alpha.patch:717:+                                    IMFTopologyNode_SetObject(node_conv, (IUnknown *)converter);
./wine-hotfixes/media_foundation_alpha.patch:718:+                                    IMFTopologyNode_ConnectOutput(src, 0, node_dec, 0);
./wine-hotfixes/media_foundation_alpha.patch:719:+                                    IMFTopologyNode_ConnectOutput(node_dec, 0, node_conv, 0);
./wine-hotfixes/media_foundation_alpha.patch:720:+                                    IMFTopologyNode_ConnectOutput(node_conv, 0, sink, 0);
./wine-hotfixes/media_foundation_alpha.patch:722:+                                    IMFActivate_ShutdownObject(activates_convs[j]);
./wine-hotfixes/media_foundation_alpha.patch:723:+                                    IMFActivate_ShutdownObject(activates_decs[i]);
./wine-hotfixes/media_foundation_alpha.patch:728:+                        IMFActivate_ShutdownObject(activates_convs[j]);
./wine-hotfixes/media_foundation_alpha.patch:732:+            IMFActivate_ShutdownObject(activates_decs[i]);
./wine-hotfixes/media_foundation_alpha.patch:740:+    IMFMediaTypeHandler *mth_src, *mth_sink;
./wine-hotfixes/media_foundation_alpha.patch:741:+    IMFTopologyNode *clone_src, *clone_sink;
./wine-hotfixes/media_foundation_alpha.patch:743:+    IMFMediaType **src_mediatypes;
./wine-hotfixes/media_foundation_alpha.patch:744:+    IMFStreamDescriptor *desc;
./wine-hotfixes/media_foundation_alpha.patch:745:+    IMFAttributes *attrs_src;
./wine-hotfixes/media_foundation_alpha.patch:746:+    IMFStreamSink *strm_sink;
./wine-hotfixes/media_foundation_alpha.patch:747:+    IMFMediaType *mtype_src;
./wine-hotfixes/media_foundation_alpha.patch:753:+    if (FAILED(hr = IMFAttributes_GetUnknown(attrs_src, &MF_TOPONODE_STREAM_DESCRIPTOR, &IID_IMFStreamDescriptor, (void **)&desc)))
./wine-hotfixes/media_foundation_alpha.patch:755:+    strm_sink = (IMFStreamSink *)sink->object;
./wine-hotfixes/media_foundation_alpha.patch:757:+    if (FAILED(hr = IMFStreamDescriptor_GetMediaTypeHandler(desc, &mth_src)))
./wine-hotfixes/media_foundation_alpha.patch:759:+        IMFStreamDescriptor_Release(desc);
./wine-hotfixes/media_foundation_alpha.patch:762:+    if (FAILED(hr = IMFStreamSink_GetMediaTypeHandler(strm_sink, &mth_sink)))
./wine-hotfixes/media_foundation_alpha.patch:764:+        IMFStreamDescriptor_Release(desc);
./wine-hotfixes/media_foundation_alpha.patch:765:+        IMFMediaTypeHandler_Release(mth_src);
./wine-hotfixes/media_foundation_alpha.patch:769:+    hr = IMFTopology_GetUINT32(&topology->IMFTopology_iface, &MF_TOPOLOGY_ENUMERATE_SOURCE_TYPES, &enum_src_types);
./wine-hotfixes/media_foundation_alpha.patch:776:+        if (FAILED(hr = IMFMediaTypeHandler_GetCurrentMediaType(mth_src, &mtype_src)))
./wine-hotfixes/media_foundation_alpha.patch:777:+            if (FAILED(hr = IMFMediaTypeHandler_GetMediaTypeByIndex(mth_src, 0, &mtype_src)))
./wine-hotfixes/media_foundation_alpha.patch:779:+                IMFMediaTypeHandler_Release(mth_src);
./wine-hotfixes/media_foundation_alpha.patch:780:+                IMFMediaTypeHandler_Release(mth_sink);
./wine-hotfixes/media_foundation_alpha.patch:781:+                IMFStreamDescriptor_Release(desc);
./wine-hotfixes/media_foundation_alpha.patch:786:+        IMFMediaTypeHandler_GetMediaTypeCount(mth_src, &num_media_types);
./wine-hotfixes/media_foundation_alpha.patch:788:+    src_mediatypes = heap_alloc(sizeof(IMFMediaType *) * num_media_types);
./wine-hotfixes/media_foundation_alpha.patch:794:+            IMFMediaTypeHandler_GetMediaTypeByIndex(mth_src, i, &src_mediatypes[i]);
./wine-hotfixes/media_foundation_alpha.patch:797:+    MFCreateTopologyNode(MF_TOPOLOGY_SOURCESTREAM_NODE, &clone_src);
./wine-hotfixes/media_foundation_alpha.patch:798:+    MFCreateTopologyNode(MF_TOPOLOGY_OUTPUT_NODE, &clone_sink);
./wine-hotfixes/media_foundation_alpha.patch:799:+    IMFTopologyNode_CloneFrom(clone_src, &src->IMFTopologyNode_iface);
./wine-hotfixes/media_foundation_alpha.patch:800:+    IMFTopologyNode_CloneFrom(clone_sink, &sink->IMFTopologyNode_iface);
./wine-hotfixes/media_foundation_alpha.patch:802:+    if (FAILED(IMFTopologyNode_GetUINT32(clone_sink, &MF_TOPONODE_STREAMID, &streamid)))
./wine-hotfixes/media_foundation_alpha.patch:803:+        IMFTopologyNode_SetUINT32(clone_sink, &MF_TOPONODE_STREAMID, 0);
./wine-hotfixes/media_foundation_alpha.patch:807:+        hr = IMFAttributes_GetUINT32(attrs_src, &MF_TOPONODE_CONNECT_METHOD, &method);
./wine-hotfixes/media_foundation_alpha.patch:808:+        if (hr == S_OK && method != MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES)
./wine-hotfixes/media_foundation_alpha.patch:810:+            for (method = MF_CONNECT_DIRECT; method < MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES; method++)
./wine-hotfixes/media_foundation_alpha.patch:822:+                for (method = MF_CONNECT_DIRECT; method < MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES; method++)
./wine-hotfixes/media_foundation_alpha.patch:833:+        if (SUCCEEDED(topology_loader_resolve_branch(clone_src, src_mediatypes[0], clone_sink, MF_CONNECT_DIRECT)))
./wine-hotfixes/media_foundation_alpha.patch:842:+    return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/media_foundation_alpha.patch:845: static HRESULT WINAPI topology_loader_Load(IMFTopoLoader *iface, IMFTopology *input_topology,
./wine-hotfixes/media_foundation_alpha.patch:846:         IMFTopology **output_topology, IMFTopology *current_topology)
./wine-hotfixes/media_foundation_alpha.patch:848:     struct topology *topology = unsafe_impl_from_IMFTopology(input_topology);
./wine-hotfixes/media_foundation_alpha.patch:851:     IMFStreamSink *sink;
./wine-hotfixes/media_foundation_alpha.patch:862:+        return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/media_foundation_alpha.patch:869:+        if (node->node_type == MF_TOPOLOGY_SOURCESTREAM_NODE)
./wine-hotfixes/media_foundation_alpha.patch:877:+        return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/media_foundation_alpha.patch:887:+        if (node->node_type == MF_TOPOLOGY_SOURCESTREAM_NODE)
./wine-hotfixes/media_foundation_alpha.patch:889:-            case MF_TOPOLOGY_OUTPUT_NODE:
./wine-hotfixes/media_foundation_alpha.patch:894:+                if (node->outputs.streams->connection->node_type == MF_TOPOLOGY_TRANSFORM_NODE)
./wine-hotfixes/media_foundation_alpha.patch:897:-                    if (FAILED(IUnknown_QueryInterface(node->object, &IID_IMFStreamSink, (void **)&sink)))
./wine-hotfixes/media_foundation_alpha.patch:898:-                        return MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED;
./wine-hotfixes/media_foundation_alpha.patch:899:-                    IMFStreamSink_Release(sink);
./wine-hotfixes/media_foundation_alpha.patch:902:+                    while (sink && sink->node_type != MF_TOPOLOGY_OUTPUT_NODE && sink->outputs.count)
./wine-hotfixes/media_foundation_alpha.patch:906:+                        FIXME("Check for MF_CONNECT_AS_OPTIONAL and MF_CONNECT_AS_OPTIONAL_BRANCH flags.\n");
./wine-hotfixes/media_foundation_alpha.patch:908:+                        return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/media_foundation_alpha.patch:913:-            case MF_TOPOLOGY_SOURCESTREAM_NODE:
./wine-hotfixes/media_foundation_alpha.patch:914:-                if (FAILED(hr = IMFAttributes_GetItem(node->attributes, &MF_TOPONODE_STREAM_DESCRIPTOR, NULL)))
./wine-hotfixes/media_foundation_alpha.patch:919:+                else if (node->outputs.streams->connection->node_type == MF_TOPOLOGY_OUTPUT_NODE)
./wine-hotfixes/media_foundation_alpha.patch:924:+                    return MF_E_TOPO_UNSUPPORTED;
./wine-hotfixes/media_foundation_alpha.patch:934:+        if (FAILED(IUnknown_QueryInterface(node_pairs[i][1]->object, &IID_IMFStreamSink, (void **)&sink)))
./wine-hotfixes/media_foundation_alpha.patch:936:+            FIXME("Check for MF_CONNECT_AS_OPTIONAL and MF_CONNECT_AS_OPTIONAL_BRANCH flags.\n");
./wine-hotfixes/media_foundation_alpha.patch:938:+            return MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED;
./wine-hotfixes/media_foundation_alpha.patch:940:+        IMFStreamSink_Release(sink);
./wine-hotfixes/media_foundation_alpha.patch:943:     if (FAILED(hr = MFCreateTopology(output_topology)))
./wine-hotfixes/media_foundation_alpha.patch:946:-    return IMFTopology_CloneFrom(*output_topology, input_topology);
./wine-hotfixes/media_foundation_alpha.patch:952:+        struct topology *full_topology = unsafe_impl_from_IMFTopology(*output_topology);
./wine-hotfixes/media_foundation_alpha.patch:965: static const IMFTopoLoaderVtbl topologyloadervtbl =
./wine-hotfixes/media_foundation_alpha.patch:976: dlls/mfplat/tests/mfplat.c                   |   9 +-
./wine-hotfixes/media_foundation_alpha.patch:980: dlls/winegstreamer/mfplat.c                  |   9 +
./wine-hotfixes/media_foundation_alpha.patch:983: include/mfidl.idl                            |   1 +
./wine-hotfixes/media_foundation_alpha.patch:987:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:989:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:990:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:992:     ok(obj_type == MF_OBJECT_MEDIASOURCE, "got %d\n", obj_type);
./wine-hotfixes/media_foundation_alpha.patch:994:     hr = IMFMediaSource_CreatePresentationDescriptor(mediasource, &descriptor);
./wine-hotfixes/media_foundation_alpha.patch:1001:     hr = IMFPresentationDescriptor_GetStreamDescriptorByIndex(descriptor, 0, &selected, &sd);
./wine-hotfixes/media_foundation_alpha.patch:1003:     IMFStreamDescriptor_Release(sd);
./wine-hotfixes/media_foundation_alpha.patch:1005:     hr = IMFMediaTypeHandler_GetMajorType(handler, &guid);
./wine-hotfixes/media_foundation_alpha.patch:1012:     ok(IsEqualGUID(&guid, &MFMediaType_Video), "Unexpected major type %s.\n", debugstr_guid(&guid));
./wine-hotfixes/media_foundation_alpha.patch:1014:     get_event((IMFMediaEventGenerator *)mediasource, MEEndOfPresentation, NULL);
./wine-hotfixes/media_foundation_alpha.patch:1016:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/media_foundation_alpha.patch:1017:+    IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/media_foundation_alpha.patch:1019:     hr = IMFMediaSource_Shutdown(mediasource);
./wine-hotfixes/media_foundation_alpha.patch:1022:     ok(hr == MF_E_SHUTDOWN, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:1026:-    IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/media_foundation_alpha.patch:1027:     IMFMediaSource_Release(mediasource);
./wine-hotfixes/media_foundation_alpha.patch:1028:     IMFByteStream_Release(stream);
./wine-hotfixes/media_foundation_alpha.patch:1040: 	mfplat.c \
./wine-hotfixes/media_foundation_alpha.patch:1048: extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj) DECLSPEC_HIDDEN;
./wine-hotfixes/media_foundation_alpha.patch:1070:+#include "mfapi.h"
./wine-hotfixes/media_foundation_alpha.patch:1071:+#include "mferror.h"
./wine-hotfixes/media_foundation_alpha.patch:1072:+#include "mfidl.h"
./wine-hotfixes/media_foundation_alpha.patch:1078:+WINE_DEFAULT_DEBUG_CHANNEL(mfplat);
./wine-hotfixes/media_foundation_alpha.patch:1082:+    IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:1084:+    IMFMediaEventQueue *event_queue;
./wine-hotfixes/media_foundation_alpha.patch:1087:+static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:1089:+    return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:1092:+static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/media_foundation_alpha.patch:1094:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1098:+    if (IsEqualIID(riid, &IID_IMFMediaSource) ||
./wine-hotfixes/media_foundation_alpha.patch:1099:+        IsEqualIID(riid, &IID_IMFMediaEventGenerator) ||
./wine-hotfixes/media_foundation_alpha.patch:1102:+        *out = &source->IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:1115:+static ULONG WINAPI media_source_AddRef(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:1117:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1125:+static ULONG WINAPI media_source_Release(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:1127:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1140:+static HRESULT WINAPI media_source_GetEvent(IMFMediaSource *iface, DWORD flags, IMFMediaEvent **event)
./wine-hotfixes/media_foundation_alpha.patch:1142:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1146:+    return IMFMediaEventQueue_GetEvent(source->event_queue, flags, event);
./wine-hotfixes/media_foundation_alpha.patch:1149:+static HRESULT WINAPI media_source_BeginGetEvent(IMFMediaSource *iface, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/media_foundation_alpha.patch:1151:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1155:+    return IMFMediaEventQueue_BeginGetEvent(source->event_queue, callback, state);
./wine-hotfixes/media_foundation_alpha.patch:1158:+static HRESULT WINAPI media_source_EndGetEvent(IMFMediaSource *iface, IMFAsyncResult *result, IMFMediaEvent **event)
./wine-hotfixes/media_foundation_alpha.patch:1160:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1164:+    return IMFMediaEventQueue_EndGetEvent(source->event_queue, result, event);
./wine-hotfixes/media_foundation_alpha.patch:1167:+static HRESULT WINAPI media_source_QueueEvent(IMFMediaSource *iface, MediaEventType event_type, REFGUID ext_type,
./wine-hotfixes/media_foundation_alpha.patch:1170:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1174:+    return IMFMediaEventQueue_QueueEventParamVar(source->event_queue, event_type, ext_type, hr, value);
./wine-hotfixes/media_foundation_alpha.patch:1177:+static HRESULT WINAPI media_source_GetCharacteristics(IMFMediaSource *iface, DWORD *characteristics)
./wine-hotfixes/media_foundation_alpha.patch:1179:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1186:+static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *iface, IMFPresentationDescriptor **descriptor)
./wine-hotfixes/media_foundation_alpha.patch:1188:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1195:+static HRESULT WINAPI media_source_Start(IMFMediaSource *iface, IMFPresentationDescriptor *descriptor,
./wine-hotfixes/media_foundation_alpha.patch:1198:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1205:+static HRESULT WINAPI media_source_Stop(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:1207:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1214:+static HRESULT WINAPI media_source_Pause(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:1216:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1226:+        IMFMediaEventQueue_Release(source->event_queue);
./wine-hotfixes/media_foundation_alpha.patch:1231:+static HRESULT WINAPI media_source_Shutdown(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:1233:+    struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1240:+static const IMFMediaSourceVtbl IMFMediaSource_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:1257:+static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_type type, struct media_source **out_media_source)
./wine-hotfixes/media_foundation_alpha.patch:1265:+    if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/media_foundation_alpha.patch:1268:+    object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:1275:+    WARN("Failed to construct MFMediaSource, hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:1282:+/* IMFByteStreamHandler */
./wine-hotfixes/media_foundation_alpha.patch:1287:+    IMFAsyncResult *result;
./wine-hotfixes/media_foundation_alpha.patch:1288:+    MF_OBJECT_TYPE obj_type;
./wine-hotfixes/media_foundation_alpha.patch:1294:+    IMFByteStreamHandler IMFByteStreamHandler_iface;
./wine-hotfixes/media_foundation_alpha.patch:1295:+    IMFAsyncCallback IMFAsyncCallback_iface;
./wine-hotfixes/media_foundation_alpha.patch:1302:+static struct container_stream_handler *impl_from_IMFByteStreamHandler(IMFByteStreamHandler *iface)
./wine-hotfixes/media_foundation_alpha.patch:1304:+    return CONTAINING_RECORD(iface, struct container_stream_handler, IMFByteStreamHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:1307:+static struct container_stream_handler *impl_from_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:1309:+    return CONTAINING_RECORD(iface, struct container_stream_handler, IMFAsyncCallback_iface);
./wine-hotfixes/media_foundation_alpha.patch:1312:+static HRESULT WINAPI container_stream_handler_QueryInterface(IMFByteStreamHandler *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:1316:+    if (IsEqualIID(riid, &IID_IMFByteStreamHandler) ||
./wine-hotfixes/media_foundation_alpha.patch:1320:+        IMFByteStreamHandler_AddRef(iface);
./wine-hotfixes/media_foundation_alpha.patch:1329:+static ULONG WINAPI container_stream_handler_AddRef(IMFByteStreamHandler *iface)
./wine-hotfixes/media_foundation_alpha.patch:1331:+    struct container_stream_handler *handler = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:1339:+static ULONG WINAPI container_stream_handler_Release(IMFByteStreamHandler *iface)
./wine-hotfixes/media_foundation_alpha.patch:1341:+    struct container_stream_handler *handler = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:1352:+            IMFAsyncResult_Release(result->result);
./wine-hotfixes/media_foundation_alpha.patch:1370:+    IMFByteStream *stream;
./wine-hotfixes/media_foundation_alpha.patch:1418:+            IMFByteStream_Release(context->stream);
./wine-hotfixes/media_foundation_alpha.patch:1451:+static HRESULT WINAPI container_stream_handler_BeginCreateObject(IMFByteStreamHandler *iface, IMFByteStream *stream, const WCHAR *url, DWORD flags,
./wine-hotfixes/media_foundation_alpha.patch:1452:+        IPropertyStore *props, IUnknown **cancel_cookie, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/media_foundation_alpha.patch:1454:+    struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:1456:+    IMFAsyncResult *caller, *item;
./wine-hotfixes/media_foundation_alpha.patch:1464:+    if (FAILED(hr = MFCreateAsyncResult(NULL, callback, state, &caller)))
./wine-hotfixes/media_foundation_alpha.patch:1470:+        IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:1482:+        IMFByteStream_AddRef(context->stream);
./wine-hotfixes/media_foundation_alpha.patch:1487:+        IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:1492:+    hr = MFCreateAsyncResult(&context->IUnknown_iface, &this->IMFAsyncCallback_iface, (IUnknown *)caller, &item);
./wine-hotfixes/media_foundation_alpha.patch:1496:+        if (SUCCEEDED(hr = MFPutWorkItemEx(MFASYNC_CALLBACK_QUEUE_IO, item)))
./wine-hotfixes/media_foundation_alpha.patch:1505:+        IMFAsyncResult_Release(item);
./wine-hotfixes/media_foundation_alpha.patch:1507:+    IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:1512:+static HRESULT WINAPI container_stream_handler_EndCreateObject(IMFByteStreamHandler *iface, IMFAsyncResult *result,
./wine-hotfixes/media_foundation_alpha.patch:1513:+        MF_OBJECT_TYPE *obj_type, IUnknown **object)
./wine-hotfixes/media_foundation_alpha.patch:1515:+    struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:1539:+        hr = IMFAsyncResult_GetStatus(found->result);
./wine-hotfixes/media_foundation_alpha.patch:1540:+        IMFAsyncResult_Release(found->result);
./wine-hotfixes/media_foundation_alpha.patch:1545:+        *obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/media_foundation_alpha.patch:1547:+        hr = MF_E_UNEXPECTED;
./wine-hotfixes/media_foundation_alpha.patch:1553:+static HRESULT WINAPI container_stream_handler_CancelObjectCreation(IMFByteStreamHandler *iface, IUnknown *cancel_cookie)
./wine-hotfixes/media_foundation_alpha.patch:1555:+    struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:1576:+        IMFAsyncResult_Release(found->result);
./wine-hotfixes/media_foundation_alpha.patch:1582:+    return found ? S_OK : MF_E_UNEXPECTED;
./wine-hotfixes/media_foundation_alpha.patch:1585:+static HRESULT WINAPI container_stream_handler_GetMaxNumberOfBytesRequiredForResolution(IMFByteStreamHandler *iface, QWORD *bytes)
./wine-hotfixes/media_foundation_alpha.patch:1591:+static const IMFByteStreamHandlerVtbl container_stream_handler_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:1602:+static HRESULT WINAPI container_stream_handler_callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:1604:+    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/media_foundation_alpha.patch:1608:+        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/media_foundation_alpha.patch:1617:+static ULONG WINAPI container_stream_handler_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:1619:+    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:1620:+    return IMFByteStreamHandler_AddRef(&handler->IMFByteStreamHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:1623:+static ULONG WINAPI container_stream_handler_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:1625:+    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:1626:+    return IMFByteStreamHandler_Release(&handler->IMFByteStreamHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:1629:+static HRESULT WINAPI container_stream_handler_callback_GetParameters(IMFAsyncCallback *iface, DWORD *flags, DWORD *queue)
./wine-hotfixes/media_foundation_alpha.patch:1634:+static HRESULT container_stream_handler_create_object(struct container_stream_handler *This, WCHAR *url, IMFByteStream *stream, DWORD flags,
./wine-hotfixes/media_foundation_alpha.patch:1635:+                                            IPropertyStore *props, IUnknown **out_object, MF_OBJECT_TYPE *out_obj_type)
./wine-hotfixes/media_foundation_alpha.patch:1639:+    if (flags & MF_RESOLUTION_MEDIASOURCE)
./wine-hotfixes/media_foundation_alpha.patch:1649:+        *out_object = (IUnknown*)&new_source->IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:1650:+        *out_obj_type = MF_OBJECT_MEDIASOURCE;
./wine-hotfixes/media_foundation_alpha.patch:1661:+static HRESULT WINAPI container_stream_handler_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/media_foundation_alpha.patch:1663:+    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:1665:+    MF_OBJECT_TYPE obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/media_foundation_alpha.patch:1668:+    IMFAsyncResult *caller;
./wine-hotfixes/media_foundation_alpha.patch:1671:+    caller = (IMFAsyncResult *)IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/media_foundation_alpha.patch:1673:+    if (FAILED(hr = IMFAsyncResult_GetObject(result, &context_object)))
./wine-hotfixes/media_foundation_alpha.patch:1687:+        IMFAsyncResult_AddRef(handler_result->result);
./wine-hotfixes/media_foundation_alpha.patch:1704:+    IMFAsyncResult_SetStatus(caller, hr);
./wine-hotfixes/media_foundation_alpha.patch:1705:+    MFInvokeCallback(caller);
./wine-hotfixes/media_foundation_alpha.patch:1710:+static const IMFAsyncCallbackVtbl container_stream_handler_callback_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:1734:+    this->IMFByteStreamHandler_iface.lpVtbl = &container_stream_handler_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:1735:+    this->IMFAsyncCallback_iface.lpVtbl = &container_stream_handler_callback_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:1738:+    hr = IMFByteStreamHandler_QueryInterface(&this->IMFByteStreamHandler_iface, riid, obj);
./wine-hotfixes/media_foundation_alpha.patch:1739:+    IMFByteStreamHandler_Release(&this->IMFByteStreamHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:1744:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:1746:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:1747:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:1763:     { &CLSID_VideoProcessorMFT, &video_processor_create },
./wine-hotfixes/media_foundation_alpha.patch:1767: HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:1768:@@ -414,6 +420,9 @@ HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:1826: coclass VideoProcessorMFT {}
./wine-hotfixes/media_foundation_alpha.patch:1834:diff --git a/include/mfidl.idl b/include/mfidl.idl
./wine-hotfixes/media_foundation_alpha.patch:1836:--- a/include/mfidl.idl
./wine-hotfixes/media_foundation_alpha.patch:1837:+++ b/include/mfidl.idl
./wine-hotfixes/media_foundation_alpha.patch:1838:@@ -1128,3 +1128,4 @@ cpp_quote("EXTERN_GUID(MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ROLE, 0x6ba644ff, 0x
./wine-hotfixes/media_foundation_alpha.patch:1839: cpp_quote("EXTERN_GUID(MF_AUDIO_RENDERER_ATTRIBUTE_STREAM_CATEGORY, 0xa9770471, 0x92ec, 0x4df4, 0x94, 0xfe, 0x81, 0xc3, 0x6f, 0x0c, 0x3a, 0x7a);")
./wine-hotfixes/media_foundation_alpha.patch:1841: cpp_quote("EXTERN_GUID(CLSID_VideoProcessorMFT, 0x88753b26, 0x5b24, 0x49bd, 0xb2, 0xe7, 0xc, 0x44, 0x5c, 0x78, 0xc9, 0x82);")
./wine-hotfixes/media_foundation_alpha.patch:1850:Subject: [PATCH 05/40] winegstreamer: Implement IMFMediaSource::Shutdown.
./wine-hotfixes/media_foundation_alpha.patch:1854: dlls/mfplat/tests/mfplat.c        |  2 +-
./wine-hotfixes/media_foundation_alpha.patch:1858:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:1860:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:1861:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:1863:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/media_foundation_alpha.patch:1864:     IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/media_foundation_alpha.patch:1867:     hr = IMFMediaSource_Shutdown(mediasource);
./wine-hotfixes/media_foundation_alpha.patch:1870:     hr = IMFMediaSource_CreatePresentationDescriptor(mediasource, NULL);
./wine-hotfixes/media_foundation_alpha.patch:1871:     ok(hr == MF_E_SHUTDOWN, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:1874:     IMFMediaSource_Release(mediasource);
./wine-hotfixes/media_foundation_alpha.patch:1875:     IMFByteStream_Release(stream);
./wine-hotfixes/media_foundation_alpha.patch:1882:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:1884:     IMFMediaEventQueue *event_queue;
./wine-hotfixes/media_foundation_alpha.patch:1895: static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:1896:@@ -81,6 +89,9 @@ static HRESULT WINAPI media_source_GetEvent(IMFMediaSource *iface, DWORD flags,
./wine-hotfixes/media_foundation_alpha.patch:1901:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:1903:     return IMFMediaEventQueue_GetEvent(source->event_queue, flags, event);
./wine-hotfixes/media_foundation_alpha.patch:1906:@@ -90,6 +101,9 @@ static HRESULT WINAPI media_source_BeginGetEvent(IMFMediaSource *iface, IMFAsync
./wine-hotfixes/media_foundation_alpha.patch:1911:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:1913:     return IMFMediaEventQueue_BeginGetEvent(source->event_queue, callback, state);
./wine-hotfixes/media_foundation_alpha.patch:1916:@@ -99,6 +113,9 @@ static HRESULT WINAPI media_source_EndGetEvent(IMFMediaSource *iface, IMFAsyncRe
./wine-hotfixes/media_foundation_alpha.patch:1921:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:1923:     return IMFMediaEventQueue_EndGetEvent(source->event_queue, result, event);
./wine-hotfixes/media_foundation_alpha.patch:1926:@@ -109,6 +126,9 @@ static HRESULT WINAPI media_source_QueueEvent(IMFMediaSource *iface, MediaEventT
./wine-hotfixes/media_foundation_alpha.patch:1931:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:1933:     return IMFMediaEventQueue_QueueEventParamVar(source->event_queue, event_type, ext_type, hr, value);
./wine-hotfixes/media_foundation_alpha.patch:1936:@@ -118,6 +138,9 @@ static HRESULT WINAPI media_source_GetCharacteristics(IMFMediaSource *iface, DWO
./wine-hotfixes/media_foundation_alpha.patch:1941:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:1946:@@ -127,6 +150,9 @@ static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *
./wine-hotfixes/media_foundation_alpha.patch:1951:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:1956:@@ -137,6 +163,9 @@ static HRESULT WINAPI media_source_Start(IMFMediaSource *iface, IMFPresentationD
./wine-hotfixes/media_foundation_alpha.patch:1961:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:1966:@@ -146,6 +175,9 @@ static HRESULT WINAPI media_source_Stop(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:1971:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:1976:@@ -170,9 +202,10 @@ static HRESULT WINAPI media_source_Shutdown(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:1978:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:1988: static const IMFMediaSourceVtbl IMFMediaSource_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:1989:@@ -203,6 +236,8 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:1990:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/media_foundation_alpha.patch:1995:     object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:2139: #include "mfapi.h"
./wine-hotfixes/media_foundation_alpha.patch:2140: #include "mferror.h"
./wine-hotfixes/media_foundation_alpha.patch:2141: #include "mfidl.h"
./wine-hotfixes/media_foundation_alpha.patch:2142:+#include "mfobjects.h"
./wine-hotfixes/media_foundation_alpha.patch:2148: WINE_DEFAULT_DEBUG_CHANNEL(mfplat);
./wine-hotfixes/media_foundation_alpha.patch:2162:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:2165:     IMFMediaEventQueue *event_queue;
./wine-hotfixes/media_foundation_alpha.patch:2166:+    IMFByteStream *byte_stream;
./wine-hotfixes/media_foundation_alpha.patch:2171:@@ -35,6 +54,154 @@ static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *ifac
./wine-hotfixes/media_foundation_alpha.patch:2172:     return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:2179:+    IMFByteStream *byte_stream = source->byte_stream;
./wine-hotfixes/media_foundation_alpha.patch:2189:+        if (FAILED(IMFByteStream_SetCurrentPosition(byte_stream, ofs)))
./wine-hotfixes/media_foundation_alpha.patch:2193:+    if (FAILED(IMFByteStream_IsEndOfStream(byte_stream, &is_eof)))
./wine-hotfixes/media_foundation_alpha.patch:2201:+    hr = IMFByteStream_Read(byte_stream, info.data, len, &bytes_read);
./wine-hotfixes/media_foundation_alpha.patch:2222:+    if (FAILED(IMFByteStream_GetLength(source->byte_stream, &bytestream_len)))
./wine-hotfixes/media_foundation_alpha.patch:2237:+                IMFByteStream_GetLength(source->byte_stream, &length);
./wine-hotfixes/media_foundation_alpha.patch:2323: static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/media_foundation_alpha.patch:2325:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:2326:@@ -187,13 +354,20 @@ static HRESULT WINAPI media_source_Pause(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:2331:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:2341:         IMFMediaEventQueue_Release(source->event_queue);
./wine-hotfixes/media_foundation_alpha.patch:2343:+        IMFByteStream_Release(source->byte_stream);
./wine-hotfixes/media_foundation_alpha.patch:2347:@@ -227,19 +401,35 @@ static const IMFMediaSourceVtbl IMFMediaSource_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:2349: static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_type type, struct media_source **out_media_source)
./wine-hotfixes/media_foundation_alpha.patch:2352:+        "mf_src",
./wine-hotfixes/media_foundation_alpha.patch:2363:+    object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:2367:+    IMFByteStream_AddRef(bytestream);
./wine-hotfixes/media_foundation_alpha.patch:2369:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/media_foundation_alpha.patch:2373:+    object->my_src = gst_pad_new_from_static_template(&src_template, "mf-src");
./wine-hotfixes/media_foundation_alpha.patch:2380:-    object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:2386:@@ -249,6 +439,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:2395:     IMFByteStreamHandler_Release(&this->IMFByteStreamHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:2506:     IMFMediaEventQueue *event_queue;
./wine-hotfixes/media_foundation_alpha.patch:2507:     IMFByteStream *byte_stream;
./wine-hotfixes/media_foundation_alpha.patch:2553: static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/media_foundation_alpha.patch:2555:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:2568:         IMFMediaEventQueue_Release(source->event_queue);
./wine-hotfixes/media_foundation_alpha.patch:2570:@@ -408,7 +451,10 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:2581:@@ -422,6 +468,11 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:2582:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/media_foundation_alpha.patch:2590:     object->my_src = gst_pad_new_from_static_template(&src_template, "mf-src");
./wine-hotfixes/media_foundation_alpha.patch:2593:@@ -429,6 +480,44 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:2638:@@ -437,6 +526,8 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:2640:     WARN("Failed to construct MFMediaSource, hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:2667: IMFMediaStreams.
./wine-hotfixes/media_foundation_alpha.patch:2784:+    IMFMediaStream IMFMediaStream_iface;
./wine-hotfixes/media_foundation_alpha.patch:2787:+    IMFMediaEventQueue *event_queue;
./wine-hotfixes/media_foundation_alpha.patch:2788:+    IMFStreamDescriptor *descriptor;
./wine-hotfixes/media_foundation_alpha.patch:2804:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:2812:+static inline struct media_stream *impl_from_IMFMediaStream(IMFMediaStream *iface)
./wine-hotfixes/media_foundation_alpha.patch:2814:+    return CONTAINING_RECORD(iface, struct media_stream, IMFMediaStream_iface);
./wine-hotfixes/media_foundation_alpha.patch:2817: static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:2819:     return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:2862:+        IMFStreamDescriptor *descriptor = source->streams[i]->descriptor;
./wine-hotfixes/media_foundation_alpha.patch:2864:+        if (FAILED(IMFStreamDescriptor_GetStreamIdentifier(descriptor, &existing_stream_id)))
./wine-hotfixes/media_foundation_alpha.patch:2940:+static HRESULT WINAPI media_stream_QueryInterface(IMFMediaStream *iface, REFIID riid, void **out)
./wine-hotfixes/media_foundation_alpha.patch:2942:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:2946:+    if (IsEqualIID(riid, &IID_IMFMediaStream) ||
./wine-hotfixes/media_foundation_alpha.patch:2947:+        IsEqualIID(riid, &IID_IMFMediaEventGenerator) ||
./wine-hotfixes/media_foundation_alpha.patch:2950:+        *out = &stream->IMFMediaStream_iface;
./wine-hotfixes/media_foundation_alpha.patch:2963:+static ULONG WINAPI media_stream_AddRef(IMFMediaStream *iface)
./wine-hotfixes/media_foundation_alpha.patch:2965:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:2973:+static ULONG WINAPI media_stream_Release(IMFMediaStream *iface)
./wine-hotfixes/media_foundation_alpha.patch:2975:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:2989:+            IMFStreamDescriptor_Release(stream->descriptor);
./wine-hotfixes/media_foundation_alpha.patch:2991:+            IMFMediaEventQueue_Release(stream->event_queue);
./wine-hotfixes/media_foundation_alpha.patch:2993:+            IMFMediaSource_Release(&stream->parent_source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:3001:+static HRESULT WINAPI media_stream_GetEvent(IMFMediaStream *iface, DWORD flags, IMFMediaEvent **event)
./wine-hotfixes/media_foundation_alpha.patch:3003:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:3008:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:3010:+    return IMFMediaEventQueue_GetEvent(stream->event_queue, flags, event);
./wine-hotfixes/media_foundation_alpha.patch:3013:+static HRESULT WINAPI media_stream_BeginGetEvent(IMFMediaStream *iface, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/media_foundation_alpha.patch:3015:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:3020:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:3022:+    return IMFMediaEventQueue_BeginGetEvent(stream->event_queue, callback, state);
./wine-hotfixes/media_foundation_alpha.patch:3025:+static HRESULT WINAPI media_stream_EndGetEvent(IMFMediaStream *iface, IMFAsyncResult *result, IMFMediaEvent **event)
./wine-hotfixes/media_foundation_alpha.patch:3027:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:3032:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:3034:+    return IMFMediaEventQueue_EndGetEvent(stream->event_queue, result, event);
./wine-hotfixes/media_foundation_alpha.patch:3037:+static HRESULT WINAPI media_stream_QueueEvent(IMFMediaStream *iface, MediaEventType event_type, REFGUID ext_type,
./wine-hotfixes/media_foundation_alpha.patch:3040:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:3045:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:3047:+    return IMFMediaEventQueue_QueueEventParamVar(stream->event_queue, event_type, ext_type, hr, value);
./wine-hotfixes/media_foundation_alpha.patch:3050:+static HRESULT WINAPI media_stream_GetMediaSource(IMFMediaStream *iface, IMFMediaSource **source)
./wine-hotfixes/media_foundation_alpha.patch:3052:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:3057:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:3062:+static HRESULT WINAPI media_stream_GetStreamDescriptor(IMFMediaStream* iface, IMFStreamDescriptor **descriptor)
./wine-hotfixes/media_foundation_alpha.patch:3064:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:3069:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:3074:+static HRESULT WINAPI media_stream_RequestSample(IMFMediaStream *iface, IUnknown *token)
./wine-hotfixes/media_foundation_alpha.patch:3076:+    struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:3081:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:3086:+static const IMFMediaStreamVtbl media_stream_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:3107:+    object->IMFMediaStream_iface.lpVtbl = &media_stream_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:3110:+    IMFMediaSource_AddRef(&source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:3116:+    if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/media_foundation_alpha.patch:3146:+    IMFMediaStream_Release(&object->IMFMediaStream_iface);
./wine-hotfixes/media_foundation_alpha.patch:3150: static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID riid, void **out)
./wine-hotfixes/media_foundation_alpha.patch:3152:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:3155:         IMFByteStream_Release(source->byte_stream);
./wine-hotfixes/media_foundation_alpha.patch:3160:+        IMFMediaStream_Release(&source->streams[i]->IMFMediaStream_iface);
./wine-hotfixes/media_foundation_alpha.patch:3172:@@ -464,6 +824,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:3175:     IMFByteStream_AddRef(bytestream);
./wine-hotfixes/media_foundation_alpha.patch:3178:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/media_foundation_alpha.patch:3180:@@ -509,6 +870,10 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:3191:@@ -518,6 +883,21 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:3251: IMFMediaStream::GetStreamDescriptor.
./wine-hotfixes/media_foundation_alpha.patch:3257: dlls/winegstreamer/mfplat.c       | 186 ++++++++++++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:3268:+#include "mfobjects.h"
./wine-hotfixes/media_foundation_alpha.patch:3274: extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj) DECLSPEC_HIDDEN;
./wine-hotfixes/media_foundation_alpha.patch:3276:+GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/media_foundation_alpha.patch:3277:+IMFMediaType *mf_media_type_from_caps(GstCaps *caps);
./wine-hotfixes/media_foundation_alpha.patch:3286:@@ -507,7 +507,10 @@ static HRESULT WINAPI media_stream_GetStreamDescriptor(IMFMediaStream* iface, IM
./wine-hotfixes/media_foundation_alpha.patch:3288:         return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:3291:+    IMFStreamDescriptor_AddRef(stream->descriptor);
./wine-hotfixes/media_foundation_alpha.patch:3297: static HRESULT WINAPI media_stream_RequestSample(IMFMediaStream *iface, IUnknown *token)
./wine-hotfixes/media_foundation_alpha.patch:3298:@@ -539,6 +542,9 @@ static const IMFMediaStreamVtbl media_stream_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:3302:+    IMFMediaTypeHandler *type_handler = NULL;
./wine-hotfixes/media_foundation_alpha.patch:3303:+    IMFMediaType *stream_type = NULL;
./wine-hotfixes/media_foundation_alpha.patch:3315:+    if (TRACE_ON(mfplat))
./wine-hotfixes/media_foundation_alpha.patch:3322:+    if (!(stream_type = mf_media_type_from_caps(caps)))
./wine-hotfixes/media_foundation_alpha.patch:3328:+    if (FAILED(hr = MFCreateStreamDescriptor(stream_id, 1, &stream_type, &object->descriptor)))
./wine-hotfixes/media_foundation_alpha.patch:3331:+    if (FAILED(hr = IMFStreamDescriptor_GetMediaTypeHandler(object->descriptor, &type_handler)))
./wine-hotfixes/media_foundation_alpha.patch:3334:+    if (FAILED(hr = IMFMediaTypeHandler_SetCurrentMediaType(type_handler, stream_type)))
./wine-hotfixes/media_foundation_alpha.patch:3337:+    IMFMediaTypeHandler_Release(type_handler);
./wine-hotfixes/media_foundation_alpha.patch:3339:+    IMFMediaType_Release(stream_type);
./wine-hotfixes/media_foundation_alpha.patch:3352:+        IMFMediaType_Release(stream_type);
./wine-hotfixes/media_foundation_alpha.patch:3354:+        IMFMediaTypeHandler_Release(type_handler);
./wine-hotfixes/media_foundation_alpha.patch:3356:     IMFMediaStream_Release(&object->IMFMediaStream_iface);
./wine-hotfixes/media_foundation_alpha.patch:3359:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3361:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3362:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3375:@@ -442,3 +447,184 @@ HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:3387:+    {&MFVideoFormat_ARGB32,  GST_VIDEO_FORMAT_BGRA},
./wine-hotfixes/media_foundation_alpha.patch:3388:+    {&MFVideoFormat_RGB32,   GST_VIDEO_FORMAT_BGRx},
./wine-hotfixes/media_foundation_alpha.patch:3389:+    {&MFVideoFormat_RGB24,   GST_VIDEO_FORMAT_BGR},
./wine-hotfixes/media_foundation_alpha.patch:3390:+    {&MFVideoFormat_RGB565,  GST_VIDEO_FORMAT_BGR16},
./wine-hotfixes/media_foundation_alpha.patch:3391:+    {&MFVideoFormat_RGB555,  GST_VIDEO_FORMAT_BGR15},
./wine-hotfixes/media_foundation_alpha.patch:3395:+static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:3397:+    IMFMediaType *media_type;
./wine-hotfixes/media_foundation_alpha.patch:3401:+    if (TRACE_ON(mfplat))
./wine-hotfixes/media_foundation_alpha.patch:3408:+    if (FAILED(MFCreateMediaType(&media_type)))
./wine-hotfixes/media_foundation_alpha.patch:3425:+        IMFMediaType_SetGUID(media_type, &MF_MT_MAJOR_TYPE, &MFMediaType_Video);
./wine-hotfixes/media_foundation_alpha.patch:3427:+        IMFMediaType_SetUINT64(media_type, &MF_MT_FRAME_SIZE, ((UINT64)video_info.width << 32) | video_info.height);
./wine-hotfixes/media_foundation_alpha.patch:3429:+        IMFMediaType_SetUINT64(media_type, &MF_MT_FRAME_RATE, ((UINT64)video_info.fps_n << 32) | video_info.fps_d);
./wine-hotfixes/media_foundation_alpha.patch:3433:+            GUID fourcc_subtype = MFVideoFormat_Base;
./wine-hotfixes/media_foundation_alpha.patch:3436:+            IMFMediaType_SetUINT32(media_type, &MF_MT_COMPRESSED, FALSE);
./wine-hotfixes/media_foundation_alpha.patch:3441:+                IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &fourcc_subtype);
./wine-hotfixes/media_foundation_alpha.patch:3449:+                        IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, uncompressed_formats[i].subtype);
./wine-hotfixes/media_foundation_alpha.patch:3462:+        IMFMediaType_SetGUID(media_type, &MF_MT_MAJOR_TYPE, &MFMediaType_Audio);
./wine-hotfixes/media_foundation_alpha.patch:3476:+                    IMFMediaType_Release(media_type);
./wine-hotfixes/media_foundation_alpha.patch:3482:+                    IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_Float);
./wine-hotfixes/media_foundation_alpha.patch:3486:+                    IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_PCM);
./wine-hotfixes/media_foundation_alpha.patch:3495:+                    IMFMediaType_Release(media_type);
./wine-hotfixes/media_foundation_alpha.patch:3499:+                IMFMediaType_SetUINT32(media_type, &MF_MT_AUDIO_BITS_PER_SAMPLE, bits_per_sample);
./wine-hotfixes/media_foundation_alpha.patch:3517:+        IMFMediaType_Release(media_type);
./wine-hotfixes/media_foundation_alpha.patch:3525:+IMFMediaType *mf_media_type_from_caps(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:3528:+    IMFMediaType *ret;
./wine-hotfixes/media_foundation_alpha.patch:3535:+        IMFMediaType_Release(ret);
./wine-hotfixes/media_foundation_alpha.patch:3542:+GstCaps *make_mf_compatible_caps(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:3545:+    IMFMediaType *media_type;
./wine-hotfixes/media_foundation_alpha.patch:3550:+        IMFMediaType_Release(media_type);
./wine-hotfixes/media_foundation_alpha.patch:3571: dlls/winegstreamer/mfplat.c | 67 +++++++++++++++++++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:3574:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3576:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3577:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3580: #include "mfapi.h"
./wine-hotfixes/media_foundation_alpha.patch:3581: #include "mfidl.h"
./wine-hotfixes/media_foundation_alpha.patch:3586:@@ -525,6 +526,72 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:3594:+            IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_H264);
./wine-hotfixes/media_foundation_alpha.patch:3595:+            IMFMediaType_SetUINT32(media_type, &MF_MT_COMPRESSED, TRUE);
./wine-hotfixes/media_foundation_alpha.patch:3600:+                    IMFMediaType_SetUINT32(media_type, &MF_MT_MPEG2_PROFILE, eAVEncH264VProfile_Main);
./wine-hotfixes/media_foundation_alpha.patch:3602:+                    IMFMediaType_SetUINT32(media_type, &MF_MT_MPEG2_PROFILE, eAVEncH264VProfile_High);
./wine-hotfixes/media_foundation_alpha.patch:3604:+                    IMFMediaType_SetUINT32(media_type, &MF_MT_MPEG2_PROFILE, eAVEncH264VProfile_444);
./wine-hotfixes/media_foundation_alpha.patch:3639:+                        IMFMediaType_SetUINT32(media_type, &MF_MT_MPEG2_LEVEL, levels[i].val);
./wine-hotfixes/media_foundation_alpha.patch:3669: dlls/winegstreamer/mfplat.c | 44 +++++++++++++++++++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:3672:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3674:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3675:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3676:@@ -592,6 +592,50 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:3691:+                        IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_WMV1);
./wine-hotfixes/media_foundation_alpha.patch:3694:+                        IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_WMV2);
./wine-hotfixes/media_foundation_alpha.patch:3697:+                        IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_WMV3);
./wine-hotfixes/media_foundation_alpha.patch:3707:+                    IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_WVC1);
./wine-hotfixes/media_foundation_alpha.patch:3720:+                    IMFMediaType_SetBlob(media_type, &MF_MT_USER_DATA, codec_data_raw, codec_data_size);
./wine-hotfixes/media_foundation_alpha.patch:3737: dlls/winegstreamer/mfplat.c | 118 ++++++++++++++++++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:3740:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3742:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3743:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3745:     {&MFVideoFormat_RGB555,  GST_VIDEO_FORMAT_BGR15},
./wine-hotfixes/media_foundation_alpha.patch:3758: static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:3760:@@ -691,6 +700,115 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:3768:+            IMFMediaType_SetUINT32(media_type, &MF_MT_COMPRESSED, TRUE);
./wine-hotfixes/media_foundation_alpha.patch:3783:+                    IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_AAC);
./wine-hotfixes/media_foundation_alpha.patch:3810:+                            IMFMediaType_SetUINT32(media_type, &MF_MT_AUDIO_SAMPLES_PER_SECOND, rate);
./wine-hotfixes/media_foundation_alpha.patch:3815:+                            IMFMediaType_SetUINT32(media_type, &MF_MT_AUDIO_NUM_CHANNELS, channels);
./wine-hotfixes/media_foundation_alpha.patch:3833:+                            IMFMediaType_SetUINT32(media_type, &MF_MT_AAC_PAYLOAD_TYPE, payload_type);
./wine-hotfixes/media_foundation_alpha.patch:3861:+                        IMFMediaType_SetUINT32(media_type, &MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION, profile_level_indication);
./wine-hotfixes/media_foundation_alpha.patch:3865:+                    IMFMediaType_SetBlob(media_type, &MF_MT_USER_DATA, (BYTE *)user_data, sizeof(user_data) + asc_size);
./wine-hotfixes/media_foundation_alpha.patch:3886: dlls/winegstreamer/mfplat.c | 15 +++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:3889:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3891:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3892:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3893:@@ -645,6 +645,21 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:3904:+                    case 1: IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_MPG1); break;
./wine-hotfixes/media_foundation_alpha.patch:3905:+                    case 2: IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_MPEG2); break;
./wine-hotfixes/media_foundation_alpha.patch:3906:+                    case 4: IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFVideoFormat_M4S2); break;
./wine-hotfixes/media_foundation_alpha.patch:3910:+            IMFMediaType_SetUINT32(media_type, &MF_MT_COMPRESSED, TRUE);
./wine-hotfixes/media_foundation_alpha.patch:3922: IMFMediaSource::CreatePresentationDescriptor.
./wine-hotfixes/media_foundation_alpha.patch:3926: dlls/mfplat/tests/mfplat.c        |  8 +++----
./wine-hotfixes/media_foundation_alpha.patch:3930:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3932:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3933:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:3935:     ok(obj_type == MF_OBJECT_MEDIASOURCE, "got %d\n", obj_type);
./wine-hotfixes/media_foundation_alpha.patch:3937:     hr = IMFMediaSource_CreatePresentationDescriptor(mediasource, &descriptor);
./wine-hotfixes/media_foundation_alpha.patch:3944:     hr = IMFPresentationDescriptor_GetStreamDescriptorByIndex(descriptor, 0, &selected, &sd);
./wine-hotfixes/media_foundation_alpha.patch:3948:     hr = IMFMediaSource_Start(mediasource, descriptor, &GUID_NULL, &var);
./wine-hotfixes/media_foundation_alpha.patch:3954:     get_event((IMFMediaEventGenerator *)mediasource, MENewStream, &var);
./wine-hotfixes/media_foundation_alpha.patch:3958:     get_event((IMFMediaEventGenerator *)mediasource, MEEndOfPresentation, NULL);
./wine-hotfixes/media_foundation_alpha.patch:3961:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/media_foundation_alpha.patch:3962:     IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/media_foundation_alpha.patch:3965:     hr = IMFMediaSource_Shutdown(mediasource);
./wine-hotfixes/media_foundation_alpha.patch:3973:     IMFByteStream *byte_stream;
./wine-hotfixes/media_foundation_alpha.patch:3976:+    IMFPresentationDescriptor *pres_desc;
./wine-hotfixes/media_foundation_alpha.patch:3980:@@ -742,12 +743,19 @@ static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *
./wine-hotfixes/media_foundation_alpha.patch:3982:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:3988:         return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:3993:+        return MF_E_NOT_INITIALIZED;
./wine-hotfixes/media_foundation_alpha.patch:3996:+    IMFPresentationDescriptor_Clone(source->pres_desc, descriptor);
./wine-hotfixes/media_foundation_alpha.patch:4001: static HRESULT WINAPI media_source_Start(IMFMediaSource *iface, IMFPresentationDescriptor *descriptor,
./wine-hotfixes/media_foundation_alpha.patch:4007:+        IMFPresentationDescriptor_Release(source->pres_desc);
./wine-hotfixes/media_foundation_alpha.patch:4009:         IMFMediaEventQueue_Release(source->event_queue);
./wine-hotfixes/media_foundation_alpha.patch:4011:@@ -856,6 +866,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:4015:+    IMFStreamDescriptor **descriptors = NULL;
./wine-hotfixes/media_foundation_alpha.patch:4019:@@ -939,6 +950,25 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:4025:+    descriptors = heap_alloc(object->stream_count * sizeof(IMFStreamDescriptor*));
./wine-hotfixes/media_foundation_alpha.patch:4028:+        IMFMediaStream_GetStreamDescriptor(&object->streams[i]->IMFMediaStream_iface, &descriptors[i]);
./wine-hotfixes/media_foundation_alpha.patch:4031:+    if (FAILED(MFCreatePresentationDescriptor(object->stream_count, descriptors, &object->pres_desc)))
./wine-hotfixes/media_foundation_alpha.patch:4036:+        IMFPresentationDescriptor_SelectStream(object->pres_desc, i);
./wine-hotfixes/media_foundation_alpha.patch:4037:+        IMFStreamDescriptor_Release(descriptors[i]);
./wine-hotfixes/media_foundation_alpha.patch:4045:@@ -951,6 +981,8 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:4060:Subject: [PATCH 15/40] winegstreamer: Implement IMFMediaSource::Start.
./wine-hotfixes/media_foundation_alpha.patch:4064: dlls/mfplat/tests/mfplat.c        |   8 +-
./wine-hotfixes/media_foundation_alpha.patch:4068:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:4070:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:4071:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:4075:     hr = IMFMediaSource_Start(mediasource, descriptor, &GUID_NULL, &var);
./wine-hotfixes/media_foundation_alpha.patch:4081:     get_event((IMFMediaEventGenerator *)mediasource, MENewStream, &var);
./wine-hotfixes/media_foundation_alpha.patch:4084:         hr = IMFMediaStream_RequestSample(video_stream, NULL);
./wine-hotfixes/media_foundation_alpha.patch:4099:     hr = IMFMediaStream_RequestSample(video_stream, NULL);
./wine-hotfixes/media_foundation_alpha.patch:4100:     ok(hr == MF_E_END_OF_STREAM, "Unexpected hr %#x.\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:4101:-    IMFMediaStream_Release(video_stream);
./wine-hotfixes/media_foundation_alpha.patch:4103:     get_event((IMFMediaEventGenerator *)mediasource, MEEndOfPresentation, NULL);
./wine-hotfixes/media_foundation_alpha.patch:4106:+    IMFMediaStream_Release(video_stream);
./wine-hotfixes/media_foundation_alpha.patch:4107:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/media_foundation_alpha.patch:4108:     IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/media_foundation_alpha.patch:4135:+            IMFPresentationDescriptor *descriptor;
./wine-hotfixes/media_foundation_alpha.patch:4144:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:4145:+    IMFAsyncCallback async_commands_callback;
./wine-hotfixes/media_foundation_alpha.patch:4149:     IMFMediaEventQueue *event_queue;
./wine-hotfixes/media_foundation_alpha.patch:4150:     IMFByteStream *byte_stream;
./wine-hotfixes/media_foundation_alpha.patch:4151:@@ -87,6 +111,236 @@ static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *ifac
./wine-hotfixes/media_foundation_alpha.patch:4152:     return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:4155:+static inline struct media_source *impl_from_async_commands_callback_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:4222:+static HRESULT WINAPI callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:4226:+    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/media_foundation_alpha.patch:4230:+        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/media_foundation_alpha.patch:4239:+static HRESULT WINAPI callback_GetParameters(IMFAsyncCallback *iface,
./wine-hotfixes/media_foundation_alpha.patch:4245:+static ULONG WINAPI source_async_commands_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:4247:+    struct media_source *source = impl_from_async_commands_callback_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:4248:+    return IMFMediaSource_AddRef(&source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:4251:+static ULONG WINAPI source_async_commands_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:4253:+    struct media_source *source = impl_from_async_commands_callback_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:4254:+    return IMFMediaSource_Release(&source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:4257:+static IMFStreamDescriptor *stream_descriptor_from_id(IMFPresentationDescriptor *pres_desc, DWORD id, BOOL *selected)
./wine-hotfixes/media_foundation_alpha.patch:4260:+    IMFStreamDescriptor *ret;
./wine-hotfixes/media_foundation_alpha.patch:4262:+    if (FAILED(IMFPresentationDescriptor_GetStreamDescriptorCount(pres_desc, &sd_count)))
./wine-hotfixes/media_foundation_alpha.patch:4269:+        if (FAILED(IMFPresentationDescriptor_GetStreamDescriptorByIndex(pres_desc, i, selected, &ret)))
./wine-hotfixes/media_foundation_alpha.patch:4272:+        if (SUCCEEDED(IMFStreamDescriptor_GetStreamIdentifier(ret, &stream_id)) && stream_id == id)
./wine-hotfixes/media_foundation_alpha.patch:4275:+        IMFStreamDescriptor_Release(ret);
./wine-hotfixes/media_foundation_alpha.patch:4296:+        IMFStreamDescriptor *sd;
./wine-hotfixes/media_foundation_alpha.patch:4303:+        IMFStreamDescriptor_GetStreamIdentifier(stream->descriptor, &stream_id);
./wine-hotfixes/media_foundation_alpha.patch:4306:+        IMFStreamDescriptor_Release(sd);
./wine-hotfixes/media_foundation_alpha.patch:4327:+            IMFMediaEventQueue_QueueEventParamUnk(source->event_queue,
./wine-hotfixes/media_foundation_alpha.patch:4329:+            S_OK, (IUnknown*) &stream->IMFMediaStream_iface);
./wine-hotfixes/media_foundation_alpha.patch:4331:+            IMFMediaEventQueue_QueueEventParamVar(stream->event_queue,
./wine-hotfixes/media_foundation_alpha.patch:4336:+    IMFMediaEventQueue_QueueEventParamVar(source->event_queue,
./wine-hotfixes/media_foundation_alpha.patch:4348:+static HRESULT WINAPI source_async_commands_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/media_foundation_alpha.patch:4350:+    struct media_source *source = impl_from_async_commands_callback_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:4358:+    if (FAILED(hr = IMFAsyncResult_GetState(result, &state)))
./wine-hotfixes/media_foundation_alpha.patch:4376:+static const IMFAsyncCallbackVtbl source_async_commands_callback_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:4388:@@ -759,16 +1013,32 @@ static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *
./wine-hotfixes/media_foundation_alpha.patch:4391: static HRESULT WINAPI media_source_Start(IMFMediaSource *iface, IMFPresentationDescriptor *descriptor,
./wine-hotfixes/media_foundation_alpha.patch:4395:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:4403:         return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:4408:+        return MF_E_UNSUPPORTED_TIME_FORMAT;
./wine-hotfixes/media_foundation_alpha.patch:4417:+        hr = MFPutWorkItem(source->async_commands_queue, &source->async_commands_callback, &command->IUnknown_iface);
./wine-hotfixes/media_foundation_alpha.patch:4423: static HRESULT WINAPI media_source_Stop(IMFMediaSource *iface)
./wine-hotfixes/media_foundation_alpha.patch:4429:+        MFUnlockWorkQueue(source->async_commands_queue);
./wine-hotfixes/media_foundation_alpha.patch:4434:@@ -874,6 +1147,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:4437:     object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:4442:@@ -883,6 +1157,9 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:4443:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/media_foundation_alpha.patch:4446:+    if (FAILED(hr = MFAllocateWorkQueue(&object->async_commands_queue)))
./wine-hotfixes/media_foundation_alpha.patch:4480:@@ -794,12 +793,99 @@ static const IMFMediaStreamVtbl media_stream_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:4486:+static HRESULT media_stream_align_with_mf(struct media_stream *stream, IMFMediaType **stream_type)
./wine-hotfixes/media_foundation_alpha.patch:4495:+    if (!(target_caps = make_mf_compatible_caps(source_caps)))
./wine-hotfixes/media_foundation_alpha.patch:4498:+    if (TRACE_ON(mfplat))
./wine-hotfixes/media_foundation_alpha.patch:4559:+    *stream_type = mf_media_type_from_caps(target_caps);
./wine-hotfixes/media_foundation_alpha.patch:4575:     IMFMediaTypeHandler *type_handler = NULL;
./wine-hotfixes/media_foundation_alpha.patch:4576:     IMFMediaType *stream_type = NULL;
./wine-hotfixes/media_foundation_alpha.patch:4586:+    if (FAILED(hr = media_stream_align_with_mf(object, &stream_type)))
./wine-hotfixes/media_foundation_alpha.patch:4589:-    if (TRACE_ON(mfplat))
./wine-hotfixes/media_foundation_alpha.patch:4596:-    if (!(stream_type = mf_media_type_from_caps(caps)))
./wine-hotfixes/media_foundation_alpha.patch:4602:     if (FAILED(hr = MFCreateStreamDescriptor(stream_id, 1, &stream_type, &object->descriptor)))
./wine-hotfixes/media_foundation_alpha.patch:4606:     IMFMediaType_Release(stream_type);
./wine-hotfixes/media_foundation_alpha.patch:4629:         IMFMediaType_Release(stream_type);
./wine-hotfixes/media_foundation_alpha.patch:4637:Subject: [PATCH 17/40] winegstreamer: Implement IMFMediaStream::RequestSample.
./wine-hotfixes/media_foundation_alpha.patch:4641: dlls/mfplat/tests/mfplat.c        |   4 -
./wine-hotfixes/media_foundation_alpha.patch:4644: dlls/winegstreamer/mfplat.c       |  90 +++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:4647:diff --git a/dlls/mfplat/tests/mfplat.c b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:4649:--- a/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:4650:+++ b/dlls/mfplat/tests/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:4652:         hr = IMFMediaStream_RequestSample(video_stream, NULL);
./wine-hotfixes/media_foundation_alpha.patch:4667:     get_event((IMFMediaEventGenerator *)mediasource, MEEndOfPresentation, NULL);
./wine-hotfixes/media_foundation_alpha.patch:4670:     IMFMediaStream_Release(video_stream);
./wine-hotfixes/media_foundation_alpha.patch:4671:     IMFMediaTypeHandler_Release(handler);
./wine-hotfixes/media_foundation_alpha.patch:4672:     IMFPresentationDescriptor_Release(descriptor);
./wine-hotfixes/media_foundation_alpha.patch:4677:@@ -57,6 +57,7 @@ extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:4679: GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/media_foundation_alpha.patch:4680: IMFMediaType *mf_media_type_from_caps(GstCaps *caps);
./wine-hotfixes/media_foundation_alpha.patch:4681:+IMFSample *mf_sample_from_gst_buffer(GstBuffer *in);
./wine-hotfixes/media_foundation_alpha.patch:4732:+    IMFMediaEventQueue_QueueEventParamVar(source->event_queue, MEEndOfPresentation, &GUID_NULL, S_OK, &empty);
./wine-hotfixes/media_foundation_alpha.patch:4740:+    IMFSample *sample;
./wine-hotfixes/media_foundation_alpha.patch:4751:+        IMFMediaEventQueue_QueueEventParamVar(stream->event_queue, MEEndOfStream, &GUID_NULL, S_OK, &empty_var);
./wine-hotfixes/media_foundation_alpha.patch:4762:+    if (TRACE_ON(mfplat))
./wine-hotfixes/media_foundation_alpha.patch:4781:+    sample = mf_sample_from_gst_buffer(buffer);
./wine-hotfixes/media_foundation_alpha.patch:4785:+        IMFSample_SetUnknown(sample, &MFSampleExtension_Token, token);
./wine-hotfixes/media_foundation_alpha.patch:4787:+    IMFMediaEventQueue_QueueEventParamUnk(stream->event_queue, MEMediaSample, &GUID_NULL, S_OK, (IUnknown *)sample);
./wine-hotfixes/media_foundation_alpha.patch:4794: static HRESULT WINAPI source_async_commands_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/media_foundation_alpha.patch:4796:     struct media_source *source = impl_from_async_commands_callback_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:4797:@@ -323,6 +405,9 @@ static HRESULT WINAPI source_async_commands_Invoke(IMFAsyncCallback *iface, IMFA
./wine-hotfixes/media_foundation_alpha.patch:4807:@@ -345,12 +430,17 @@ static const IMFAsyncCallbackVtbl source_async_commands_callback_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:4829:@@ -685,6 +775,8 @@ static ULONG WINAPI media_stream_Release(IMFMediaStream *iface)
./wine-hotfixes/media_foundation_alpha.patch:4831:             IMFMediaSource_Release(&stream->parent_source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:4838:@@ -770,13 +862,37 @@ static HRESULT WINAPI media_stream_GetStreamDescriptor(IMFMediaStream* iface, IM
./wine-hotfixes/media_foundation_alpha.patch:4839: static HRESULT WINAPI media_stream_RequestSample(IMFMediaStream *iface, IUnknown *token)
./wine-hotfixes/media_foundation_alpha.patch:4841:     struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:4848:         return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:4854:+        return MF_E_MEDIA_SOURCE_WRONGSTATE;
./wine-hotfixes/media_foundation_alpha.patch:4859:+        return MF_E_END_OF_STREAM;
./wine-hotfixes/media_foundation_alpha.patch:4870:+        hr = MFPutWorkItem(stream->parent_source->async_commands_queue, &stream->parent_source->async_commands_callback, &command->IUnknown_iface);
./wine-hotfixes/media_foundation_alpha.patch:4876: static const IMFMediaStreamVtbl media_stream_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:4884:     if (FAILED(hr = MFCreateEventQueue(&object->event_queue)))
./wine-hotfixes/media_foundation_alpha.patch:4886:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:4888:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:4889:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:4890:@@ -871,4 +871,94 @@ GstCaps *make_mf_compatible_caps(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:4896:+/* IMFSample = GstBuffer
./wine-hotfixes/media_foundation_alpha.patch:4897:+   IMFBuffer = GstMemory */
./wine-hotfixes/media_foundation_alpha.patch:4900:+   IMFMediaBuffer wrapper around GstMemory, and to utilize
./wine-hotfixes/media_foundation_alpha.patch:4901:+   gst_memory_new_wrapped on IMFMediaBuffer data.  However,
./wine-hotfixes/media_foundation_alpha.patch:4905:+IMFSample* mf_sample_from_gst_buffer(GstBuffer *gst_buffer)
./wine-hotfixes/media_foundation_alpha.patch:4907:+    IMFSample *out = NULL;
./wine-hotfixes/media_foundation_alpha.patch:4912:+    if (FAILED(hr = MFCreateSample(&out)))
./wine-hotfixes/media_foundation_alpha.patch:4918:+    if (FAILED(IMFSample_SetSampleDuration(out, duration / 100)))
./wine-hotfixes/media_foundation_alpha.patch:4921:+    if (FAILED(IMFSample_SetSampleTime(out, time / 100)))
./wine-hotfixes/media_foundation_alpha.patch:4929:+        IMFMediaBuffer *mf_buffer = NULL;
./wine-hotfixes/media_foundation_alpha.patch:4945:+        if (FAILED(hr = MFCreateMemoryBuffer(map_info.maxsize, &mf_buffer)))
./wine-hotfixes/media_foundation_alpha.patch:4951:+        if (FAILED(hr = IMFMediaBuffer_Lock(mf_buffer, &buf_data, NULL, NULL)))
./wine-hotfixes/media_foundation_alpha.patch:4961:+        if (FAILED(hr = IMFMediaBuffer_Unlock(mf_buffer)))
./wine-hotfixes/media_foundation_alpha.patch:4964:+        if (FAILED(hr = IMFMediaBuffer_SetCurrentLength(mf_buffer, map_info.size)))
./wine-hotfixes/media_foundation_alpha.patch:4967:+        if (FAILED(hr = IMFSample_AddBuffer(out, mf_buffer)))
./wine-hotfixes/media_foundation_alpha.patch:4971:+        if (mf_buffer)
./wine-hotfixes/media_foundation_alpha.patch:4972:+            IMFMediaBuffer_Release(mf_buffer);
./wine-hotfixes/media_foundation_alpha.patch:4981:+    ERR("Failed to copy IMFSample to GstBuffer, hr = %#x\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:4982:+    IMFSample_Release(out);
./wine-hotfixes/media_foundation_alpha.patch:4993: IMFMediaSource::GetCharacteristics.
./wine-hotfixes/media_foundation_alpha.patch:5004:@@ -1171,12 +1171,14 @@ static HRESULT WINAPI media_source_GetCharacteristics(IMFMediaSource *iface, DWO
./wine-hotfixes/media_foundation_alpha.patch:5006:     struct media_source *source = impl_from_IMFMediaSource(iface);
./wine-hotfixes/media_foundation_alpha.patch:5012:         return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:5015:+    *characteristics = MFMEDIASOURCE_CAN_SEEK;
./wine-hotfixes/media_foundation_alpha.patch:5020: static HRESULT WINAPI media_source_CreatePresentationDescriptor(IMFMediaSource *iface, IMFPresentationDescriptor **descriptor)
./wine-hotfixes/media_foundation_alpha.patch:5027:Subject: [PATCH 19/40] winegstreamer: Calculate the MF_PD_DURATION of the
./wine-hotfixes/media_foundation_alpha.patch:5039:@@ -1434,6 +1434,46 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:5045:+        IMFAttributes *byte_stream_attributes;
./wine-hotfixes/media_foundation_alpha.patch:5048:+        if (SUCCEEDED(IMFByteStream_QueryInterface(object->byte_stream, &IID_IMFAttributes, (void **)&byte_stream_attributes)))
./wine-hotfixes/media_foundation_alpha.patch:5052:+            if (SUCCEEDED(IMFAttributes_GetAllocatedString(byte_stream_attributes, &MF_BYTESTREAM_CONTENT_TYPE, &mimeW, &length)))
./wine-hotfixes/media_foundation_alpha.patch:5054:+                IMFPresentationDescriptor_SetString(object->pres_desc, &MF_PD_MIME_TYPE, mimeW);
./wine-hotfixes/media_foundation_alpha.patch:5055:+                CoTaskMemFree(mimeW);
./wine-hotfixes/media_foundation_alpha.patch:5057:+            IMFAttributes_Release(byte_stream_attributes);
./wine-hotfixes/media_foundation_alpha.patch:5080:+            IMFPresentationDescriptor_SetUINT64(object->pres_desc, &MF_PD_DURATION, total_pres_time / 100);
./wine-hotfixes/media_foundation_alpha.patch:5266:Subject: [PATCH 21/40] mf: Introduce handler helper.
./wine-hotfixes/media_foundation_alpha.patch:5270: dlls/mf/Makefile.in               |   1 +
./wine-hotfixes/media_foundation_alpha.patch:5271: dlls/mf/handler.c                 | 360 ++++++++++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:5272: dlls/mf/handler.h                 |  30 +++
./wine-hotfixes/media_foundation_alpha.patch:5273: dlls/mf/main.c                    | 373 ++++--------------------------
./wine-hotfixes/media_foundation_alpha.patch:5277: create mode 100644 dlls/mf/handler.c
./wine-hotfixes/media_foundation_alpha.patch:5278: create mode 100644 dlls/mf/handler.h
./wine-hotfixes/media_foundation_alpha.patch:5280:diff --git a/dlls/mf/Makefile.in b/dlls/mf/Makefile.in
./wine-hotfixes/media_foundation_alpha.patch:5282:--- a/dlls/mf/Makefile.in
./wine-hotfixes/media_foundation_alpha.patch:5283:+++ b/dlls/mf/Makefile.in
./wine-hotfixes/media_foundation_alpha.patch:5284:@@ -5,6 +5,7 @@ IMPORTS   = advapi32 mfplat ole32 uuid mfuuid
./wine-hotfixes/media_foundation_alpha.patch:5292:diff --git a/dlls/mf/handler.c b/dlls/mf/handler.c
./wine-hotfixes/media_foundation_alpha.patch:5296:+++ b/dlls/mf/handler.c
./wine-hotfixes/media_foundation_alpha.patch:5304:+#include "mfidl.h"
./wine-hotfixes/media_foundation_alpha.patch:5306:+#include "mfapi.h"
./wine-hotfixes/media_foundation_alpha.patch:5307:+#include "mferror.h"
./wine-hotfixes/media_foundation_alpha.patch:5315:+WINE_DEFAULT_DEBUG_CHANNEL(mfplat);
./wine-hotfixes/media_foundation_alpha.patch:5323:+    IMFByteStream *stream;
./wine-hotfixes/media_foundation_alpha.patch:5331:+    IMFAsyncResult *result;
./wine-hotfixes/media_foundation_alpha.patch:5332:+    MF_OBJECT_TYPE obj_type;
./wine-hotfixes/media_foundation_alpha.patch:5379:+            IMFByteStream_Release(context->stream);
./wine-hotfixes/media_foundation_alpha.patch:5396:+static struct handler *impl_from_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:5398:+    return CONTAINING_RECORD(iface, struct handler, IMFAsyncCallback_iface);
./wine-hotfixes/media_foundation_alpha.patch:5401:+static HRESULT WINAPI handler_callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:5403:+    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/media_foundation_alpha.patch:5407:+        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/media_foundation_alpha.patch:5417:+static ULONG WINAPI handler_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:5422:+static ULONG WINAPI handler_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:5427:+static HRESULT WINAPI handler_callback_GetParameters(IMFAsyncCallback *iface, DWORD *flags, DWORD *queue)
./wine-hotfixes/media_foundation_alpha.patch:5432:+static HRESULT WINAPI handler_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/media_foundation_alpha.patch:5434:+    struct handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:5436:+    MF_OBJECT_TYPE obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/media_foundation_alpha.patch:5439:+    IMFAsyncResult *caller;
./wine-hotfixes/media_foundation_alpha.patch:5442:+    caller = (IMFAsyncResult *)IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/media_foundation_alpha.patch:5444:+    if (FAILED(hr = IMFAsyncResult_GetObject(result, &context_object)))
./wine-hotfixes/media_foundation_alpha.patch:5458:+        IMFAsyncResult_AddRef(handler_result->result);
./wine-hotfixes/media_foundation_alpha.patch:5475:+    IMFAsyncResult_SetStatus(caller, hr);
./wine-hotfixes/media_foundation_alpha.patch:5476:+    MFInvokeCallback(caller);
./wine-hotfixes/media_foundation_alpha.patch:5481:+static const IMFAsyncCallbackVtbl handler_callback_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:5509:+HRESULT handler_begin_create_object(struct handler *handler, IMFByteStream *stream,
./wine-hotfixes/media_foundation_alpha.patch:5511:+        IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/media_foundation_alpha.patch:5514:+    IMFAsyncResult *caller, *item;
./wine-hotfixes/media_foundation_alpha.patch:5520:+    if (FAILED(hr = MFCreateAsyncResult(NULL, callback, state, &caller)))
./wine-hotfixes/media_foundation_alpha.patch:5526:+        IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:5538:+        IMFByteStream_AddRef(context->stream);
./wine-hotfixes/media_foundation_alpha.patch:5543:+        IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:5548:+    hr = MFCreateAsyncResult(&context->IUnknown_iface, &handler->IMFAsyncCallback_iface, (IUnknown *)caller, &item);
./wine-hotfixes/media_foundation_alpha.patch:5552:+        if (SUCCEEDED(hr = MFPutWorkItemEx(MFASYNC_CALLBACK_QUEUE_IO, item)))
./wine-hotfixes/media_foundation_alpha.patch:5561:+        IMFAsyncResult_Release(item);
./wine-hotfixes/media_foundation_alpha.patch:5563:+    IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:5568:+HRESULT handler_end_create_object(struct handler *handler, IMFAsyncResult *result,
./wine-hotfixes/media_foundation_alpha.patch:5569:+        MF_OBJECT_TYPE *obj_type, IUnknown **object)
./wine-hotfixes/media_foundation_alpha.patch:5592:+        hr = IMFAsyncResult_GetStatus(found->result);
./wine-hotfixes/media_foundation_alpha.patch:5593:+        IMFAsyncResult_Release(found->result);
./wine-hotfixes/media_foundation_alpha.patch:5598:+        *obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/media_foundation_alpha.patch:5600:+        hr = MF_E_UNEXPECTED;
./wine-hotfixes/media_foundation_alpha.patch:5626:+        IMFAsyncResult_Release(found->result);
./wine-hotfixes/media_foundation_alpha.patch:5632:+    return found ? S_OK : MF_E_UNEXPECTED;
./wine-hotfixes/media_foundation_alpha.patch:5637:+    handler->IMFAsyncCallback_iface.lpVtbl = &handler_callback_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:5651:+        IMFAsyncResult_Release(result->result);
./wine-hotfixes/media_foundation_alpha.patch:5659:diff --git a/dlls/mf/handler.h b/dlls/mf/handler.h
./wine-hotfixes/media_foundation_alpha.patch:5663:+++ b/dlls/mf/handler.h
./wine-hotfixes/media_foundation_alpha.patch:5667:+#include "mfidl.h"
./wine-hotfixes/media_foundation_alpha.patch:5668:+#include "mfapi.h"
./wine-hotfixes/media_foundation_alpha.patch:5669:+#include "mfobjects.h"
./wine-hotfixes/media_foundation_alpha.patch:5676:+typedef HRESULT (*p_create_object_callback)(struct handler *handler, WCHAR *url, IMFByteStream *stream, DWORD flags, IPropertyStore *props,
./wine-hotfixes/media_foundation_alpha.patch:5677:+                                            IUnknown **out_object, MF_OBJECT_TYPE *out_obj_type);
./wine-hotfixes/media_foundation_alpha.patch:5681:+    IMFAsyncCallback IMFAsyncCallback_iface;
./wine-hotfixes/media_foundation_alpha.patch:5689:+HRESULT handler_begin_create_object(struct handler *handler, IMFByteStream *stream,
./wine-hotfixes/media_foundation_alpha.patch:5691:+        IMFAsyncCallback *callback, IUnknown *state);
./wine-hotfixes/media_foundation_alpha.patch:5692:+HRESULT handler_end_create_object(struct handler *handler, IMFAsyncResult *result,
./wine-hotfixes/media_foundation_alpha.patch:5693:+        MF_OBJECT_TYPE *obj_type, IUnknown **object);
./wine-hotfixes/media_foundation_alpha.patch:5696:diff --git a/dlls/mf/main.c b/dlls/mf/main.c
./wine-hotfixes/media_foundation_alpha.patch:5698:--- a/dlls/mf/main.c
./wine-hotfixes/media_foundation_alpha.patch:5699:+++ b/dlls/mf/main.c
./wine-hotfixes/media_foundation_alpha.patch:5701: #include "mferror.h"
./wine-hotfixes/media_foundation_alpha.patch:5703: #include "mf_private.h"
./wine-hotfixes/media_foundation_alpha.patch:5715:-    IMFAsyncResult *result;
./wine-hotfixes/media_foundation_alpha.patch:5716:-    MF_OBJECT_TYPE obj_type;
./wine-hotfixes/media_foundation_alpha.patch:5722:     IMFSchemeHandler IMFSchemeHandler_iface;
./wine-hotfixes/media_foundation_alpha.patch:5723:-    IMFAsyncCallback IMFAsyncCallback_iface;
./wine-hotfixes/media_foundation_alpha.patch:5725:     IMFSourceResolver *resolver;
./wine-hotfixes/media_foundation_alpha.patch:5731: static struct file_scheme_handler *impl_from_IMFSchemeHandler(IMFSchemeHandler *iface)
./wine-hotfixes/media_foundation_alpha.patch:5732:@@ -579,11 +570,6 @@ static struct file_scheme_handler *impl_from_IMFSchemeHandler(IMFSchemeHandler *
./wine-hotfixes/media_foundation_alpha.patch:5733:     return CONTAINING_RECORD(iface, struct file_scheme_handler, IMFSchemeHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:5736:-static struct file_scheme_handler *impl_from_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:5738:-    return CONTAINING_RECORD(iface, struct file_scheme_handler, IMFAsyncCallback_iface);
./wine-hotfixes/media_foundation_alpha.patch:5741: static HRESULT WINAPI file_scheme_handler_QueryInterface(IMFSchemeHandler *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:5744:@@ -613,242 +599,45 @@ static ULONG WINAPI file_scheme_handler_AddRef(IMFSchemeHandler *iface)
./wine-hotfixes/media_foundation_alpha.patch:5746: static ULONG WINAPI file_scheme_handler_Release(IMFSchemeHandler *iface)
./wine-hotfixes/media_foundation_alpha.patch:5748:-    struct file_scheme_handler *handler = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:5751:+    struct file_scheme_handler *this = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:5761:-            IMFAsyncResult_Release(result->result);
./wine-hotfixes/media_foundation_alpha.patch:5768:-            IMFSourceResolver_Release(handler->resolver);
./wine-hotfixes/media_foundation_alpha.patch:5771:+            IMFSourceResolver_Release(this->resolver);
./wine-hotfixes/media_foundation_alpha.patch:5861: static HRESULT WINAPI file_scheme_handler_BeginCreateObject(IMFSchemeHandler *iface, const WCHAR *url, DWORD flags,
./wine-hotfixes/media_foundation_alpha.patch:5862:         IPropertyStore *props, IUnknown **cancel_cookie, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/media_foundation_alpha.patch:5864:-    struct file_scheme_handler *handler = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:5866:-    IMFAsyncResult *caller, *item;
./wine-hotfixes/media_foundation_alpha.patch:5868:+    struct file_scheme_handler *this = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:5875:-    if (FAILED(hr = MFCreateAsyncResult(NULL, callback, state, &caller)))
./wine-hotfixes/media_foundation_alpha.patch:5881:-        IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:5894:-        IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:5899:-    hr = MFCreateAsyncResult(&context->IUnknown_iface, &handler->IMFAsyncCallback_iface, (IUnknown *)caller, &item);
./wine-hotfixes/media_foundation_alpha.patch:5903:-        if (SUCCEEDED(hr = MFPutWorkItemEx(MFASYNC_CALLBACK_QUEUE_IO, item)))
./wine-hotfixes/media_foundation_alpha.patch:5912:-        IMFAsyncResult_Release(item);
./wine-hotfixes/media_foundation_alpha.patch:5914:-    IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:5920: static HRESULT WINAPI file_scheme_handler_EndCreateObject(IMFSchemeHandler *iface, IMFAsyncResult *result,
./wine-hotfixes/media_foundation_alpha.patch:5921:         MF_OBJECT_TYPE *obj_type, IUnknown **object)
./wine-hotfixes/media_foundation_alpha.patch:5923:-    struct file_scheme_handler *handler = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:5926:+    struct file_scheme_handler *this = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:5948:-        hr = IMFAsyncResult_GetStatus(found->result);
./wine-hotfixes/media_foundation_alpha.patch:5949:-        IMFAsyncResult_Release(found->result);
./wine-hotfixes/media_foundation_alpha.patch:5954:-        *obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/media_foundation_alpha.patch:5956:-        hr = MF_E_UNEXPECTED;
./wine-hotfixes/media_foundation_alpha.patch:5963: static HRESULT WINAPI file_scheme_handler_CancelObjectCreation(IMFSchemeHandler *iface, IUnknown *cancel_cookie)
./wine-hotfixes/media_foundation_alpha.patch:5965:-    struct file_scheme_handler *handler = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:5967:+    struct file_scheme_handler *this = impl_from_IMFSchemeHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:5987:-        IMFAsyncResult_Release(found->result);
./wine-hotfixes/media_foundation_alpha.patch:5993:-    return found ? S_OK : MF_E_UNEXPECTED;
./wine-hotfixes/media_foundation_alpha.patch:5997: static const IMFSchemeHandlerVtbl file_scheme_handler_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:5998:@@ -861,38 +650,6 @@ static const IMFSchemeHandlerVtbl file_scheme_handler_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:6002:-static HRESULT WINAPI file_scheme_handler_callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:6004:-    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/media_foundation_alpha.patch:6008:-        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/media_foundation_alpha.patch:6017:-static ULONG WINAPI file_scheme_handler_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:6019:-    struct file_scheme_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:6020:-    return IMFSchemeHandler_AddRef(&handler->IMFSchemeHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:6023:-static ULONG WINAPI file_scheme_handler_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:6025:-    struct file_scheme_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:6026:-    return IMFSchemeHandler_Release(&handler->IMFSchemeHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:6029:-static HRESULT WINAPI file_scheme_handler_callback_GetParameters(IMFAsyncCallback *iface, DWORD *flags, DWORD *queue)
./wine-hotfixes/media_foundation_alpha.patch:6034: static HRESULT file_scheme_handler_get_resolver(struct file_scheme_handler *handler, IMFSourceResolver **resolver)
./wine-hotfixes/media_foundation_alpha.patch:6041:-static HRESULT WINAPI file_scheme_handler_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/media_foundation_alpha.patch:6042:+static HRESULT file_scheme_handler_create_object(struct handler *handler, WCHAR *url, IMFByteStream *stream, DWORD flags,
./wine-hotfixes/media_foundation_alpha.patch:6043:+                                         IPropertyStore *props, IUnknown **out_object, MF_OBJECT_TYPE *out_obj_type)
./wine-hotfixes/media_foundation_alpha.patch:6046:-    struct file_scheme_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:6048:-    MF_OBJECT_TYPE obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/media_foundation_alpha.patch:6053:+    IMFByteStream *file_byte_stream;
./wine-hotfixes/media_foundation_alpha.patch:6055:     IMFSourceResolver *resolver;
./wine-hotfixes/media_foundation_alpha.patch:6056:-    IMFAsyncResult *caller;
./wine-hotfixes/media_foundation_alpha.patch:6057:-    IMFByteStream *stream;
./wine-hotfixes/media_foundation_alpha.patch:6061:-    caller = (IMFAsyncResult *)IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/media_foundation_alpha.patch:6063:-    if (FAILED(hr = IMFAsyncResult_GetObject(result, &context_object)))
./wine-hotfixes/media_foundation_alpha.patch:6071:     /* Strip from scheme, MFCreateFile() won't be expecting it. */
./wine-hotfixes/media_foundation_alpha.patch:6079:-    hr = MFCreateFile(context->flags & MF_RESOLUTION_WRITE ? MF_ACCESSMODE_READWRITE : MF_ACCESSMODE_READ,
./wine-hotfixes/media_foundation_alpha.patch:6080:-            MF_OPENMODE_FAIL_IF_NOT_EXIST, MF_FILEFLAGS_NONE, url, &stream);
./wine-hotfixes/media_foundation_alpha.patch:6081:+    hr = MFCreateFile(flags & MF_RESOLUTION_WRITE ? MF_ACCESSMODE_READWRITE : MF_ACCESSMODE_READ,
./wine-hotfixes/media_foundation_alpha.patch:6082:+            MF_OPENMODE_FAIL_IF_NOT_EXIST, MF_FILEFLAGS_NONE, path, &file_byte_stream);
./wine-hotfixes/media_foundation_alpha.patch:6085:-        if (context->flags & MF_RESOLUTION_MEDIASOURCE)
./wine-hotfixes/media_foundation_alpha.patch:6086:+        if (flags & MF_RESOLUTION_MEDIASOURCE)
./wine-hotfixes/media_foundation_alpha.patch:6091:-                hr = IMFSourceResolver_CreateObjectFromByteStream(resolver, stream, context->url, context->flags,
./wine-hotfixes/media_foundation_alpha.patch:6093:+                hr = IMFSourceResolver_CreateObjectFromByteStream(resolver, file_byte_stream, url, flags,
./wine-hotfixes/media_foundation_alpha.patch:6095:                 IMFSourceResolver_Release(resolver);
./wine-hotfixes/media_foundation_alpha.patch:6096:-                IMFByteStream_Release(stream);
./wine-hotfixes/media_foundation_alpha.patch:6097:+                IMFByteStream_Release(file_byte_stream);
./wine-hotfixes/media_foundation_alpha.patch:6103:-            obj_type = MF_OBJECT_BYTESTREAM;
./wine-hotfixes/media_foundation_alpha.patch:6105:+            *out_obj_type = MF_OBJECT_BYTESTREAM;
./wine-hotfixes/media_foundation_alpha.patch:6113:-        IMFAsyncResult_AddRef(handler_result->result);
./wine-hotfixes/media_foundation_alpha.patch:6130:-    IMFAsyncResult_SetStatus(caller, hr);
./wine-hotfixes/media_foundation_alpha.patch:6131:-    MFInvokeCallback(caller);
./wine-hotfixes/media_foundation_alpha.patch:6137:-static const IMFAsyncCallbackVtbl file_scheme_handler_callback_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:6160:-    handler->IMFSchemeHandler_iface.lpVtbl = &file_scheme_handler_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:6161:-    handler->IMFAsyncCallback_iface.lpVtbl = &file_scheme_handler_callback_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:6167:+    this->IMFSchemeHandler_iface.lpVtbl = &file_scheme_handler_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:6170:-    hr = IMFSchemeHandler_QueryInterface(&handler->IMFSchemeHandler_iface, riid, obj);
./wine-hotfixes/media_foundation_alpha.patch:6171:-    IMFSchemeHandler_Release(&handler->IMFSchemeHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:6172:+    hr = IMFSchemeHandler_QueryInterface(&this->IMFSchemeHandler_iface, riid, obj);
./wine-hotfixes/media_foundation_alpha.patch:6173:+    IMFSchemeHandler_Release(&this->IMFSchemeHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:6181:@@ -3,12 +3,13 @@ IMPORTS   = strmiids uuid ole32 mfuuid
./wine-hotfixes/media_foundation_alpha.patch:6182: DELAYIMPORTS = mfplat
./wine-hotfixes/media_foundation_alpha.patch:6186:+PARENTSRC = ../strmbase ../mf
./wine-hotfixes/media_foundation_alpha.patch:6208:@@ -1496,22 +1497,12 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:6210: /* IMFByteStreamHandler */
./wine-hotfixes/media_foundation_alpha.patch:6215:-    IMFAsyncResult *result;
./wine-hotfixes/media_foundation_alpha.patch:6216:-    MF_OBJECT_TYPE obj_type;
./wine-hotfixes/media_foundation_alpha.patch:6222:     IMFByteStreamHandler IMFByteStreamHandler_iface;
./wine-hotfixes/media_foundation_alpha.patch:6223:-    IMFAsyncCallback IMFAsyncCallback_iface;
./wine-hotfixes/media_foundation_alpha.patch:6231: static struct container_stream_handler *impl_from_IMFByteStreamHandler(IMFByteStreamHandler *iface)
./wine-hotfixes/media_foundation_alpha.patch:6232:@@ -1519,11 +1510,6 @@ static struct container_stream_handler *impl_from_IMFByteStreamHandler(IMFByteSt
./wine-hotfixes/media_foundation_alpha.patch:6233:     return CONTAINING_RECORD(iface, struct container_stream_handler, IMFByteStreamHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:6236:-static struct container_stream_handler *impl_from_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:6238:-    return CONTAINING_RECORD(iface, struct container_stream_handler, IMFAsyncCallback_iface);
./wine-hotfixes/media_foundation_alpha.patch:6241: static HRESULT WINAPI container_stream_handler_QueryInterface(IMFByteStreamHandler *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:6244:@@ -1553,248 +1539,44 @@ static ULONG WINAPI container_stream_handler_AddRef(IMFByteStreamHandler *iface)
./wine-hotfixes/media_foundation_alpha.patch:6246: static ULONG WINAPI container_stream_handler_Release(IMFByteStreamHandler *iface)
./wine-hotfixes/media_foundation_alpha.patch:6248:-    struct container_stream_handler *handler = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:6259:-            IMFAsyncResult_Release(result->result);
./wine-hotfixes/media_foundation_alpha.patch:6277:-    IMFByteStream *stream;
./wine-hotfixes/media_foundation_alpha.patch:6317:+    struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:6327:-            IMFByteStream_Release(context->stream);
./wine-hotfixes/media_foundation_alpha.patch:6362: static HRESULT WINAPI container_stream_handler_BeginCreateObject(IMFByteStreamHandler *iface, IMFByteStream *stream, const WCHAR *url, DWORD flags,
./wine-hotfixes/media_foundation_alpha.patch:6363:         IPropertyStore *props, IUnknown **cancel_cookie, IMFAsyncCallback *callback, IUnknown *state)
./wine-hotfixes/media_foundation_alpha.patch:6365:     struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:6367:-    IMFAsyncResult *caller, *item;
./wine-hotfixes/media_foundation_alpha.patch:6375:-    if (FAILED(hr = MFCreateAsyncResult(NULL, callback, state, &caller)))
./wine-hotfixes/media_foundation_alpha.patch:6381:-        IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:6393:-        IMFByteStream_AddRef(context->stream);
./wine-hotfixes/media_foundation_alpha.patch:6398:-        IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:6403:-    hr = MFCreateAsyncResult(&context->IUnknown_iface, &this->IMFAsyncCallback_iface, (IUnknown *)caller, &item);
./wine-hotfixes/media_foundation_alpha.patch:6407:-        if (SUCCEEDED(hr = MFPutWorkItemEx(MFASYNC_CALLBACK_QUEUE_IO, item)))
./wine-hotfixes/media_foundation_alpha.patch:6416:-        IMFAsyncResult_Release(item);
./wine-hotfixes/media_foundation_alpha.patch:6418:-    IMFAsyncResult_Release(caller);
./wine-hotfixes/media_foundation_alpha.patch:6424: static HRESULT WINAPI container_stream_handler_EndCreateObject(IMFByteStreamHandler *iface, IMFAsyncResult *result,
./wine-hotfixes/media_foundation_alpha.patch:6425:         MF_OBJECT_TYPE *obj_type, IUnknown **object)
./wine-hotfixes/media_foundation_alpha.patch:6427:     struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:6451:-        hr = IMFAsyncResult_GetStatus(found->result);
./wine-hotfixes/media_foundation_alpha.patch:6452:-        IMFAsyncResult_Release(found->result);
./wine-hotfixes/media_foundation_alpha.patch:6457:-        *obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/media_foundation_alpha.patch:6459:-        hr = MF_E_UNEXPECTED;
./wine-hotfixes/media_foundation_alpha.patch:6466: static HRESULT WINAPI container_stream_handler_CancelObjectCreation(IMFByteStreamHandler *iface, IUnknown *cancel_cookie)
./wine-hotfixes/media_foundation_alpha.patch:6468:     struct container_stream_handler *this = impl_from_IMFByteStreamHandler(iface);
./wine-hotfixes/media_foundation_alpha.patch:6489:-        IMFAsyncResult_Release(found->result);
./wine-hotfixes/media_foundation_alpha.patch:6495:-    return found ? S_OK : MF_E_UNEXPECTED;
./wine-hotfixes/media_foundation_alpha.patch:6499: static HRESULT WINAPI container_stream_handler_GetMaxNumberOfBytesRequiredForResolution(IMFByteStreamHandler *iface, QWORD *bytes)
./wine-hotfixes/media_foundation_alpha.patch:6500:@@ -1814,47 +1596,16 @@ static const IMFByteStreamHandlerVtbl container_stream_handler_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:6504:-static HRESULT WINAPI container_stream_handler_callback_QueryInterface(IMFAsyncCallback *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:6506:-    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/media_foundation_alpha.patch:6510:-        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/media_foundation_alpha.patch:6519:-static ULONG WINAPI container_stream_handler_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:6521:-    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:6522:-    return IMFByteStreamHandler_AddRef(&handler->IMFByteStreamHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:6525:-static ULONG WINAPI container_stream_handler_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:6527:-    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:6528:-    return IMFByteStreamHandler_Release(&handler->IMFByteStreamHandler_iface);
./wine-hotfixes/media_foundation_alpha.patch:6531:-static HRESULT WINAPI container_stream_handler_callback_GetParameters(IMFAsyncCallback *iface, DWORD *flags, DWORD *queue)
./wine-hotfixes/media_foundation_alpha.patch:6536:-static HRESULT container_stream_handler_create_object(struct container_stream_handler *This, WCHAR *url, IMFByteStream *stream, DWORD flags,
./wine-hotfixes/media_foundation_alpha.patch:6537:+static HRESULT container_stream_handler_create_object(struct handler *handler, WCHAR *url, IMFByteStream *stream, DWORD flags,
./wine-hotfixes/media_foundation_alpha.patch:6538:                                             IPropertyStore *props, IUnknown **out_object, MF_OBJECT_TYPE *out_obj_type)
./wine-hotfixes/media_foundation_alpha.patch:6543:     if (flags & MF_RESOLUTION_MEDIASOURCE)
./wine-hotfixes/media_foundation_alpha.patch:6555:-static HRESULT WINAPI container_stream_handler_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/media_foundation_alpha.patch:6557:-    struct container_stream_handler *handler = impl_from_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:6559:-    MF_OBJECT_TYPE obj_type = MF_OBJECT_INVALID;
./wine-hotfixes/media_foundation_alpha.patch:6562:-    IMFAsyncResult *caller;
./wine-hotfixes/media_foundation_alpha.patch:6565:-    caller = (IMFAsyncResult *)IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/media_foundation_alpha.patch:6567:-    if (FAILED(hr = IMFAsyncResult_GetObject(result, &context_object)))
./wine-hotfixes/media_foundation_alpha.patch:6581:-        IMFAsyncResult_AddRef(handler_result->result);
./wine-hotfixes/media_foundation_alpha.patch:6598:-    IMFAsyncResult_SetStatus(caller, hr);
./wine-hotfixes/media_foundation_alpha.patch:6599:-    MFInvokeCallback(caller);
./wine-hotfixes/media_foundation_alpha.patch:6604:-static const IMFAsyncCallbackVtbl container_stream_handler_callback_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:6625:     this->IMFByteStreamHandler_iface.lpVtbl = &container_stream_handler_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:6626:-    this->IMFAsyncCallback_iface.lpVtbl = &container_stream_handler_callback_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:6629:     hr = IMFByteStreamHandler_QueryInterface(&this->IMFByteStreamHandler_iface, riid, obj);
./wine-hotfixes/media_foundation_alpha.patch:6636:Subject: [PATCH 22/40] winegstreamer: Introduce IMFMediaType -> GstCaps
./wine-hotfixes/media_foundation_alpha.patch:6642: dlls/winegstreamer/mfplat.c      | 142 +++++++++++++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:6649:@@ -57,6 +57,7 @@ extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:6651: GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/media_foundation_alpha.patch:6652: IMFMediaType *mf_media_type_from_caps(GstCaps *caps);
./wine-hotfixes/media_foundation_alpha.patch:6653:+GstCaps *caps_from_mf_media_type(IMFMediaType *type);
./wine-hotfixes/media_foundation_alpha.patch:6654: IMFSample *mf_sample_from_gst_buffer(GstBuffer *in);
./wine-hotfixes/media_foundation_alpha.patch:6657:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6659:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6660:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6661:@@ -873,6 +873,148 @@ GstCaps *make_mf_compatible_caps(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:6665:+GstCaps *caps_from_mf_media_type(IMFMediaType *type)
./wine-hotfixes/media_foundation_alpha.patch:6671:+    if (FAILED(IMFMediaType_GetMajorType(type, &major_type)))
./wine-hotfixes/media_foundation_alpha.patch:6673:+    if (FAILED(IMFMediaType_GetGUID(type, &MF_MT_SUBTYPE, &subtype)))
./wine-hotfixes/media_foundation_alpha.patch:6676:+    if (IsEqualGUID(&major_type, &MFMediaType_Video))
./wine-hotfixes/media_foundation_alpha.patch:6682:+        if (FAILED(IMFMediaType_GetUINT64(type, &MF_MT_FRAME_SIZE, &frame_size)))
./wine-hotfixes/media_foundation_alpha.patch:6686:+        if (FAILED(IMFMediaType_GetUINT64(type, &MF_MT_FRAME_RATE, &frame_rate)))
./wine-hotfixes/media_foundation_alpha.patch:6699:+        if (SUCCEEDED(MFCalculateImageSize(&subtype, 100, 100, &unused)))
./wine-hotfixes/media_foundation_alpha.patch:6709:+            if (IsEqualGUID(&subtype, &MFVideoFormat_Base))
./wine-hotfixes/media_foundation_alpha.patch:6752:+    else if (IsEqualGUID(&major_type, &MFMediaType_Audio))
./wine-hotfixes/media_foundation_alpha.patch:6756:+        if (IsEqualGUID(&subtype, &MFAudioFormat_Float))
./wine-hotfixes/media_foundation_alpha.patch:6762:+        else if (IsEqualGUID(&subtype, &MFAudioFormat_PCM))
./wine-hotfixes/media_foundation_alpha.patch:6766:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_BITS_PER_SAMPLE, &bits_per_sample)))
./wine-hotfixes/media_foundation_alpha.patch:6791:+        if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_SAMPLES_PER_SECOND, &rate)))
./wine-hotfixes/media_foundation_alpha.patch:6795:+        if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_NUM_CHANNELS, &channels)))
./wine-hotfixes/media_foundation_alpha.patch:6807: /* IMFSample = GstBuffer
./wine-hotfixes/media_foundation_alpha.patch:6808:    IMFBuffer = GstMemory */
./wine-hotfixes/media_foundation_alpha.patch:6820: dlls/winegstreamer/mfplat.c | 48 +++++++++++++++++++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:6823:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6825:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6826:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6827:@@ -945,6 +945,54 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type)
./wine-hotfixes/media_foundation_alpha.patch:6831:+        else if (IsEqualGUID(&subtype, &MFVideoFormat_H264))
./wine-hotfixes/media_foundation_alpha.patch:6839:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_MPEG2_PROFILE, &h264_profile)))
./wine-hotfixes/media_foundation_alpha.patch:6852:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_MPEG2_LEVEL, &h264_level)))
./wine-hotfixes/media_foundation_alpha.patch:6892: dlls/winegstreamer/mfplat.c | 18 ++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:6895:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6897:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6898:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6899:@@ -993,6 +993,24 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type)
./wine-hotfixes/media_foundation_alpha.patch:6903:+        else if (IsEqualGUID(&subtype, &MFVideoFormat_WVC1))
./wine-hotfixes/media_foundation_alpha.patch:6912:+            if (SUCCEEDED(IMFMediaType_GetAllocatedBlob(type, &MF_MT_USER_DATA, &user_data, &user_data_size)))
./wine-hotfixes/media_foundation_alpha.patch:6918:+                CoTaskMemFree(user_data);
./wine-hotfixes/media_foundation_alpha.patch:6934: dlls/winegstreamer/mfplat.c | 66 +++++++++++++++++++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:6937:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6939:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6940:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:6941:@@ -1059,6 +1059,72 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type)
./wine-hotfixes/media_foundation_alpha.patch:6945:+        else if (IsEqualGUID(&subtype, &MFAudioFormat_AAC))
./wine-hotfixes/media_foundation_alpha.patch:6955:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AAC_PAYLOAD_TYPE, &payload_type)))
./wine-hotfixes/media_foundation_alpha.patch:6978:+            if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION, &indication)))
./wine-hotfixes/media_foundation_alpha.patch:6998:+            if (SUCCEEDED(IMFMediaType_GetAllocatedBlob(type, &MF_MT_USER_DATA, (BYTE **) &user_data, &user_data_size)))
./wine-hotfixes/media_foundation_alpha.patch:7008:+                CoTaskMemFree(user_data);
./wine-hotfixes/media_foundation_alpha.patch:7020:Subject: [PATCH 26/40] Introduce IMFSample -> GstBuffer converter.
./wine-hotfixes/media_foundation_alpha.patch:7025: dlls/winegstreamer/mfplat.c      | 74 ++++++++++++++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:7032:@@ -59,6 +59,7 @@ GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/media_foundation_alpha.patch:7033: IMFMediaType *mf_media_type_from_caps(GstCaps *caps);
./wine-hotfixes/media_foundation_alpha.patch:7034: GstCaps *caps_from_mf_media_type(IMFMediaType *type);
./wine-hotfixes/media_foundation_alpha.patch:7035: IMFSample *mf_sample_from_gst_buffer(GstBuffer *in);
./wine-hotfixes/media_foundation_alpha.patch:7036:+GstBuffer *gst_buffer_from_mf_sample(IMFSample *in);
./wine-hotfixes/media_foundation_alpha.patch:7040:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:7042:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:7043:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:7044:@@ -1235,4 +1235,78 @@ IMFSample* mf_sample_from_gst_buffer(GstBuffer *gst_buffer)
./wine-hotfixes/media_foundation_alpha.patch:7045:     ERR("Failed to copy IMFSample to GstBuffer, hr = %#x\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:7046:     IMFSample_Release(out);
./wine-hotfixes/media_foundation_alpha.patch:7050:+GstBuffer* gst_buffer_from_mf_sample(IMFSample *mf_sample)
./wine-hotfixes/media_foundation_alpha.patch:7053:+    IMFMediaBuffer *mf_buffer = NULL;
./wine-hotfixes/media_foundation_alpha.patch:7058:+    if (FAILED(hr = IMFSample_GetSampleDuration(mf_sample, &duration)))
./wine-hotfixes/media_foundation_alpha.patch:7061:+    if (FAILED(hr = IMFSample_GetSampleTime(mf_sample, &time)))
./wine-hotfixes/media_foundation_alpha.patch:7067:+    if (FAILED(hr = IMFSample_GetBufferCount(mf_sample, &buffer_count)))
./wine-hotfixes/media_foundation_alpha.patch:7077:+        if (FAILED(hr = IMFSample_GetBufferByIndex(mf_sample, i, &mf_buffer)))
./wine-hotfixes/media_foundation_alpha.patch:7080:+        if (FAILED(hr = IMFMediaBuffer_GetMaxLength(mf_buffer, &buffer_max_size)))
./wine-hotfixes/media_foundation_alpha.patch:7083:+        if (FAILED(hr = IMFMediaBuffer_GetCurrentLength(mf_buffer, &buffer_size)))
./wine-hotfixes/media_foundation_alpha.patch:7095:+        if (FAILED(hr = IMFMediaBuffer_Lock(mf_buffer, &buf_data, NULL, NULL)))
./wine-hotfixes/media_foundation_alpha.patch:7100:+        if (FAILED(hr = IMFMediaBuffer_Unlock(mf_buffer)))
./wine-hotfixes/media_foundation_alpha.patch:7103:+        if (FAILED(hr = IMFMediaBuffer_SetCurrentLength(mf_buffer, buffer_size)))
./wine-hotfixes/media_foundation_alpha.patch:7110:+        IMFMediaBuffer_Release(mf_buffer);
./wine-hotfixes/media_foundation_alpha.patch:7111:+        mf_buffer = NULL;
./wine-hotfixes/media_foundation_alpha.patch:7117:+    ERR("Failed to copy IMFSample to GstBuffer, hr = %#x\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:7118:+    if (mf_buffer)
./wine-hotfixes/media_foundation_alpha.patch:7119:+        IMFMediaBuffer_Release(mf_buffer);
./wine-hotfixes/media_foundation_alpha.patch:7130:Subject: [PATCH 27/40] winegstreamer: Implement decoder MFT on gstreamer.
./wine-hotfixes/media_foundation_alpha.patch:7138: dlls/winegstreamer/mf_decode.c               | 1318 ++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:7139: dlls/winegstreamer/mfplat.c                  |  143 +-
./wine-hotfixes/media_foundation_alpha.patch:7141: include/mfidl.idl                            |    4 +-
./wine-hotfixes/media_foundation_alpha.patch:7143: create mode 100644 dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:7153:+	mf_decode.c \
./wine-hotfixes/media_foundation_alpha.patch:7154: 	mfplat.c \
./wine-hotfixes/media_foundation_alpha.patch:7165:+    else if (cbdata->type < MF_DECODE_MAX)
./wine-hotfixes/media_foundation_alpha.patch:7166:+        perform_cb_mf_decode(cbdata);
./wine-hotfixes/media_foundation_alpha.patch:7253:+    MF_DECODE_MAX,
./wine-hotfixes/media_foundation_alpha.patch:7274:+void perform_cb_mf_decode(struct cb_data *data) DECLSPEC_HIDDEN;
./wine-hotfixes/media_foundation_alpha.patch:7297:+extern HRESULT mfplat_DllRegisterServer(void) DECLSPEC_HIDDEN;
./wine-hotfixes/media_foundation_alpha.patch:7298: extern HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj) DECLSPEC_HIDDEN;
./wine-hotfixes/media_foundation_alpha.patch:7300: GstCaps *make_mf_compatible_caps(GstCaps *caps);
./wine-hotfixes/media_foundation_alpha.patch:7301:@@ -61,6 +62,12 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type);
./wine-hotfixes/media_foundation_alpha.patch:7302: IMFSample *mf_sample_from_gst_buffer(GstBuffer *in);
./wine-hotfixes/media_foundation_alpha.patch:7303: GstBuffer *gst_buffer_from_mf_sample(IMFSample *in);
./wine-hotfixes/media_foundation_alpha.patch:7324:+    return mfplat_DllRegisterServer();
./wine-hotfixes/media_foundation_alpha.patch:7328:diff --git a/dlls/winegstreamer/mf_decode.c b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:7332:+++ b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:7346:+#include "mfapi.h"
./wine-hotfixes/media_foundation_alpha.patch:7347:+#include "mferror.h"
./wine-hotfixes/media_foundation_alpha.patch:7348:+#include "mfobjects.h"
./wine-hotfixes/media_foundation_alpha.patch:7349:+#include "mftransform.h"
./wine-hotfixes/media_foundation_alpha.patch:7354:+WINE_DEFAULT_DEBUG_CHANNEL(mfplat);
./wine-hotfixes/media_foundation_alpha.patch:7356:+const GUID *h264_input_types[] = {&MFVideoFormat_H264};
./wine-hotfixes/media_foundation_alpha.patch:7357:+const GUID *h264_output_types[] = {&MFVideoFormat_I420, &MFVideoFormat_IYUV, &MFVideoFormat_NV12, &MFVideoFormat_YUY2, &MFVideoFormat_YV12};
./wine-hotfixes/media_foundation_alpha.patch:7359:+const GUID *aac_input_types[] = {&MFAudioFormat_AAC};
./wine-hotfixes/media_foundation_alpha.patch:7360:+const GUID *aac_output_types[] = {&MFAudioFormat_Float};
./wine-hotfixes/media_foundation_alpha.patch:7372:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:7379:+        &MFMediaType_Audio,
./wine-hotfixes/media_foundation_alpha.patch:7387:+struct mf_decoder
./wine-hotfixes/media_foundation_alpha.patch:7389:+    IMFTransform IMFTransform_iface;
./wine-hotfixes/media_foundation_alpha.patch:7390:+    IMFAsyncCallback process_message_callback;
./wine-hotfixes/media_foundation_alpha.patch:7394:+    IMFMediaType *input_type, *output_type;
./wine-hotfixes/media_foundation_alpha.patch:7406:+static struct mf_decoder *impl_mf_decoder_from_IMFTransform(IMFTransform *iface)
./wine-hotfixes/media_foundation_alpha.patch:7408:+    return CONTAINING_RECORD(iface, struct mf_decoder, IMFTransform_iface);
./wine-hotfixes/media_foundation_alpha.patch:7411:+static struct mf_decoder *impl_from_message_callback_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:7413:+    return CONTAINING_RECORD(iface, struct mf_decoder, process_message_callback);
./wine-hotfixes/media_foundation_alpha.patch:7416:+static HRESULT WINAPI mf_decoder_QueryInterface (IMFTransform *iface, REFIID riid, void **out)
./wine-hotfixes/media_foundation_alpha.patch:7420:+    if (IsEqualIID(riid, &IID_IMFTransform) ||
./wine-hotfixes/media_foundation_alpha.patch:7424:+        IMFTransform_AddRef(iface);
./wine-hotfixes/media_foundation_alpha.patch:7433:+static ULONG WINAPI mf_decoder_AddRef(IMFTransform *iface)
./wine-hotfixes/media_foundation_alpha.patch:7435:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:7443:+static void mf_decoder_destroy(struct mf_decoder *decoder);
./wine-hotfixes/media_foundation_alpha.patch:7444:+static ULONG WINAPI mf_decoder_Release(IMFTransform *iface)
./wine-hotfixes/media_foundation_alpha.patch:7446:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:7453:+        mf_decoder_destroy(This);
./wine-hotfixes/media_foundation_alpha.patch:7459:+static HRESULT WINAPI mf_decoder_GetStreamLimits(IMFTransform *iface, DWORD *input_minimum, DWORD *input_maximum,
./wine-hotfixes/media_foundation_alpha.patch:7469:+static HRESULT WINAPI mf_decoder_GetStreamCount(IMFTransform *iface, DWORD *inputs, DWORD *outputs)
./wine-hotfixes/media_foundation_alpha.patch:7478:+static HRESULT WINAPI mf_decoder_GetStreamIDs(IMFTransform *iface, DWORD input_size, DWORD *inputs,
./wine-hotfixes/media_foundation_alpha.patch:7487:+static HRESULT WINAPI mf_decoder_GetInputStreamInfo(IMFTransform *iface, DWORD id, MFT_INPUT_STREAM_INFO *info)
./wine-hotfixes/media_foundation_alpha.patch:7489:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:7494:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/media_foundation_alpha.patch:7496:+    /* If we create a wrapped GstBuffer, remove MFT_INPUT_STREAM_DOES_NOT_ADDREF */
./wine-hotfixes/media_foundation_alpha.patch:7497:+    info->dwFlags = MFT_INPUT_STREAM_WHOLE_SAMPLES | MFT_INPUT_STREAM_DOES_NOT_ADDREF;
./wine-hotfixes/media_foundation_alpha.patch:7505:+static HRESULT WINAPI mf_decoder_GetOutputStreamInfo(IMFTransform *iface, DWORD id, MFT_OUTPUT_STREAM_INFO *info)
./wine-hotfixes/media_foundation_alpha.patch:7507:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:7508:+    MFT_OUTPUT_STREAM_INFO stream_info = {};
./wine-hotfixes/media_foundation_alpha.patch:7513:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/media_foundation_alpha.patch:7515:+    stream_info.dwFlags = MFT_OUTPUT_STREAM_PROVIDES_SAMPLES;
./wine-hotfixes/media_foundation_alpha.patch:7524:+static HRESULT WINAPI mf_decoder_GetAttributes(IMFTransform *iface, IMFAttributes **attributes)
./wine-hotfixes/media_foundation_alpha.patch:7528:+    return MFCreateAttributes(attributes, 0);
./wine-hotfixes/media_foundation_alpha.patch:7531:+static HRESULT WINAPI mf_decoder_GetInputStreamAttributes(IMFTransform *iface, DWORD id,
./wine-hotfixes/media_foundation_alpha.patch:7532:+        IMFAttributes **attributes)
./wine-hotfixes/media_foundation_alpha.patch:7539:+static HRESULT WINAPI mf_decoder_GetOutputStreamAttributes(IMFTransform *iface, DWORD id,
./wine-hotfixes/media_foundation_alpha.patch:7540:+        IMFAttributes **attributes)
./wine-hotfixes/media_foundation_alpha.patch:7547:+static HRESULT WINAPI mf_decoder_DeleteInputStream(IMFTransform *iface, DWORD id)
./wine-hotfixes/media_foundation_alpha.patch:7554:+static HRESULT WINAPI mf_decoder_AddInputStreams(IMFTransform *iface, DWORD streams, DWORD *ids)
./wine-hotfixes/media_foundation_alpha.patch:7561:+static HRESULT WINAPI mf_decoder_GetInputAvailableType(IMFTransform *iface, DWORD id, DWORD index,
./wine-hotfixes/media_foundation_alpha.patch:7562:+        IMFMediaType **type)
./wine-hotfixes/media_foundation_alpha.patch:7564:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:7565:+    IMFMediaType *input_type;
./wine-hotfixes/media_foundation_alpha.patch:7571:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/media_foundation_alpha.patch:7574:+        return MF_E_NO_MORE_TYPES;
./wine-hotfixes/media_foundation_alpha.patch:7576:+    if (FAILED(hr = MFCreateMediaType(&input_type)))
./wine-hotfixes/media_foundation_alpha.patch:7579:+    if (FAILED(hr = IMFMediaType_SetGUID(input_type, &MF_MT_MAJOR_TYPE, decoder_descs[This->type].major_type)))
./wine-hotfixes/media_foundation_alpha.patch:7581:+        IMFMediaType_Release(input_type);
./wine-hotfixes/media_foundation_alpha.patch:7585:+    if (FAILED(hr = IMFMediaType_SetGUID(input_type, &MF_MT_SUBTYPE, decoder_descs[This->type].input_types[index])))
./wine-hotfixes/media_foundation_alpha.patch:7587:+        IMFMediaType_Release(input_type);
./wine-hotfixes/media_foundation_alpha.patch:7596:+static void copy_attr(IMFMediaType *target, IMFMediaType *source, const GUID *key)
./wine-hotfixes/media_foundation_alpha.patch:7600:+    if (SUCCEEDED(IMFAttributes_GetItem((IMFAttributes *)source, key, &val)))
./wine-hotfixes/media_foundation_alpha.patch:7602:+        IMFAttributes_SetItem((IMFAttributes* )target, key, &val);
./wine-hotfixes/media_foundation_alpha.patch:7606:+static HRESULT WINAPI mf_decoder_GetOutputAvailableType(IMFTransform *iface, DWORD id, DWORD index,
./wine-hotfixes/media_foundation_alpha.patch:7607:+        IMFMediaType **type)
./wine-hotfixes/media_foundation_alpha.patch:7609:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:7610:+    IMFMediaType *output_type;
./wine-hotfixes/media_foundation_alpha.patch:7616:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/media_foundation_alpha.patch:7619:+        return MF_E_TRANSFORM_TYPE_NOT_SET;
./wine-hotfixes/media_foundation_alpha.patch:7622:+        return MF_E_NO_MORE_TYPES;
./wine-hotfixes/media_foundation_alpha.patch:7624:+    if (FAILED(hr = MFCreateMediaType(&output_type)))
./wine-hotfixes/media_foundation_alpha.patch:7627:+    copy_attr(output_type, This->input_type, &MF_MT_MAJOR_TYPE);
./wine-hotfixes/media_foundation_alpha.patch:7628:+    copy_attr(output_type, This->input_type, &MF_MT_FRAME_SIZE);
./wine-hotfixes/media_foundation_alpha.patch:7629:+    copy_attr(output_type, This->input_type, &MF_MT_FRAME_RATE);
./wine-hotfixes/media_foundation_alpha.patch:7630:+    copy_attr(output_type, This->input_type, &MF_MT_AUDIO_NUM_CHANNELS);
./wine-hotfixes/media_foundation_alpha.patch:7631:+    copy_attr(output_type, This->input_type, &MF_MT_AUDIO_SAMPLES_PER_SECOND);
./wine-hotfixes/media_foundation_alpha.patch:7633:+    if (FAILED(hr = IMFMediaType_SetGUID(output_type, &MF_MT_MAJOR_TYPE, decoder_descs[This->type].major_type)))
./wine-hotfixes/media_foundation_alpha.patch:7635:+        IMFMediaType_Release(output_type);
./wine-hotfixes/media_foundation_alpha.patch:7639:+    if (FAILED(hr = IMFMediaType_SetGUID(output_type, &MF_MT_SUBTYPE, decoder_descs[This->type].output_types[index])))
./wine-hotfixes/media_foundation_alpha.patch:7641:+        IMFMediaType_Release(output_type);
./wine-hotfixes/media_foundation_alpha.patch:7652:+    TRACE("%s mft input pad in %s mode.\n",
./wine-hotfixes/media_foundation_alpha.patch:7665:+    struct mf_decoder *This = gst_pad_get_element_private(pad);
./wine-hotfixes/media_foundation_alpha.patch:7667:+    TRACE("GStreamer queries MFT Input Pad %p for %s\n", This, GST_QUERY_TYPE_NAME(query));
./wine-hotfixes/media_foundation_alpha.patch:7673:+            gst_query_set_caps_result(query, caps_from_mf_media_type(This->input_type));
./wine-hotfixes/media_foundation_alpha.patch:7701:+            ERR("Unhandled query type %s on MFT Input Pad %p\n", GST_QUERY_TYPE_NAME(query), This);
./wine-hotfixes/media_foundation_alpha.patch:7709:+    struct mf_decoder *This = (struct mf_decoder *) user;
./wine-hotfixes/media_foundation_alpha.patch:7813:+static void decoder_update_pipeline(struct mf_decoder *This)
./wine-hotfixes/media_foundation_alpha.patch:7817:+    MFVideoArea *aperture;
./wine-hotfixes/media_foundation_alpha.patch:7865:+    input_caps = caps_from_mf_media_type(This->input_type);
./wine-hotfixes/media_foundation_alpha.patch:7868:+        "mf_src",
./wine-hotfixes/media_foundation_alpha.patch:7898:+    if (SUCCEEDED(IMFMediaType_GetAllocatedBlob(This->output_type, &MF_MT_MINIMUM_DISPLAY_APERTURE, (UINT8 **) &aperture, &aperture_size)))
./wine-hotfixes/media_foundation_alpha.patch:7905:+        if (SUCCEEDED(IMFMediaType_GetUINT64(This->output_type, &MF_MT_FRAME_SIZE, &frame_size)))
./wine-hotfixes/media_foundation_alpha.patch:7918:+        CoTaskMemFree(aperture);
./wine-hotfixes/media_foundation_alpha.patch:7929:+    g_object_set(This->appsink, "caps", caps_from_mf_media_type(This->output_type), NULL);
./wine-hotfixes/media_foundation_alpha.patch:7953:+    gst_pad_push_event(This->input_src, gst_event_new_caps(caps_from_mf_media_type(This->input_type)));
./wine-hotfixes/media_foundation_alpha.patch:7967:+static HRESULT WINAPI mf_decoder_SetInputType(IMFTransform *iface, DWORD id, IMFMediaType *type, DWORD flags)
./wine-hotfixes/media_foundation_alpha.patch:7969:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:7975:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/media_foundation_alpha.patch:7982:+        if (FAILED(hr = IMFMediaType_GetGUID(type, &MF_MT_MAJOR_TYPE, &major_type)))
./wine-hotfixes/media_foundation_alpha.patch:7984:+        if (FAILED(hr = IMFMediaType_GetGUID(type, &MF_MT_SUBTYPE, &subtype)))
./wine-hotfixes/media_foundation_alpha.patch:7996:+                    if (FAILED(hr = IMFMediaType_GetUINT64(type, &MF_MT_FRAME_SIZE, &unused)))
./wine-hotfixes/media_foundation_alpha.patch:8006:+            return MF_E_INVALIDTYPE;
./wine-hotfixes/media_foundation_alpha.patch:8009:+    if (flags & MFT_SET_TYPE_TEST_ONLY)
./wine-hotfixes/media_foundation_alpha.patch:8019:+            if (FAILED(hr = MFCreateMediaType(&This->input_type)))
./wine-hotfixes/media_foundation_alpha.patch:8022:+        if (FAILED(hr = IMFMediaType_CopyAllItems(type, (IMFAttributes*) This->input_type)))
./wine-hotfixes/media_foundation_alpha.patch:8027:+        IMFMediaType_Release(This->input_type);
./wine-hotfixes/media_foundation_alpha.patch:8039:+static HRESULT WINAPI mf_decoder_SetOutputType(IMFTransform *iface, DWORD id, IMFMediaType *type, DWORD flags)
./wine-hotfixes/media_foundation_alpha.patch:8041:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:8047:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/media_foundation_alpha.patch:8058:+            if (FAILED(hr = IMFMediaType_GetGUID(type, &MF_MT_MAJOR_TYPE, &major_type)))
./wine-hotfixes/media_foundation_alpha.patch:8060:+            if (FAILED(hr = IMFMediaType_GetGUID(type, &MF_MT_SUBTYPE, &subtype)))
./wine-hotfixes/media_foundation_alpha.patch:8068:+                    if (FAILED(hr = IMFMediaType_GetUINT64(type, &MF_MT_FRAME_SIZE, &unused)))
./wine-hotfixes/media_foundation_alpha.patch:8077:+    if (flags & MFT_SET_TYPE_TEST_ONLY)
./wine-hotfixes/media_foundation_alpha.patch:8086:+            if (FAILED(hr = MFCreateMediaType(&This->output_type)))
./wine-hotfixes/media_foundation_alpha.patch:8089:+        if (FAILED(hr = IMFMediaType_CopyAllItems(type, (IMFAttributes*) This->output_type)))
./wine-hotfixes/media_foundation_alpha.patch:8094:+        IMFMediaType_Release(This->output_type);
./wine-hotfixes/media_foundation_alpha.patch:8106:+static HRESULT WINAPI mf_decoder_GetInputCurrentType(IMFTransform *iface, DWORD id, IMFMediaType **type)
./wine-hotfixes/media_foundation_alpha.patch:8113:+static HRESULT WINAPI mf_decoder_GetOutputCurrentType(IMFTransform *iface, DWORD id, IMFMediaType **type)
./wine-hotfixes/media_foundation_alpha.patch:8120:+static HRESULT WINAPI mf_decoder_GetInputStatus(IMFTransform *iface, DWORD id, DWORD *flags)
./wine-hotfixes/media_foundation_alpha.patch:8122:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:8126:+    *flags = This->output_counter ? MFT_INPUT_STATUS_ACCEPT_DATA : 0;
./wine-hotfixes/media_foundation_alpha.patch:8131:+static HRESULT WINAPI mf_decoder_GetOutputStatus(IMFTransform *iface, DWORD *flags)
./wine-hotfixes/media_foundation_alpha.patch:8133:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:8137:+    *flags = This->output_counter ? MFT_OUTPUT_STATUS_SAMPLE_READY : 0;
./wine-hotfixes/media_foundation_alpha.patch:8142:+static HRESULT WINAPI mf_decoder_SetOutputBounds(IMFTransform *iface, LONGLONG lower, LONGLONG upper)
./wine-hotfixes/media_foundation_alpha.patch:8149:+static HRESULT WINAPI mf_decoder_ProcessEvent(IMFTransform *iface, DWORD id, IMFMediaEvent *event)
./wine-hotfixes/media_foundation_alpha.patch:8156:+static HRESULT WINAPI decoder_process_message_callback_QueryInterface(IMFAsyncCallback *iface,
./wine-hotfixes/media_foundation_alpha.patch:8161:+    if (IsEqualIID(riid, &IID_IMFAsyncCallback) ||
./wine-hotfixes/media_foundation_alpha.patch:8165:+        IMFAsyncCallback_AddRef(iface);
./wine-hotfixes/media_foundation_alpha.patch:8174:+static ULONG WINAPI decoder_process_message_callback_AddRef(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:8176:+    struct mf_decoder *decoder = impl_from_message_callback_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:8177:+    return IMFTransform_AddRef(&decoder->IMFTransform_iface);
./wine-hotfixes/media_foundation_alpha.patch:8180:+static ULONG WINAPI decoder_process_message_callback_Release(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:8182:+    struct mf_decoder *decoder = impl_from_message_callback_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:8183:+    return IMFTransform_Release(&decoder->IMFTransform_iface);
./wine-hotfixes/media_foundation_alpha.patch:8186:+static HRESULT WINAPI decoder_process_message_callback_GetParameters(IMFAsyncCallback *iface,
./wine-hotfixes/media_foundation_alpha.patch:8192:+const GUID WINE_MFT_MESSAGE_TYPE = {0xd09998bf, 0x102f, 0x4efa, {0x8f,0x84,0x06,0x1f,0xa4,0x10,0xf2,0x64}};
./wine-hotfixes/media_foundation_alpha.patch:8194:+static HRESULT WINAPI decoder_process_message_callback_Invoke(IMFAsyncCallback *iface, IMFAsyncResult *result)
./wine-hotfixes/media_foundation_alpha.patch:8196:+    struct mf_decoder *This = impl_from_message_callback_IMFAsyncCallback(iface);
./wine-hotfixes/media_foundation_alpha.patch:8198:+    IMFAttributes *async_param;
./wine-hotfixes/media_foundation_alpha.patch:8199:+    MFT_MESSAGE_TYPE message_type;
./wine-hotfixes/media_foundation_alpha.patch:8202:+    state = IMFAsyncResult_GetStateNoAddRef(result);
./wine-hotfixes/media_foundation_alpha.patch:8205:+    if (FAILED(hr = IUnknown_QueryInterface(state, &IID_IMFAttributes, (void **)&async_param)))
./wine-hotfixes/media_foundation_alpha.patch:8207:+    if (FAILED(hr = IMFAttributes_GetUINT32(async_param, &WINE_MFT_MESSAGE_TYPE, &message_type)))
./wine-hotfixes/media_foundation_alpha.patch:8209:+        IMFAttributes_Release(async_param);
./wine-hotfixes/media_foundation_alpha.patch:8212:+    IMFAttributes_Release(async_param);
./wine-hotfixes/media_foundation_alpha.patch:8216:+        case MFT_MESSAGE_COMMAND_DRAIN:
./wine-hotfixes/media_foundation_alpha.patch:8240:+static const IMFAsyncCallbackVtbl process_message_callback_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:8249:+static HRESULT WINAPI mf_decoder_ProcessMessage(IMFTransform *iface, MFT_MESSAGE_TYPE message, ULONG_PTR param)
./wine-hotfixes/media_foundation_alpha.patch:8251:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:8252:+    IMFAttributes *async_param;
./wine-hotfixes/media_foundation_alpha.patch:8257:+    if (FAILED(hr = MFCreateAttributes(&async_param, 1)))
./wine-hotfixes/media_foundation_alpha.patch:8262:+        case MFT_MESSAGE_COMMAND_FLUSH:
./wine-hotfixes/media_foundation_alpha.patch:8289:+        case MFT_MESSAGE_COMMAND_DRAIN:
./wine-hotfixes/media_foundation_alpha.patch:8297:+            IMFAttributes_SetUINT32(async_param, &WINE_MFT_MESSAGE_TYPE, message);
./wine-hotfixes/media_foundation_alpha.patch:8300:+            MFPutWorkItem(MF_MULTITHREADED_WORKQUEUE, &This->process_message_callback, (IUnknown *)async_param);
./wine-hotfixes/media_foundation_alpha.patch:8308:+        case MFT_MESSAGE_NOTIFY_BEGIN_STREAMING:
./wine-hotfixes/media_foundation_alpha.patch:8321:+    IMFAttributes_Release(async_param);
./wine-hotfixes/media_foundation_alpha.patch:8325:+static HRESULT WINAPI mf_decoder_ProcessInput(IMFTransform *iface, DWORD id, IMFSample *sample, DWORD flags)
./wine-hotfixes/media_foundation_alpha.patch:8327:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:8339:+        return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/media_foundation_alpha.patch:8342:+        return MF_E_TRANSFORM_TYPE_NOT_SET;
./wine-hotfixes/media_foundation_alpha.patch:8351:+        hr = MF_E_NOTACCEPTING;
./wine-hotfixes/media_foundation_alpha.patch:8355:+    if (!(gst_buffer = gst_buffer_from_mf_sample(sample)))
./wine-hotfixes/media_foundation_alpha.patch:8374:+static HRESULT WINAPI mf_decoder_ProcessOutput(IMFTransform *iface, DWORD flags, DWORD count,
./wine-hotfixes/media_foundation_alpha.patch:8375:+        MFT_OUTPUT_DATA_BUFFER *samples, DWORD *status)
./wine-hotfixes/media_foundation_alpha.patch:8377:+    struct mf_decoder *This = impl_mf_decoder_from_IMFTransform(iface);
./wine-hotfixes/media_foundation_alpha.patch:8378:+    MFT_OUTPUT_DATA_BUFFER *relevant_buffer = NULL;
./wine-hotfixes/media_foundation_alpha.patch:8389:+        return MF_E_TRANSFORM_TYPE_NOT_SET;
./wine-hotfixes/media_foundation_alpha.patch:8393:+        MFT_OUTPUT_DATA_BUFFER *out_buffer = &samples[i];
./wine-hotfixes/media_foundation_alpha.patch:8396:+            return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/media_foundation_alpha.patch:8399:+            return MF_E_INVALIDSTREAMNUMBER;
./wine-hotfixes/media_foundation_alpha.patch:8412:+        return MF_E_TRANSFORM_NEED_MORE_INPUT;
./wine-hotfixes/media_foundation_alpha.patch:8423:+        return MF_E_TRANSFORM_NEED_MORE_INPUT;
./wine-hotfixes/media_foundation_alpha.patch:8429:+    relevant_buffer->pSample = mf_sample_from_gst_buffer(gst_sample_get_buffer(buffer));
./wine-hotfixes/media_foundation_alpha.patch:8437:+static const IMFTransformVtbl mf_decoder_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:8439:+    mf_decoder_QueryInterface,
./wine-hotfixes/media_foundation_alpha.patch:8440:+    mf_decoder_AddRef,
./wine-hotfixes/media_foundation_alpha.patch:8441:+    mf_decoder_Release,
./wine-hotfixes/media_foundation_alpha.patch:8442:+    mf_decoder_GetStreamLimits,
./wine-hotfixes/media_foundation_alpha.patch:8443:+    mf_decoder_GetStreamCount,
./wine-hotfixes/media_foundation_alpha.patch:8444:+    mf_decoder_GetStreamIDs,
./wine-hotfixes/media_foundation_alpha.patch:8445:+    mf_decoder_GetInputStreamInfo,
./wine-hotfixes/media_foundation_alpha.patch:8446:+    mf_decoder_GetOutputStreamInfo,
./wine-hotfixes/media_foundation_alpha.patch:8447:+    mf_decoder_GetAttributes,
./wine-hotfixes/media_foundation_alpha.patch:8448:+    mf_decoder_GetInputStreamAttributes,
./wine-hotfixes/media_foundation_alpha.patch:8449:+    mf_decoder_GetOutputStreamAttributes,
./wine-hotfixes/media_foundation_alpha.patch:8450:+    mf_decoder_DeleteInputStream,
./wine-hotfixes/media_foundation_alpha.patch:8451:+    mf_decoder_AddInputStreams,
./wine-hotfixes/media_foundation_alpha.patch:8452:+    mf_decoder_GetInputAvailableType,
./wine-hotfixes/media_foundation_alpha.patch:8453:+    mf_decoder_GetOutputAvailableType,
./wine-hotfixes/media_foundation_alpha.patch:8454:+    mf_decoder_SetInputType,
./wine-hotfixes/media_foundation_alpha.patch:8455:+    mf_decoder_SetOutputType,
./wine-hotfixes/media_foundation_alpha.patch:8456:+    mf_decoder_GetInputCurrentType,
./wine-hotfixes/media_foundation_alpha.patch:8457:+    mf_decoder_GetOutputCurrentType,
./wine-hotfixes/media_foundation_alpha.patch:8458:+    mf_decoder_GetInputStatus,
./wine-hotfixes/media_foundation_alpha.patch:8459:+    mf_decoder_GetOutputStatus,
./wine-hotfixes/media_foundation_alpha.patch:8460:+    mf_decoder_SetOutputBounds,
./wine-hotfixes/media_foundation_alpha.patch:8461:+    mf_decoder_ProcessEvent,
./wine-hotfixes/media_foundation_alpha.patch:8462:+    mf_decoder_ProcessMessage,
./wine-hotfixes/media_foundation_alpha.patch:8463:+    mf_decoder_ProcessInput,
./wine-hotfixes/media_foundation_alpha.patch:8464:+    mf_decoder_ProcessOutput,
./wine-hotfixes/media_foundation_alpha.patch:8469:+    struct mf_decoder *This = user_data;
./wine-hotfixes/media_foundation_alpha.patch:8500:+static void mf_decoder_destroy(struct mf_decoder *This)
./wine-hotfixes/media_foundation_alpha.patch:8504:+        IMFMediaType_Release(This->input_type);
./wine-hotfixes/media_foundation_alpha.patch:8510:+        IMFMediaType_Release(This->output_type);
./wine-hotfixes/media_foundation_alpha.patch:8532:+    struct mf_decoder *This;
./wine-hotfixes/media_foundation_alpha.patch:8541:+    This->video = decoder_descs[type].major_type == &MFMediaType_Video;
./wine-hotfixes/media_foundation_alpha.patch:8605:+    This->IMFTransform_iface.lpVtbl = &mf_decoder_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:8612:+    ERR("Failed to create Decoder MFT type %u, hr = %#x\n", type, hr);
./wine-hotfixes/media_foundation_alpha.patch:8613:+    mf_decoder_destroy(This);
./wine-hotfixes/media_foundation_alpha.patch:8617:+void perform_cb_mf_decode(struct cb_data *cbdata)
./wine-hotfixes/media_foundation_alpha.patch:8653:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:8655:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:8656:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:8677:     { &CLSID_VideoProcessorMFT, &video_processor_create },
./wine-hotfixes/media_foundation_alpha.patch:8678:+    { &CLSID_CMSH264DecoderMFT, &h264_decoder_create },
./wine-hotfixes/media_foundation_alpha.patch:8679:+    { &CLSID_CMSAACDecMFT, &aac_decoder_create },
./wine-hotfixes/media_foundation_alpha.patch:8683:@@ -449,6 +461,136 @@ HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:8697:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:8698:+        &MFVideoFormat_H264
./wine-hotfixes/media_foundation_alpha.patch:8704:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:8705:+        &MFVideoFormat_I420
./wine-hotfixes/media_foundation_alpha.patch:8708:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:8709:+        &MFVideoFormat_IYUV
./wine-hotfixes/media_foundation_alpha.patch:8712:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:8713:+        &MFVideoFormat_NV12
./wine-hotfixes/media_foundation_alpha.patch:8716:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:8717:+        &MFVideoFormat_YUY2,
./wine-hotfixes/media_foundation_alpha.patch:8720:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:8721:+        &MFVideoFormat_YV12,
./wine-hotfixes/media_foundation_alpha.patch:8729:+        &MFMediaType_Audio,
./wine-hotfixes/media_foundation_alpha.patch:8730:+        &MFAudioFormat_AAC
./wine-hotfixes/media_foundation_alpha.patch:8737:+        &MFMediaType_Audio,
./wine-hotfixes/media_foundation_alpha.patch:8738:+        &MFAudioFormat_Float
./wine-hotfixes/media_foundation_alpha.patch:8742:+static const struct mft
./wine-hotfixes/media_foundation_alpha.patch:8752:+    IMFAttributes *attributes;
./wine-hotfixes/media_foundation_alpha.patch:8754:+mfts[] =
./wine-hotfixes/media_foundation_alpha.patch:8757:+        &CLSID_CMSH264DecoderMFT,
./wine-hotfixes/media_foundation_alpha.patch:8758:+        &MFT_CATEGORY_VIDEO_DECODER,
./wine-hotfixes/media_foundation_alpha.patch:8760:+        MFT_ENUM_FLAG_SYNCMFT,
./wine-hotfixes/media_foundation_alpha.patch:8768:+        &CLSID_CMSAACDecMFT,
./wine-hotfixes/media_foundation_alpha.patch:8769:+        &MFT_CATEGORY_AUDIO_DECODER,
./wine-hotfixes/media_foundation_alpha.patch:8771:+        MFT_ENUM_FLAG_SYNCMFT,
./wine-hotfixes/media_foundation_alpha.patch:8780:+HRESULT mfplat_DllRegisterServer(void)
./wine-hotfixes/media_foundation_alpha.patch:8784:+    for (unsigned int i = 0; i < ARRAY_SIZE(mfts); i++)
./wine-hotfixes/media_foundation_alpha.patch:8786:+        const struct mft *cur = &mfts[i];
./wine-hotfixes/media_foundation_alpha.patch:8788:+        MFT_REGISTER_TYPE_INFO *input_types, *output_types;
./wine-hotfixes/media_foundation_alpha.patch:8802:+        hr = MFTRegister(*(cur->clsid), *(cur->category), cur->name, cur->flags, cur->input_types_count,
./wine-hotfixes/media_foundation_alpha.patch:8810:+            FIXME("Failed to register MFT, hr %#x\n", hr);
./wine-hotfixes/media_foundation_alpha.patch:8832:@@ -61,3 +61,15 @@ coclass VideoProcessorMFT {}
./wine-hotfixes/media_foundation_alpha.patch:8841:+coclass CMSH264DecoderMFT { }
./wine-hotfixes/media_foundation_alpha.patch:8847:+coclass CMSAACDecMFT { }
./wine-hotfixes/media_foundation_alpha.patch:8848:diff --git a/include/mfidl.idl b/include/mfidl.idl
./wine-hotfixes/media_foundation_alpha.patch:8850:--- a/include/mfidl.idl
./wine-hotfixes/media_foundation_alpha.patch:8851:+++ b/include/mfidl.idl
./wine-hotfixes/media_foundation_alpha.patch:8852:@@ -1128,4 +1128,6 @@ cpp_quote("EXTERN_GUID(MF_AUDIO_RENDERER_ATTRIBUTE_ENDPOINT_ROLE, 0x6ba644ff, 0x
./wine-hotfixes/media_foundation_alpha.patch:8853: cpp_quote("EXTERN_GUID(MF_AUDIO_RENDERER_ATTRIBUTE_STREAM_CATEGORY, 0xa9770471, 0x92ec, 0x4df4, 0x94, 0xfe, 0x81, 0xc3, 0x6f, 0x0c, 0x3a, 0x7a);")
./wine-hotfixes/media_foundation_alpha.patch:8855: cpp_quote("EXTERN_GUID(CLSID_VideoProcessorMFT, 0x88753b26, 0x5b24, 0x49bd, 0xb2, 0xe7, 0xc, 0x44, 0x5c, 0x78, 0xc9, 0x82);")
./wine-hotfixes/media_foundation_alpha.patch:8859:+cpp_quote("EXTERN_GUID(CLSID_CMSH264DecoderMFT, 0x62ce7e72, 0x4c71, 0x4d20, 0xb1, 0x5d, 0x45, 0x28, 0x31, 0xa8, 0x7d, 0x9d);")
./wine-hotfixes/media_foundation_alpha.patch:8860:+cpp_quote("EXTERN_GUID(CLSID_CMSAACDecMFT, 0x32d186a7, 0x218f, 0x4c75, 0x88, 0x76, 0xdd, 0x77, 0x27, 0x3a, 0x89, 0x99);")
./wine-hotfixes/media_foundation_alpha.patch:8867:Subject: [PATCH 28/40] mfreadwrite: Select all streams when creating a source
./wine-hotfixes/media_foundation_alpha.patch:8871: dlls/mfreadwrite/reader.c | 4 ++++
./wine-hotfixes/media_foundation_alpha.patch:8874:diff --git a/dlls/mfreadwrite/reader.c b/dlls/mfreadwrite/reader.c
./wine-hotfixes/media_foundation_alpha.patch:8876:--- a/dlls/mfreadwrite/reader.c
./wine-hotfixes/media_foundation_alpha.patch:8877:+++ b/dlls/mfreadwrite/reader.c
./wine-hotfixes/media_foundation_alpha.patch:8878:@@ -2094,6 +2094,10 @@ static HRESULT create_source_reader_from_source(IMFMediaSource *source, IMFAttri
./wine-hotfixes/media_foundation_alpha.patch:8883:+        hr = IMFPresentationDescriptor_SelectStream(object->descriptor, i);
./wine-hotfixes/media_foundation_alpha.patch:8898: dlls/mfplat/main.c                |   5 +-
./wine-hotfixes/media_foundation_alpha.patch:8899: dlls/mfreadwrite/reader.c         |  12 +++-
./wine-hotfixes/media_foundation_alpha.patch:8904:diff --git a/dlls/mfplat/main.c b/dlls/mfplat/main.c
./wine-hotfixes/media_foundation_alpha.patch:8906:--- a/dlls/mfplat/main.c
./wine-hotfixes/media_foundation_alpha.patch:8907:+++ b/dlls/mfplat/main.c
./wine-hotfixes/media_foundation_alpha.patch:8925:@@ -8882,4 +8879,4 @@ HRESULT WINAPI MFCreateDXGIDeviceManager(UINT *token, IMFDXGIDeviceManager **man
./wine-hotfixes/media_foundation_alpha.patch:8926:     *manager = &object->IMFDXGIDeviceManager_iface;
./wine-hotfixes/media_foundation_alpha.patch:8932:diff --git a/dlls/mfreadwrite/reader.c b/dlls/mfreadwrite/reader.c
./wine-hotfixes/media_foundation_alpha.patch:8934:--- a/dlls/mfreadwrite/reader.c
./wine-hotfixes/media_foundation_alpha.patch:8935:+++ b/dlls/mfreadwrite/reader.c
./wine-hotfixes/media_foundation_alpha.patch:8938:     MFT_REGISTER_TYPE_INFO in_type, out_type;
./wine-hotfixes/media_foundation_alpha.patch:8939:     CLSID *clsids, mft_clsid, category;
./wine-hotfixes/media_foundation_alpha.patch:8942:     IMFMediaType *input_type;
./wine-hotfixes/media_foundation_alpha.patch:8951:+                if (SUCCEEDED(MFTEnum(category, 0, &in_type, NULL, NULL, &clsids, &count)) && count)
./wine-hotfixes/media_foundation_alpha.patch:8954:+                    CoTaskMemFree(clsids);
./wine-hotfixes/media_foundation_alpha.patch:8959:         IMFMediaType_Release(input_type);
./wine-hotfixes/media_foundation_alpha.patch:8962:-    return MF_E_TOPO_CODEC_NOT_FOUND;
./wine-hotfixes/media_foundation_alpha.patch:8963:+    return decoder_found ? MF_E_INVALIDREQUEST : MF_E_TOPO_CODEC_NOT_FOUND;
./wine-hotfixes/media_foundation_alpha.patch:8966: static HRESULT WINAPI src_reader_SetCurrentMediaType(IMFSourceReader *iface, DWORD index, DWORD *reserved,
./wine-hotfixes/media_foundation_alpha.patch:8983:     else if (cbdata->type < MF_DECODE_MAX)
./wine-hotfixes/media_foundation_alpha.patch:8984:         perform_cb_mf_decode(cbdata);
./wine-hotfixes/media_foundation_alpha.patch:9001:     IMFMediaSource IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:9002:+    IMFGetService IMFGetService_iface;
./wine-hotfixes/media_foundation_alpha.patch:9003:+    IMFSeekInfo IMFSeekInfo_iface;
./wine-hotfixes/media_foundation_alpha.patch:9004:     IMFAsyncCallback async_commands_callback;
./wine-hotfixes/media_foundation_alpha.patch:9007:@@ -119,6 +121,16 @@ static inline struct media_source *impl_from_IMFMediaSource(IMFMediaSource *ifac
./wine-hotfixes/media_foundation_alpha.patch:9008:     return CONTAINING_RECORD(iface, struct media_source, IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:9011:+static inline struct media_source *impl_from_IMFGetService(IMFGetService *iface)
./wine-hotfixes/media_foundation_alpha.patch:9013:+    return CONTAINING_RECORD(iface, struct media_source, IMFGetService_iface);
./wine-hotfixes/media_foundation_alpha.patch:9016:+static inline struct media_source *impl_from_IMFSeekInfo(IMFSeekInfo *iface)
./wine-hotfixes/media_foundation_alpha.patch:9018:+    return CONTAINING_RECORD(iface, struct media_source, IMFSeekInfo_iface);
./wine-hotfixes/media_foundation_alpha.patch:9021: static inline struct media_source *impl_from_async_commands_callback_IMFAsyncCallback(IMFAsyncCallback *iface)
./wine-hotfixes/media_foundation_alpha.patch:9024:@@ -1083,6 +1095,10 @@ static HRESULT WINAPI media_source_QueryInterface(IMFMediaSource *iface, REFIID
./wine-hotfixes/media_foundation_alpha.patch:9026:         *out = &source->IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:9028:+    else if(IsEqualIID(riid, &IID_IMFGetService))
./wine-hotfixes/media_foundation_alpha.patch:9030:+        *out = &source->IMFGetService_iface;
./wine-hotfixes/media_foundation_alpha.patch:9035:@@ -1177,7 +1193,7 @@ static HRESULT WINAPI media_source_GetCharacteristics(IMFMediaSource *iface, DWO
./wine-hotfixes/media_foundation_alpha.patch:9037:         return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:9039:-    *characteristics = MFMEDIASOURCE_CAN_SEEK;
./wine-hotfixes/media_foundation_alpha.patch:9040:+    *characteristics = MFMEDIASOURCE_CAN_SEEK | MFMEDIASOURCE_CAN_PAUSE;
./wine-hotfixes/media_foundation_alpha.patch:9044:@@ -1317,6 +1333,99 @@ static const IMFMediaSourceVtbl IMFMediaSource_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:9048:+static HRESULT WINAPI source_get_service_QueryInterface(IMFGetService *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:9050:+    struct media_source *source = impl_from_IMFGetService(iface);
./wine-hotfixes/media_foundation_alpha.patch:9051:+    return IMFMediaSource_QueryInterface(&source->IMFMediaSource_iface, riid, obj);
./wine-hotfixes/media_foundation_alpha.patch:9054:+static ULONG WINAPI source_get_service_AddRef(IMFGetService *iface)
./wine-hotfixes/media_foundation_alpha.patch:9056:+    struct media_source *source = impl_from_IMFGetService(iface);
./wine-hotfixes/media_foundation_alpha.patch:9057:+    return IMFMediaSource_AddRef(&source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:9060:+static ULONG WINAPI source_get_service_Release(IMFGetService *iface)
./wine-hotfixes/media_foundation_alpha.patch:9062:+    struct media_source *source = impl_from_IMFGetService(iface);
./wine-hotfixes/media_foundation_alpha.patch:9063:+    return IMFMediaSource_Release(&source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:9066:+static HRESULT WINAPI source_get_service_GetService(IMFGetService *iface, REFGUID service, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:9068:+    struct media_source *source = impl_from_IMFGetService(iface);
./wine-hotfixes/media_foundation_alpha.patch:9073:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:9077:+    if (IsEqualIID(service, &MF_SCRUBBING_SERVICE))
./wine-hotfixes/media_foundation_alpha.patch:9079:+        if (IsEqualIID(riid, &IID_IMFSeekInfo))
./wine-hotfixes/media_foundation_alpha.patch:9081:+            *obj = &source->IMFSeekInfo_iface;
./wine-hotfixes/media_foundation_alpha.patch:9091:+static const IMFGetServiceVtbl IMFGetService_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:9099:+static HRESULT WINAPI source_seek_info_QueryInterface(IMFSeekInfo *iface, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:9101:+    struct media_source *source = impl_from_IMFSeekInfo(iface);
./wine-hotfixes/media_foundation_alpha.patch:9102:+    return IMFMediaSource_QueryInterface(&source->IMFMediaSource_iface, riid, obj);
./wine-hotfixes/media_foundation_alpha.patch:9105:+static ULONG WINAPI source_seek_info_AddRef(IMFSeekInfo *iface)
./wine-hotfixes/media_foundation_alpha.patch:9107:+    struct media_source *source = impl_from_IMFSeekInfo(iface);
./wine-hotfixes/media_foundation_alpha.patch:9108:+    return IMFMediaSource_AddRef(&source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:9111:+static ULONG WINAPI source_seek_info_Release(IMFSeekInfo *iface)
./wine-hotfixes/media_foundation_alpha.patch:9113:+    struct media_source *source = impl_from_IMFSeekInfo(iface);
./wine-hotfixes/media_foundation_alpha.patch:9114:+    return IMFMediaSource_Release(&source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:9117:+static HRESULT WINAPI source_seek_info_GetNearestKeyFrames(IMFSeekInfo *iface, const GUID *format,
./wine-hotfixes/media_foundation_alpha.patch:9120:+    struct media_source *source = impl_from_IMFSeekInfo(iface);
./wine-hotfixes/media_foundation_alpha.patch:9125:+        return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:9133:+static const IMFSeekInfoVtbl IMFSeekInfo_vtbl =
./wine-hotfixes/media_foundation_alpha.patch:9141: static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_type type, struct media_source **out_media_source)
./wine-hotfixes/media_foundation_alpha.patch:9144:@@ -1336,6 +1445,8 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:9147:     object->IMFMediaSource_iface.lpVtbl = &IMFMediaSource_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:9148:+    object->IMFGetService_iface.lpVtbl = &IMFGetService_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:9149:+    object->IMFSeekInfo_iface.lpVtbl = &IMFSeekInfo_vtbl;
./wine-hotfixes/media_foundation_alpha.patch:9153:@@ -1435,7 +1546,6 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:9159:         IMFAttributes *byte_stream_attributes;
./wine-hotfixes/media_foundation_alpha.patch:9161:@@ -1452,6 +1562,7 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, enum source_t
./wine-hotfixes/media_foundation_alpha.patch:9162:             IMFAttributes_Release(byte_stream_attributes);
./wine-hotfixes/media_foundation_alpha.patch:9180: dlls/winegstreamer/mf_decode.c               | 10 +++
./wine-hotfixes/media_foundation_alpha.patch:9181: dlls/winegstreamer/mfplat.c                  | 85 ++++++++++++++++++++
./wine-hotfixes/media_foundation_alpha.patch:9184: include/mfidl.idl                            |  2 +
./wine-hotfixes/media_foundation_alpha.patch:9219:diff --git a/dlls/winegstreamer/mf_decode.c b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:9221:--- a/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:9222:+++ b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:9223:@@ -26,6 +26,9 @@ const GUID *h264_output_types[] = {&MFVideoFormat_I420, &MFVideoFormat_IYUV, &MF
./wine-hotfixes/media_foundation_alpha.patch:9224: const GUID *aac_input_types[] = {&MFAudioFormat_AAC};
./wine-hotfixes/media_foundation_alpha.patch:9225: const GUID *aac_output_types[] = {&MFAudioFormat_Float};
./wine-hotfixes/media_foundation_alpha.patch:9227:+const GUID *wmv_input_types[] = {&MFVideoFormat_WMV3, &MFVideoFormat_WVC1};
./wine-hotfixes/media_foundation_alpha.patch:9228:+const GUID *wmv_output_types[] = {&MFVideoFormat_NV12, &MFVideoFormat_YV12, &MFVideoFormat_YUY2, &MFVideoFormat_UYVY, &MFVideoFormat_YVYU, &MFVideoFormat_NV11, &MFVideoFormat_RGB32, &MFVideoFormat_RGB24, &MFVideoFormat_RGB555, &MFVideoFormat_RGB8};
./wine-hotfixes/media_foundation_alpha.patch:9239:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9247:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:9249:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:9250:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:9274:     { &CLSID_VideoProcessorMFT, &video_processor_create },
./wine-hotfixes/media_foundation_alpha.patch:9275:     { &CLSID_CMSH264DecoderMFT, &h264_decoder_create },
./wine-hotfixes/media_foundation_alpha.patch:9276:     { &CLSID_CMSAACDecMFT, &aac_decoder_create },
./wine-hotfixes/media_foundation_alpha.patch:9282: HRESULT mfplat_get_class_object(REFCLSID rclsid, REFIID riid, void **obj)
./wine-hotfixes/media_foundation_alpha.patch:9292:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9293:+        &MFVideoFormat_WMV3,
./wine-hotfixes/media_foundation_alpha.patch:9296:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9297:+        &MFVideoFormat_WVC1,
./wine-hotfixes/media_foundation_alpha.patch:9304:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9305:+        &MFVideoFormat_NV12,
./wine-hotfixes/media_foundation_alpha.patch:9308:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9309:+        &MFVideoFormat_YV12,
./wine-hotfixes/media_foundation_alpha.patch:9312:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9313:+        &MFVideoFormat_YUY2,
./wine-hotfixes/media_foundation_alpha.patch:9316:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9317:+        &MFVideoFormat_UYVY,
./wine-hotfixes/media_foundation_alpha.patch:9320:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9321:+        &MFVideoFormat_YVYU,
./wine-hotfixes/media_foundation_alpha.patch:9324:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9325:+        &MFVideoFormat_NV11,
./wine-hotfixes/media_foundation_alpha.patch:9328:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9329:+        &MFVideoFormat_RGB32,
./wine-hotfixes/media_foundation_alpha.patch:9332:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9333:+        &MFVideoFormat_RGB24,
./wine-hotfixes/media_foundation_alpha.patch:9336:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9337:+        &MFVideoFormat_RGB565,
./wine-hotfixes/media_foundation_alpha.patch:9340:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9341:+        &MFVideoFormat_RGB555,
./wine-hotfixes/media_foundation_alpha.patch:9344:+        &MFMediaType_Video,
./wine-hotfixes/media_foundation_alpha.patch:9345:+        &MFVideoFormat_RGB8,
./wine-hotfixes/media_foundation_alpha.patch:9349: static const struct mft
./wine-hotfixes/media_foundation_alpha.patch:9352:@@ -551,6 +625,17 @@ mfts[] =
./wine-hotfixes/media_foundation_alpha.patch:9359:+        &MFT_CATEGORY_VIDEO_DECODER,
./wine-hotfixes/media_foundation_alpha.patch:9361:+        MFT_ENUM_FLAG_SYNCMFT,
./wine-hotfixes/media_foundation_alpha.patch:9404:@@ -73,3 +73,15 @@ coclass CMSH264DecoderMFT { }
./wine-hotfixes/media_foundation_alpha.patch:9407: coclass CMSAACDecMFT { }
./wine-hotfixes/media_foundation_alpha.patch:9421:diff --git a/include/mfidl.idl b/include/mfidl.idl
./wine-hotfixes/media_foundation_alpha.patch:9423:--- a/include/mfidl.idl
./wine-hotfixes/media_foundation_alpha.patch:9424:+++ b/include/mfidl.idl
./wine-hotfixes/media_foundation_alpha.patch:9425:@@ -1131,3 +1131,5 @@ cpp_quote("EXTERN_GUID(CLSID_VideoProcessorMFT, 0x88753b26, 0x5b24, 0x49bd, 0xb2
./wine-hotfixes/media_foundation_alpha.patch:9427: cpp_quote("EXTERN_GUID(CLSID_CMSH264DecoderMFT, 0x62ce7e72, 0x4c71, 0x4d20, 0xb1, 0x5d, 0x45, 0x28, 0x31, 0xa8, 0x7d, 0x9d);")
./wine-hotfixes/media_foundation_alpha.patch:9428: cpp_quote("EXTERN_GUID(CLSID_CMSAACDecMFT, 0x32d186a7, 0x218f, 0x4c75, 0x88, 0x76, 0xdd, 0x77, 0x27, 0x3a, 0x89, 0x99);")
./wine-hotfixes/media_foundation_alpha.patch:9438:Subject: [PATCH 31/40] mf: Ask for more samples from upstream node when upon
./wine-hotfixes/media_foundation_alpha.patch:9439: MF_E_TRANSFORM_NEED_MORE_INPUT
./wine-hotfixes/media_foundation_alpha.patch:9442: dlls/mf/session.c | 11 ++++++++++-
./wine-hotfixes/media_foundation_alpha.patch:9445:diff --git a/dlls/mf/session.c b/dlls/mf/session.c
./wine-hotfixes/media_foundation_alpha.patch:9447:--- a/dlls/mf/session.c
./wine-hotfixes/media_foundation_alpha.patch:9448:+++ b/dlls/mf/session.c
./wine-hotfixes/media_foundation_alpha.patch:9453:+static HRESULT session_request_sample_from_node(struct media_session *session, IMFTopologyNode *node, DWORD output);
./wine-hotfixes/media_foundation_alpha.patch:9455: static void session_deliver_sample_to_node(struct media_session *session, IMFTopologyNode *node, unsigned int input,
./wine-hotfixes/media_foundation_alpha.patch:9456:         IMFSample *sample)
./wine-hotfixes/media_foundation_alpha.patch:9458:@@ -2509,7 +2511,14 @@ static void session_deliver_sample_to_node(struct media_session *session, IMFTop
./wine-hotfixes/media_foundation_alpha.patch:9463:+            if (transform_node_pull_samples(topo_node) == MF_E_TRANSFORM_NEED_MORE_INPUT)
./wine-hotfixes/media_foundation_alpha.patch:9465:+                IMFTopologyNode *upstream_node;
./wine-hotfixes/media_foundation_alpha.patch:9468:+                if (SUCCEEDED(IMFTopologyNode_GetInput(node, input, &upstream_node, &upstream_output)))
./wine-hotfixes/media_foundation_alpha.patch:9480:Subject: [PATCH 32/40] mf: Miscelaneous fixes to topology resolution.
./wine-hotfixes/media_foundation_alpha.patch:9483: dlls/mf/topology.c | 16 +++++++++-------
./wine-hotfixes/media_foundation_alpha.patch:9486:diff --git a/dlls/mf/topology.c b/dlls/mf/topology.c
./wine-hotfixes/media_foundation_alpha.patch:9488:--- a/dlls/mf/topology.c
./wine-hotfixes/media_foundation_alpha.patch:9489:+++ b/dlls/mf/topology.c
./wine-hotfixes/media_foundation_alpha.patch:9490:@@ -2006,7 +2006,7 @@ static HRESULT topology_loader_resolve_branch(IMFTopologyNode *src, IMFMediaType
./wine-hotfixes/media_foundation_alpha.patch:9491:                         IMFTopologyNode_ConnectOutput(src, 0, node_dec, 0);
./wine-hotfixes/media_foundation_alpha.patch:9492:                         IMFTopologyNode_ConnectOutput(node_dec, 0, sink, 0);
./wine-hotfixes/media_foundation_alpha.patch:9494:-                        IMFActivate_ShutdownObject(activates_convs[i]);
./wine-hotfixes/media_foundation_alpha.patch:9495:+                        IMFActivate_ShutdownObject(activates_decs[i]);
./wine-hotfixes/media_foundation_alpha.patch:9503:-        if (SUCCEEDED(topology_loader_resolve_branch(clone_src, src_mediatypes[0], clone_sink, MF_CONNECT_DIRECT)))
./wine-hotfixes/media_foundation_alpha.patch:9509:+        for (method = MF_CONNECT_DIRECT; method < MF_CONNECT_RESOLVE_INDEPENDENT_OUTPUTTYPES; method++)
./wine-hotfixes/media_foundation_alpha.patch:9530: dlls/mf/topology.c | 1 +
./wine-hotfixes/media_foundation_alpha.patch:9533:diff --git a/dlls/mf/topology.c b/dlls/mf/topology.c
./wine-hotfixes/media_foundation_alpha.patch:9535:--- a/dlls/mf/topology.c
./wine-hotfixes/media_foundation_alpha.patch:9536:+++ b/dlls/mf/topology.c
./wine-hotfixes/media_foundation_alpha.patch:9537:@@ -2005,6 +2005,7 @@ static HRESULT topology_loader_resolve_branch(IMFTopologyNode *src, IMFMediaType
./wine-hotfixes/media_foundation_alpha.patch:9538:                         IMFTopologyNode_SetObject(node_dec, (IUnknown *)decoder);
./wine-hotfixes/media_foundation_alpha.patch:9539:                         IMFTopologyNode_ConnectOutput(src, 0, node_dec, 0);
./wine-hotfixes/media_foundation_alpha.patch:9540:                         IMFTopologyNode_ConnectOutput(node_dec, 0, sink, 0);
./wine-hotfixes/media_foundation_alpha.patch:9541:+                        IMFTransform_SetOutputType(decoder, 0, decoder_mtype, 0);
./wine-hotfixes/media_foundation_alpha.patch:9543:                         IMFActivate_ShutdownObject(activates_decs[i]);
./wine-hotfixes/media_foundation_alpha.patch:9552: IMFMedisStream::GetMediaSource.
./wine-hotfixes/media_foundation_alpha.patch:9562:@@ -852,12 +852,15 @@ static HRESULT WINAPI media_stream_GetMediaSource(IMFMediaStream *iface, IMFMedi
./wine-hotfixes/media_foundation_alpha.patch:9564:     struct media_stream *stream = impl_from_IMFMediaStream(iface);
./wine-hotfixes/media_foundation_alpha.patch:9570:         return MF_E_SHUTDOWN;
./wine-hotfixes/media_foundation_alpha.patch:9573:+    IMFMediaSource_AddRef(&stream->parent_source->IMFMediaSource_iface);
./wine-hotfixes/media_foundation_alpha.patch:9574:+    *source = &stream->parent_source->IMFMediaSource_iface;
./wine-hotfixes/media_foundation_alpha.patch:9579: static HRESULT WINAPI media_stream_GetStreamDescriptor(IMFMediaStream* iface, IMFStreamDescriptor **descriptor)
./wine-hotfixes/media_foundation_alpha.patch:9589: dlls/winegstreamer/mf_decode.c | 2 +-
./wine-hotfixes/media_foundation_alpha.patch:9590: dlls/winegstreamer/mfplat.c    | 4 ++++
./wine-hotfixes/media_foundation_alpha.patch:9593:diff --git a/dlls/winegstreamer/mf_decode.c b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:9595:--- a/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:9596:+++ b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:9597:@@ -24,7 +24,7 @@ const GUID *h264_input_types[] = {&MFVideoFormat_H264};
./wine-hotfixes/media_foundation_alpha.patch:9598: const GUID *h264_output_types[] = {&MFVideoFormat_I420, &MFVideoFormat_IYUV, &MFVideoFormat_NV12, &MFVideoFormat_YUY2, &MFVideoFormat_YV12};
./wine-hotfixes/media_foundation_alpha.patch:9600: const GUID *aac_input_types[] = {&MFAudioFormat_AAC};
./wine-hotfixes/media_foundation_alpha.patch:9601:-const GUID *aac_output_types[] = {&MFAudioFormat_Float};
./wine-hotfixes/media_foundation_alpha.patch:9602:+const GUID *aac_output_types[] = {&MFAudioFormat_Float, &MFAudioFormat_PCM};
./wine-hotfixes/media_foundation_alpha.patch:9604: const GUID *wmv_input_types[] = {&MFVideoFormat_WMV3, &MFVideoFormat_WVC1};
./wine-hotfixes/media_foundation_alpha.patch:9605: const GUID *wmv_output_types[] = {&MFVideoFormat_NV12, &MFVideoFormat_YV12, &MFVideoFormat_YUY2, &MFVideoFormat_UYVY, &MFVideoFormat_YVYU, &MFVideoFormat_NV11, &MFVideoFormat_RGB32, &MFVideoFormat_RGB24, &MFVideoFormat_RGB555, &MFVideoFormat_RGB8};
./wine-hotfixes/media_foundation_alpha.patch:9606:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:9608:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:9609:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:9612:         &MFMediaType_Audio,
./wine-hotfixes/media_foundation_alpha.patch:9613:         &MFAudioFormat_Float
./wine-hotfixes/media_foundation_alpha.patch:9616:+        &MFMediaType_Audio,
./wine-hotfixes/media_foundation_alpha.patch:9617:+        &MFAudioFormat_PCM
./wine-hotfixes/media_foundation_alpha.patch:9630: dlls/winegstreamer/mfplat.c | 1 +
./wine-hotfixes/media_foundation_alpha.patch:9633:diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:9635:--- a/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:9636:+++ b/dlls/winegstreamer/mfplat.c
./wine-hotfixes/media_foundation_alpha.patch:9637:@@ -965,6 +965,7 @@ static IMFMediaType* transform_to_media_type(GstCaps *caps)
./wine-hotfixes/media_foundation_alpha.patch:9640:                     IMFMediaType_SetGUID(media_type, &MF_MT_SUBTYPE, &MFAudioFormat_AAC);
./wine-hotfixes/media_foundation_alpha.patch:9641:+                    IMFMediaType_SetUINT32(media_type, &MF_MT_AUDIO_BITS_PER_SAMPLE, 16);
./wine-hotfixes/media_foundation_alpha.patch:9729: dlls/winegstreamer/mf_decode.c | 6 +++++-
./wine-hotfixes/media_foundation_alpha.patch:9732:diff --git a/dlls/winegstreamer/mf_decode.c b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:9734:--- a/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:9735:+++ b/dlls/winegstreamer/mf_decode.c
./wine-hotfixes/media_foundation_alpha.patch:9736:@@ -78,6 +78,7 @@ struct mf_decoder
./wine-hotfixes/media_foundation_alpha.patch:9743: static struct mf_decoder *impl_mf_decoder_from_IMFTransform(IMFTransform *iface)
./wine-hotfixes/media_foundation_alpha.patch:9744:@@ -974,7 +975,7 @@ static HRESULT WINAPI mf_decoder_ProcessMessage(IMFTransform *iface, MFT_MESSAGE
./wine-hotfixes/media_foundation_alpha.patch:9745:             IMFAttributes_SetUINT32(async_param, &WINE_MFT_MESSAGE_TYPE, message);
./wine-hotfixes/media_foundation_alpha.patch:9748:-            MFPutWorkItem(MF_MULTITHREADED_WORKQUEUE, &This->process_message_callback, (IUnknown *)async_param);
./wine-hotfixes/media_foundation_alpha.patch:9749:+            MFPutWorkItem(This->message_queue, &This->process_message_callback, (IUnknown *)async_param);
./wine-hotfixes/media_foundation_alpha.patch:9753:@@ -1201,6 +1202,8 @@ static void mf_decoder_destroy(struct mf_decoder *This)
./wine-hotfixes/media_foundation_alpha.patch:9757:+    MFUnlockWorkQueue(This->message_queue);
./wine-hotfixes/media_foundation_alpha.patch:9765:     This->video = decoder_descs[type].major_type == &MFMediaType_Video;
./wine-hotfixes/media_foundation_alpha.patch:9766:+    MFAllocateWorkQueue(&This->message_queue);
./wine-hotfixes/proton_mediafoundation_dllreg.patch:1:diff --git a/dlls/mfplat/main.c b/dlls/mfplat/main.c
./wine-hotfixes/proton_mediafoundation_dllreg.patch:3:--- a/dlls/mfplat/main.c
./wine-hotfixes/proton_mediafoundation_dllreg.patch:4:+++ b/dlls/mfplat/main.c
./wine-hotfixes/proton_mediafoundation_dllreg.patch:5:@@ -1473,6 +1473,20 @@ HRESULT WINAPI MFTUnregister(CLSID clsid)
./wine-hotfixes/proton_mediafoundation_dllreg.patch:24:  *      MFStartup (mfplat.@)
./wine-hotfixes/proton_mediafoundation_dllreg.patch:26:@@ -1480,9 +1494,12 @@ HRESULT WINAPI MFStartup(ULONG version, DWORD flags)
./wine-hotfixes/proton_mediafoundation_dllreg.patch:28: #define MF_VERSION_XP   MAKELONG( MF_API_VERSION, 1 )
./wine-hotfixes/proton_mediafoundation_dllreg.patch:29: #define MF_VERSION_WIN7 MAKELONG( MF_API_VERSION, 2 )
./wine-hotfixes/proton_mediafoundation_dllreg.patch:36:     if (version != MF_VERSION_XP && version != MF_VERSION_WIN7)
./wine-hotfixes/proton_mediafoundation_dllreg.patch:37:         return MF_E_BAD_STARTUP_VERSION;
./wine-hotfixes/proton_mediafoundation_dllreg.patch:47:+    if (FAILED(mfplat_DllRegisterServer()))
./game-patches/mk11.patch:272:     rec->formfactor           = 8; /* DIMM */
./game-patches/ffxv-steam-fix.patch:6:     numSteps = WINTRUST_AddTrustStepsFromFunctions(verifySteps,
./proton-hotfixes/vrclient-use_standard_dlopen_instead_of_the_libwine_wrappers.patch:32:-    vrclient_HmdSystemFactory = wine_dlsym(vrclient_lib, "HmdSystemFactory", NULL, 0);
./proton-hotfixes/vrclient-use_standard_dlopen_instead_of_the_libwine_wrappers.patch:33:+    vrclient_HmdSystemFactory = dlsym(vrclient_lib, "HmdSystemFactory");
./proton-hotfixes/vrclient-use_standard_dlopen_instead_of_the_libwine_wrappers.patch:34:     if(!vrclient_HmdSystemFactory){
./proton-hotfixes/vrclient-use_standard_dlopen_instead_of_the_libwine_wrappers.patch:35:         ERR("unable to load HmdSystemFactory method\n");
./protonprep.sh:269:    echo "proton-specific manual mfplat dll register patch"
./proton/proton-protonify_staging.patch:2149: mfc42.
./proton/proton-protonify_staging.patch:2151:For some applications mfc42 is loaded, but never actually used. We can
./proton/proton-protonify_staging.patch:2189:+         * Some games try to load mfc42.dll, but then proceed to not use it.
./proton/proton-protonify_staging.patch:2192:+        static const WCHAR mfc42W[] = {'m','f','c','4','2',0};
./proton/proton-protonify_staging.patch:2197:+            strcasestrW( libname, mfc42W ))
./proton/proton-protonify_staging.patch:2199:+            WARN_(loaddll)( "Using a fake mfc42 handle\n" );
./proton/proton-protonify_staging.patch:2200:+            status = find_dll_file( load_path, kernel32W, nt_name, pwm, mfc42W, module, image_info, st );
./proton/proton-sdl_joy.patch:1738:+            DICUSTOMFORCE *tsp = effect->lpvTypeSpecificParams;
./proton/proton-sdl_joy.patch:1863:+    else if (IsEqualGUID(&This->guid, &GUID_CustomForce))
./proton/proton-sdl_joy.patch:2037:+        else if (IsEqualGUID(&This->guid, &GUID_CustomForce))
./proton/proton-sdl_joy.patch:2039:+            DICUSTOMFORCE *tsp = effect->lpvTypeSpecificParams;
./proton/proton-sdl_joy.patch:2041:+            if (effect->cbTypeSpecificParams != sizeof(DICUSTOMFORCE))
